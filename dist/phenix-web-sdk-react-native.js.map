{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap bc99f04c441e271f45bc","webpack:///./~/phenix-web-lodash-light/src/index.js","webpack:///./~/phenix-web-assert/src/index.js","webpack:///./~/phenix-rtc/dist/phenix-rtc-react-native.min.js","webpack:///./~/phenix-web-disposable/src/index.js","webpack:///./~/phenix-web-observable/src/index.js","webpack:///./~/phenix-web-event/src/index.js","webpack:///./~/phenix-web-http/src/index.js","webpack:///./src/sdk/streaming/stream.json.js","webpack:///./~/phenix-web-logging/src/index.js","webpack:///./src/sdk/DimensionsChangedMonitor.js","webpack:///./src/sdk/room/member.json.js","webpack:///./src/sdk/room/room.json.js","webpack:///./~/bytebuffer/dist/bytebuffer.js","webpack:///./~/phenix-web-application-activity-detector/src/index.js","webpack:///./~/phenix-web-logging/src/logging.json.js","webpack:///./~/phenix-web-proto/src/index.js","webpack:///./src/sdk/PCastEndPoint.js","webpack:///./src/sdk/logging/pcastLoggerFactory.js","webpack:///./src/sdk/room/Stream.js","webpack:///./src/sdk/room/stream.json.js","webpack:///./src/sdk/PCast.js","webpack:///./src/sdk/express/PCastExpress.js","webpack:///./src/sdk/express/RoomExpress.js","webpack:///./src/sdk/room/RoomService.js","webpack:///./src/sdk/userMedia/UserMediaResolver.js","webpack:///./~/phenix-web-detect-browser/src/index.js","webpack:///./~/phenix-web-event/src/Event.js","webpack:///./~/phenix-web-network-connection-monitor/src/index.js","webpack:///./~/phenix-web-observable/src/Observable.js","webpack:///./~/phenix-web-player/dist/phenix-web-player.min.js","webpack:///./~/phenix-web-proto/src/MQProtocol.js","webpack:///./~/phenix-web-proto/src/MQService.js","webpack:///./src/sdk/AdminAPI.js","webpack:///./src/sdk/audio/AudioContext.js","webpack:///./src/sdk/authentication/AuthenticationService.js","webpack:///./src/sdk/environment.js","webpack:///./src/sdk/express/MemberSelector.js","webpack:///./src/sdk/protocol/telemetryProto.json.js","webpack:///./src/sdk/room/Channel.js","webpack:///./src/sdk/room/Member.js","webpack:///./src/sdk/room/Room.js","webpack:///./src/sdk/room/track.json.js","webpack:///./src/sdk/streaming/PeerConnection.js","webpack:///./src/sdk/streaming/PeerConnectionMonitor.js","webpack:///path (ignored)","webpack:///./src/sdk/audio/AudioSpeakerDetector.js","webpack:///./src/sdk/bandwidth/BandwidthMonitor.js","webpack:///./src/sdk/express/ChannelExpress.js","webpack:///./~/long/dist/long.js","webpack:///./~/phenix-web-application-activity-detector/src/ApplicationActivityDetector.js","webpack:///./~/phenix-web-assert/src/assert.js","webpack:///./~/phenix-web-batch-http/src/BatchHttp.js","webpack:///./~/phenix-web-batch-http/src/index.js","webpack:///./~/phenix-web-closest-endpoint-resolver/src/ClosestEndPointResolver.js","webpack:///./~/phenix-web-closest-endpoint-resolver/src/index.js","webpack:///./~/phenix-web-detect-browser/src/detectBrowser.js","webpack:///./~/phenix-web-disposable/src/Disposable.js","webpack:///./~/phenix-web-disposable/src/DisposableList.js","webpack:///./~/phenix-web-event/src/NamedEvents.js","webpack:///./~/phenix-web-http/src/http.js","webpack:///./~/phenix-web-lodash-light/src/LodashLight.js","webpack:///./~/phenix-web-logging/src/ConsoleAppender.js","webpack:///./~/phenix-web-logging/src/Logger.js","webpack:///./~/phenix-web-network-connection-monitor/src/networkConnectionMonitor.js","webpack:///./~/phenix-web-observable/src/ObservableArray.js","webpack:///./~/phenix-web-observable/src/ObservableMonitor.js","webpack:///./~/phenix-web-proto/src/BatchHttpProto.js","webpack:///./~/phenix-web-proto/src/MQWebSocket.js","webpack:///./~/phenix-web-proto/src/mqProto.json.js","webpack:///./~/phenix-web-reconnecting-websocket/src/ReconnectingWebSocket.js","webpack:///./~/phenix-web-reconnecting-websocket/src/index.js","webpack:///./~/process/browser.js","webpack:///./~/protobufjs/dist/protobuf.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/sdk/PCastProtocol.js","webpack:///./src/sdk/audio/AudioSpeakerDetectionAlgorithm.js","webpack:///./src/sdk/audio/AudioVolumeMeter.js","webpack:///./src/sdk/audio/AudioVolumeMeterFactory.js","webpack:///./src/sdk/bandwidth/PublisherBandwidthAdjuster.js","webpack:///./src/sdk/chat/ChatService.js","webpack:///./src/sdk/chat/RoomChatService.js","webpack:///./src/sdk/logging/TelemetryAppender.js","webpack:///./src/sdk/logging/telemetryAppenderFactory.js","webpack:///./src/sdk/protocol/chatProto.json.js","webpack:///./src/sdk/protocol/pcastProto.json.js","webpack:///./src/sdk/room/ChannelService.js","webpack:///./src/sdk/room/ImmutableRoom.js","webpack:///./src/sdk/sdpUtil.js","webpack:///./src/sdk/streaming/HlsRenderer.js","webpack:///./src/sdk/streaming/PhenixLiveStream.js","webpack:///./src/sdk/streaming/PhenixPlayerRenderer.js","webpack:///./src/sdk/streaming/PhenixRealTimeRenderer.js","webpack:///./src/sdk/streaming/PhenixRealTimeStream.js","webpack:///./src/sdk/streaming/ShakaRenderer.js","webpack:///./src/sdk/streaming/StreamWrapper.js","webpack:///./src/sdk/streaming/shaka.json.js","webpack:///./src/sdk/telemetry/MetricsTransmitter.js","webpack:///./src/sdk/telemetry/NetworkMonitor.js","webpack:///./src/sdk/telemetry/SessionTelemetry.js","webpack:///./src/sdk/telemetry/StreamTelemetry.js","webpack:///./src/sdk/telemetry/metricsTransmitterFactory.js","webpack:///./src/sdk/userMedia/ResolutionProvider.js","webpack:///./src/sdk/userMedia/ScreenShareExtensionManager.js","webpack:///./src/sdk/userMedia/UserMediaProvider.js","webpack:///fs (ignored)","webpack:///./src/web-sdk.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,qG;;;;;;ACnBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uHAA6M,4JAA4J,KAAK,yRAAyR,6DAA6D,wBAAwB,mBAAmB,cAAc,4BAA4B,YAAY,qBAAqB,2DAA2D,SAAS,mCAAmC,SAAS,qBAAqB,qCAAqC,oCAAoC,EAAE,iBAAiB,iCAAiC,oBAAoB,YAAY,UAAU,sBAAsB,mBAAmB,iDAAiD,kBAAkB,kBAAkB,aAAa,QAAQ,kBAAkB,aAAa,iBAAiB,8DAA8D,WAAW,yCAAyC,eAAe,eAAe,YAAY,eAAe,YAAY,iBAAiB,QAAQ,qCAAqC,aAAa,kBAAkB,WAAW,mEAAmE,kBAAkB,0HAA0H,IAAI,kMAAkM,qBAAqB,sBAAsB,sBAAsB,uBAAuB,6BAA6B,4BAA4B,yBAAyB,0BAA0B,yDAAyD,aAAa,uOAA2P,YAAY,8BAA8B,SAAS,6CAA6C,cAAc,kCAAsC,iFAAqF,kBAAkB,mEAAmE,sBAAsB,iEAAiE,kBAAkB,sEAAsE,sBAAsB,MAAM,mBAAmB,6EAA6E,cAAc,aAAa,mBAAmB,iBAAiB,WAAW,4BAA4B,WAAW,qCAAqC,gBAAgB,MAAM,wJAAoK,oEAAwE,EAAE,aAAa,wCAAwC,WAAW,sBAAsB,keAAke,aAAa,uBAAuB,kCAAkC,uCAAuC,sBAAsB,mIAAmI,EAAE,KAAK,eAAe,sBAAsB,mVAAmV,sDAAsD,yDAAyD,sDAAsD,EAAE,aAAa,WAAW,kCAAkC,uCAAuC,sBAAsB,oCAAoC,sBAAsB,KAAK,sBAAsB,gLAAgL,EAAE,KAAK,wDAAwD,uBAA2B,ySAAyS,oDAAoD,KAAK,gBAAgB,uBAAuB,SAAS,EAAE,kBAAkB,eAAe,SAAS,iBAAiB,qCAAqC,cAAc,cAAc,uCAAuC,IAAI,2CAA2C,yBAAyB,yCAAyC,aAAa,0CAA0C,mCAAmC,4CAA4C,qCAAqC,2CAA2C,oCAAoC,oDAAoD,sEAAsE,gDAAgD,kEAAkE,4CAA4C,8DAA8D,EAAE,iCAAiC,WAAW,mCAAmC,cAAc,oBAAoB,mCAAmC,mBAAmB,8CAA8C,mBAAmB,iDAAiD,mBAAmB,GAAG,yCAAyC,iBAAiB,QAAQ,uBAAuB,aAAa,cAAc,sBAAsB,2DAA2D,uCAAuC,cAAc,2DAA2D,+BAA+B,eAAe,gBAAgB,yJAAyJ,uIAAuI,MAAM,KAAK,wCAAwC,sEAAsE,GAAG,yCAAyC,eAAe,YAAY,eAAe,YAAY,iBAAiB,QAAQ,mEAAmE,aAAa,aAAa,oCAAoC,qBAAqB,yBAAyB,4dAA4d,uCAAuC,kCAAkC,yCAAyC,8BAA8B,qBAAqB,0GAA0G,wCAAwC,2DAA2D,wBAAwB,IAAI,EAAE,0BAA0B,SAAS,6CAA6C,yFAAyF,SAAS,2BAA2B,qBAAqB,OAAO,EAAE,yCAAyC,iBAAiB,QAAQ,uBAAuB,aAAa,kBAAkB,6HAA6H,SAAS,yCAAyC,eAAe,MAAM,aAAa,YAAY,GAAG,IAAI,iDAAiD,SAAS,oCAAoC,YAAY,iBAAiB,aAAa,QAAQ,8BAA8B,6BAA6B,KAAK,gBAAgB,yCAAyC,iBAAiB,QAAQ,mDAAmD,aAAa,aAAa,WAAW,iCAAiC,kBAAkB,kKAAkK,IAAI,kEAAkE,cAAc,YAAY,kCAAkC,SAAS,uCAAuC,aAAa,yIAAiJ,aAAa,gCAAoC,sEAAsE,qBAAqB,sBAAsB,sBAAsB,uBAAuB,6BAA6B,4BAA4B,yBAAyB,0BAA0B,oDAAwD,cAAc,mCAAuC,4DAA4D,gBAAgB,wEAAwE,oCAAoC,sBAAsB,uDAAuD,cAAc,iBAAiB,WAAW,yBAAyB,eAAe,MAAM,6BAA6B,MAAM,0CAA0C,MAAM,uDAAuD,MAAM,oEAAoE,MAAM,iFAAiF,MAAM,wFAAwF,uFAAuF,gCAAgC,OAAO,IAAI,gBAAgB,sFAAsF,gBAAgB,iBAAiB,cAAc,kCAAkC,4BAA4B,EAAE,kBAAkB,MAAM,sCAAsC,UAAU,iCAAiC,yIAAyI,yBAAyB,wBAAwB,KAAK,EAAE,GAAG,gBAAgB,yFAAyF,iCAAiC,gBAAgB,4GAA4G,aAAa,GAAG,iBAAiB,qCAAqC,cAAc,cAAc,uCAAuC,IAAI,uCAAuC,WAAW,mCAAmC,cAAc,oBAAoB,kCAAkC,iBAAiB,iCAAiC,yBAAyB,0BAA0B,qDAAqD,WAAW,kDAAkD,sGAAsG,oDAAoD,SAAS,SAAS,SAAS,kCAAkC,4EAA4E,mCAAmC,kCAAkC,wDAAwD,yDAAyD,4DAA4D,6DAA6D,sDAAsD,uDAAuD,2CAA2C,WAAW,mBAAmB,6CAA6C,6CAA6C,WAAW,uBAAuB,mDAAmD,yCAAyC,yBAAyB,0BAA0B,6CAA6C,qCAAqC,+CAA+C,oDAAoD,GAAG,yCAAyC,iBAAiB,QAAQ,oDAAoD,aAAa,aAAa,ycAAyc,kBAAkB,sDAAsD,4BAA4B,cAAc,sFAAsF,iBAAiB,8BAA8B,cAAc,6GAA6G,qBAAqB,mCAAmC,MAAM,MAAM,8DAA8D,mCAAmC,MAAM,MAAM,gEAAgE,mCAAmC,MAAM,MAAM,4DAA4D,mCAAmC,MAAM,MAAM,oDAAoD,8DAA8D,iBAAiB,oFAAoF,yBAAyB,yCAAyC,MAAM,MAAM,4DAA4D,iEAAiE,cAAc,+DAA+D,cAAc,mEAAmE,qBAAqB,yCAAyC,MAAM,MAAM,6DAA6D,kBAAkB,2BAA2B,kJAAkJ,oBAAoB,sBAAsB,4BAA4B,WAAW,KAAK,WAAW,yBAAyB,4CAA4C,iIAAiI,kCAAkC,+EAA+E,MAAM,kBAAkB,IAAI,mBAAmB,0BAA0B,QAAQ,MAAM,cAAc,YAAY,WAAW,gBAAgB,gBAAgB,2EAA2E,mFAAmF,SAAS,sBAAsB,2BAA2B,yCAAyC,8BAA8B,yCAAyC,EAAE,OAAO,EAAE,gBAAgB,kNAAkN,gBAAgB,0BAA0B,gBAAgB,qBAAqB,kBAAkB,UAAU,gBAAgB,kBAAkB,iCAAiC,qHAAqH,EAAE,MAAM,mCAAmC,wMAAwM,EAAE,SAAS,gBAAgB,MAAM,MAAM,uBAAuB,oKAAoK,KAAK,gBAAgB,+EAA+E,wDAAwD,gBAAgB,EAAE,gBAAgB,qBAAqB,kDAAkD,iBAAiB,qCAAqC,iKAAiK,kBAAkB,IAAI,OAAO,yMAAyM,iCAAiC,4HAA4H,IAAI,yCAAyC,iBAAiB,QAAQ,kBAAkB,aAAa,mBAAmB,SAAS,yCAAyC,GAAG,E;;;;;;ACfxgmB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,qG;;;;;;ACvBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,qG;;;;;;AC3BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,qG;;;;;;ACvBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC/ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AAAA,qG;;;;;;AC9BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACvHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC/DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACnED;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA,qBAAqB,MAAM,wBAAwB,EAAE;AACrD;AACA,SAAS;AACT;AACA,oDAAoD;;AAEpD,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ,yCAAyC,kCAAkC;AAClG,eAAe,SAAS;AACxB,SAAS,gCAAgC;AACzC,eAAe,SAAS;AACxB,SAAS,kCAAkC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,uBAAuB;AACxC;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,mCAAmC;AACpD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ,yCAAyC,kCAAkC;AAClG,eAAe,SAAS;AACxB,SAAS,gCAAgC;AACzC,eAAe,SAAS;AACxB,SAAS,kCAAkC;AAC3C,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,qDAAqD;AACpE,eAAe,kBAAkB;AACjC;AACA,eAAe,SAAS;AACxB,YAAY,gCAAgC;AAC5C,eAAe,SAAS;AACxB,SAAS,kCAAkC;AAC3C,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,wBAAwB;AAC5F,SAAS,uBAAuB;AAChC,eAAe,4DAA4D;AAC3E,eAAe,kBAAkB;AACjC;AACA,eAAe,SAAS;AACxB,SAAS,gCAAgC;AACzC,eAAe,SAAS;AACxB,SAAS,kCAAkC;AAC3C,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,SAAS,0CAA0C;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAwE;AACjF;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA,SAAS;AACT,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,wBAAwB;AAC/E;AACA,eAAe,4CAA4C;AAC3D;AACA,eAAe,iBAAiB;AAChC,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,kDAAkD,wBAAwB;AACjG,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,2BAA2B;AACtF;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,kDAAkD,wBAAwB;AACjG,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;;AAEA;AACA,0DAA0D,0BAA0B;AACpF;AACA,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,kDAAkD,wBAAwB;AACjG,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D,4BAA4B;AACzF;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,kDAAkD,wBAAwB;AACjG,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,2BAA2B;AACvF;AACA,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,kDAAkD,wBAAwB;AACjG,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,4BAA4B;AACvF;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,kDAAkD,wBAAwB;AACjG,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,OAAO;AACxB,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;;AAEA;AACA,0DAA0D,2BAA2B;AACrF;AACA,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,OAAO;AACxB,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,kDAAkD,wBAAwB;AACjG,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D,6BAA6B;AAC1F;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,kDAAkD,wBAAwB;AACjG,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,OAAO;AACxB,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,4BAA4B;AACxF;AACA,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,OAAO;AACxB,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,4BAA4B;AACvF,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA,0DAA0D,2BAA2B;AACrF,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D,6BAA6B;AAC1F;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,4BAA4B;AACxF;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,mBAAmB,QAAQ,mDAAmD,wBAAwB;AACtG,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+DAA+D,4BAA4B;AAC3F,mBAAmB,aAAa;AAChC,mBAAmB,QAAQ,mDAAmD,wBAAwB;AACtG,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ,oDAAoD,wBAAwB;AACvG,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D,2BAA2B;AACzF,mBAAmB,QAAQ,oDAAoD,wBAAwB;AACvG,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,mBAAmB,QAAQ,mDAAmD,wBAAwB;AACtG,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAiE,6BAA6B;AAC9F;AACA,mBAAmB,aAAa;AAChC,mBAAmB,QAAQ,mDAAmD,wBAAwB;AACtG,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ,oDAAoD,wBAAwB;AACvG,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gEAAgE,4BAA4B;AAC5F;AACA,mBAAmB,QAAQ,oDAAoD,wBAAwB;AACvG,qBAAqB;AACrB;AACA;AACA;;AAEA,KAAK;;;AAGL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc,WAAW;;AAEzB;AACA;AACA;AACA,cAAc,WAAW;;AAEzB;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,cAAc,WAAW;;AAEzB;AACA;AACA,cAAc,UAAU;;AAExB;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,8BAA8B;AAChF;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,6BAA6B;AAC9E;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,8BAA8B;AAChF;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,6BAA6B;AAC9E;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG,iBAAiB;AACjB;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO,sCAAsC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG;AACA,iBAAiB,SAAS,+BAA+B;AACzD;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG;AACA,iBAAiB,SAAS,+BAA+B;AACzD;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,qBAAqB,OAAO,sCAAsC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,QAAQ,mDAAmD,wBAAwB;AACtG;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,QAAQ,mDAAmD,wBAAwB;AACtG;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ,oDAAoD,wBAAwB;AACvG;AACA,qBAAqB,QAAQ,6BAA6B;AAC1D;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,2BAA2B;AAC/D,oCAAoC,2BAA2B;AAC/D,oCAAoC,2BAA2B;AAC/D,oCAAoC,2BAA2B;AAC/D,oCAAoC,2BAA2B;AAC/D,oCAAoC,2BAA2B;AAC/D,oCAAoC,2BAA2B;AAC/D,oCAAoC,2BAA2B;AAC/D,oCAAoC,2BAA2B;AAC/D,oCAAoC,2BAA2B;AAC/D,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ,oDAAoD,wBAAwB;AACvG;AACA,qBAAqB,QAAQ,6BAA6B;AAC1D;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG;AACA,iBAAiB,SAAS,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG;AACA,iBAAiB,SAAS,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,iCAAiC;AAC5F;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E,oCAAoC;AACjH;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,SAAS,+BAA+B;AACxC,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG;AACA,iBAAiB,SAAS,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,aAAa;AACb,oBAAoB;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,0DAA0D,gCAAgC;AAC1F;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,SAAS,+BAA+B;AACxC,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG;AACA,iBAAiB,SAAS,gCAAgC;AAC1D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ,mDAAmD,wBAAwB;AAClG;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG;AACA,iBAAiB,SAAS,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,eAAe,4CAA4C;AAC3D;AACA,eAAe,iBAAiB;AAChC,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,QAAQ,oDAAoD,wBAAwB;AACnG;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,wBAAwB,aAAa,uBAAuB;AAChH,6CAA6C,8BAA8B;AAC3E,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+FAA+F,wBAAwB;AACvH,SAAS,8BAA8B,MAAM,uBAAuB;AACpE,eAAe,SAAS;AACxB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,wBAAwB;AAC3E,iBAAiB,wBAAwB,MAAM,uBAAuB;AACtE,eAAe,8BAA8B;AAC7C,eAAe,QAAQ,wCAAwC;AAC/D,eAAe,QAAQ,oCAAoC;AAC3D,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,wBAAwB;AAC7G,SAAS,uBAAuB;AAChC,eAAe,QAAQ,kCAAkC,wBAAwB;AACjF,eAAe,QAAQ,8BAA8B,uBAAuB;AAC5E,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gGAAgG,wBAAwB;AACxH,SAAS,uBAAuB;AAChC,eAAe,YAAY;AAC3B,eAAe,QAAQ,qEAAqE;AAC5F;AACA,eAAe,QAAQ,mEAAmE,wBAAwB;AAClH;AACA,eAAe,QAAQ,sDAAsD;AAC7E,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uDAAuD,wBAAwB;AAC/E;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,wBAAwB,MAAM,uBAAuB;AAC9D,eAAe,cAAc;AAC7B,eAAe,QAAQ,4CAA4C,wBAAwB;AAC3F,yCAAyC,wBAAwB;AACjE,eAAe,QAAQ,8BAA8B,uBAAuB;AAC5E,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ,qCAAqC,wBAAwB;AACpF,iBAAiB,YAAY;AAC7B,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gCAAgC;AAC/C;AACA,eAAe,iBAAiB;AAChC,eAAe,QAAQ,qDAAqD,wBAAwB;AACpG;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,QAAQ,qDAAqD,wBAAwB;AACpG;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oFAAoF,wBAAwB;AAC5G,SAAS,uBAAuB;AAChC,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB,wCAAwC;AACjG,yCAAyC,8BAA8B;AACvE;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,YAAY;AAC7B,gBAAgB,UAAU;AAC1B,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ,wCAAwC;AAC/D,eAAe,QAAQ,oCAAoC;AAC3D,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ,kCAAkC,wBAAwB;AACjF,eAAe,QAAQ,8BAA8B,uBAAuB;AAC5E,iBAAiB,YAAY,oEAAoE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB,MAAM,uBAAuB;AAC9D,eAAe,SAAS;AACxB;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,wBAAwB,MAAM,uBAAuB,uBAAuB,0BAA0B;AAC/G;AACA,eAAe,SAAS;AACxB;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,eAAe,QAAQ,wCAAwC;AAC/D,eAAe,QAAQ,oCAAoC;AAC3D,iBAAiB,OAAO;AACxB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,mBAAmB,kBAAkB;AACrC,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,QAAQ;AAC7B;AACA;AACA,sCAAsC,EAAE,mBAAmB,EAAE,iBAAiB,EAAE;AAChF;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,eAAe,QAAQ,wCAAwC,wBAAwB;AACvF,eAAe,QAAQ,oCAAoC,uBAAuB;AAClF,iBAAiB,OAAO;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,eAAe;AACf;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,SAAS,gCAAgC;AACzC,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,QAAQ,wCAAwC,wBAAwB;AACvF,eAAe,QAAQ,oCAAoC,uBAAuB;AAClF,iBAAiB,OAAO;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,SAAS,gCAAgC;AACzC,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,SAAS,gCAAgC;AACzC,eAAe,SAAS;AACxB,SAAS,kCAAkC;AAC3C,iBAAieAAe,QAAQ,wCAAwC,wBAAwB;AACvF,eAAe,QAAQ,oCAAoC,uBAAuB;AAClF,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,SAAS,gCAAgC;AACzC,eAAe,SAAS;AACxB,SAAS,kCAAkC;AAC3C,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,mBAAmB,kBAAkB;AACrC,oBAAoB,WAAW;AAC/B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA,mBAAmB,kBAAkB;AACrC,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA,4CAA4C,aAAa;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,mBAAmB,kBAAkB;AACrC,oBAAoB,WAAW;AAC/B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,oBAAoB;AACpB,aAAa;AACb;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA,mDAAmD,wBAAwB,MAAM,uBAAuB;AACxG;AACA,iBAAiB,OAAO;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,SAAS,gCAAgC;AACzC,eAAe,SAAS;AACxB,SAAS,kCAAkC;AAC3C,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;ACjqHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC/BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,qG;;;;;;ACzBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,uEAAuE,mBAAmB;AAC1F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0EAA0E,sBAAsB;AAChG;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;;AAEA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AChID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACjqG;;;;;;AC9KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,YAAY,gBAAgB;;AAExE;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,+DAA+D,uCAAuC;AACtG;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA,wEAAwE,gCAAgC;;AAExG;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA,oEAAoE,gCAAgC;;AAEpG;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gDAAgD,YAAY,uCAAuC;AACnG;AACA,iDAAiD,GAAG,uCAAuC;;AAE3F;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mEAAmE,uCAAuC;AAC1G;AACA;AACA,qBAAqB;;AAErB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wEAAwE,gCAAgC;;AAExG;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,0CAA0C,uCAAuC;AACjF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE;AACA;;AAEA,uFAAuF;AACvF;AACA;;AAEA,qFAAqF;AACrF;AACA;;AAEA,+EAA+E;AAC/E;AACA;;AAEA,iFAAiF;AACjF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iCAAiC,GAAG;AACrD;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,4HAA4H;AAC5H;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,iCAAiC;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,qCAAqC;AACrC,iCAAiC;;AAEjC;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA,6BAA6B;;AAE7B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;AACjB;;AAEA,oCAAoC;;AAEpC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iCAAiC,GAAG;AACrD;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;AACjB;;AAEA,oCAAoC;;AAEpC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC3oDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,6CAA6C,mBAAmB,cAAc;;AAE9E,uEAAuE;AACvE;AACA;AACA;AACA,SAAS,wDAAwD;;AAEjE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA,kDAAkD;;AAElD,2EAA2E;AAC3E;AACA;AACA;AACA,SAAS,4DAA4D;;AAErE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,GAAG,kBAAkB;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,qBAAqB;;AAE9D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,2CAA2C;AAC5E;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,aAAa;AAClD,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8CAA8C,qBAAqB;;AAEnE;;AAEA;AACA;;AAEA;AACA,uCAAuC,eAAe;AACtD;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,+DAA+D;;AAE/D;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA,kHAAkH,uCAAuC;AACzJ,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,qBAAqB;;AAElE;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,8CAA8C,qBAAqB;;AAEnE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,uCAAuC,eAAe;AACtD;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gEAAgE;;AAEhE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA,kDAAkD,qBAAqB;;AAEvE;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC7/BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iBAAiB;AACjB;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAuD;AACvD;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA,8CAA8C,YAAY,mBAAmB,cAAc;;AAE3F;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,GAAG,kBAAkB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,GAAG,kBAAkB;AACtC;;AAEA;AACA,wCAAwC,0BAA0B;AAClE;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4GAA4G,kBAAkB;AAC9H,iBAAiB,GAAG,kBAAkB;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mDAAmD,yBAAyB;AAC5E;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA,yGAAyG,kBAAkB;;AAE3H;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gHAAgH,kBAAkB;AAClI,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,uCAAuC,wBAAwB;AAC/D;;AAEA,+CAA+C,aAAa,aAAa;;AAEzE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,YAAY,gFAAgF;;AAE3I;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uEAAuE,YAAY,gFAAgF;;AAEnK;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;;AAEA;AACA,2DAA2D,YAAY,gFAAgF;;AAEvJ;AACA,qBAAqB;AACrB;;AAEA;AACA,mDAAmD,YAAY,gFAAgF;;AAE/I;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA,6CAA6C;AAC7C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACnqCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,sBAAsB;AAC5D,0CAA0C,0BAA0B;AACpE,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,4CAA4C,iBAAiB;AAC7D;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACtvBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2FAA2F;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACzjBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,qG;;;;;;ACnBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sEAAsE;AACtE;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACtFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACvLD;AACA;AACA;AACA,eAAe,2OAA4W,8QAA8Q,KAAK,yjBAAyjB,6DAA6D,kCAAkC,mBAAmB,cAAc,4BAA4B,YAAY,qBAAqB,2DAA2D,SAAS,uCAAuC,qCAAqC,oCAAoC,EAAE,iBAAiB,iCAAiC,iBAAiB,YAAY,UAAU,sBAAsB,mBAAmB,iDAAiD,kBAAkB,gBAAgB,YAAY,eAAe,YAAY,eAAe,YAAY,eAAe,YAAY,iBAAiB,QAAQ,oHAAoH,aAAa,gBAAgB,kSAAkS,2GAA2G,gBAAgB,wEAAwE,sBAAsB,wQAAwQ,cAAc,+EAA+E,kBAAkB,kJAAkJ,gIAAgI,gEAAgE,eAAe,+GAA+G,0DAA0D,qDAAqD,kBAAkB,OAAO,kGAAkG,YAAY,uCAAuC,qNAAqN,gCAAgC,oDAAoD,wBAAwB,YAAY,EAAE,mCAAmC,iCAAiC,qDAAqD,yCAAyC,+BAA+B,aAAa,WAAW,8BAA8B,cAAc,iEAAiE,eAAe,4BAA4B,iBAAiB,uBAAuB,+CAA+C,gCAAgC,uCAAuC,ygBAAygB,WAAW,2CAA2C,OAAO,4OAA4O,EAAE,kDAAkD,6BAA6B,gCAAgC,iCAAiC,EAAE,MAAM,qMAAqM,QAAQ,uCAAuC,0CAA0C,yIAAyI,EAAE,kBAAkB,cAAc,yBAAyB,eAAe,4BAA4B,qMAAqM,EAAE,EAAE,MAAM,8JAA8J,uDAAuD,KAAK,8BAA8B,EAAE,EAAE,EAAE,eAAe,gCAAgC,kBAAkB,wCAAwC,0BAA0B,mEAAmE,6BAA6B,WAAW,yCAAyC,oBAAoB,qDAAqD,qBAAqB,6CAA6C,kCAAkC,UAAU,4BAA4B,4BAA4B,+BAA+B,+BAA+B,mDAAmD,KAAK,MAAM,EAAE,gEAAgE,qEAAqE,iEAAiE,cAAc,mCAAmC,wBAAwB,OAAO,qHAAqH,2FAA2F,EAAE,kEAAkE,+DAA+D,cAAc,2BAA2B,EAAE,6EAA6E,kEAAkE,uEAAuE,OAAO,6CAA6C,mEAAmE,qCAAqC,uBAAuB,0DAA0D,iGAAiG,iEAAiE,mDAAmD,kDAAkD,oCAAoC,oDAAoD,sCAAsC,mDAAmD,qCAAqC,4CAA4C,+DAA+D,wDAAwD,sDAAsD,GAAG,4BAA4B,iBAAiB,MAAM,uBAAuB,aAAa,OAAO,MAAM,eAAe,4BAA4B,UAAU,oBAAoB,QAAQ,kBAAkB,mBAAmB,+BAA+B,kBAAkB,6BAA6B,iBAAiB,8BAA8B,WAAW,6BAA6B,WAAW,2BAA2B,6BAA6B,eAAe,YAAY,iBAAiB,QAAQ,+CAA+C,aAAa,mBAAmB,uCAAuC,uCAAuC,gCAAgC,uCAAuC,oCAAoC,uCAAuC,mCAAmC,uCAAuC,yCAAyC,uCAAuC,qCAAqC,uCAAuC,kCAAkC,uCAAuC,oCAAoC,uCAAuC,+CAA+C,uCAAuC,0CAA0C,uCAAuC,2CAA2C,uCAAuC,gDAAgD,uCAAuC,0CAA0C,uCAAuC,kCAAkC,uCAAuC,4CAA4C,uCAAuC,GAAG,4BAA4B,eAAe,YAAY,iBAAiB,QAAQ,wCAAwC,aAAa,gBAAgB,mBAAmB,qDAAqD,2GAA2G,sBAAsB,qCAAqC,YAAY,qBAAqB,EAAE,gBAAgB,iCAAiC,SAAS,uCAAuC,WAAW,kJAAkJ,4BAA4B,kCAAkC,gCAAgC,4BAA4B,gDAAgD,+CAA+C,mDAAmD,6UAA6U,EAAE,OAAO,0EAA0E,eAAe,kBAAkB,cAAc,eAAe,mBAAmB,2wCAA2wC,wCAAwC,yCAAyC,6CAA6C,iNAAiN,8BAA8B,OAAO,6YAA6Y,GAAG,4BAA4B,eAAe,YAAY,eAAe,YAAY,iBAAiB,MAAM,uBAAuB,aAAa,qBAAqB,uCAAuC,uCAAuC,gCAAgC,uCAAuC,0CAA0C,uCAAuC,8DAA8D,uCAAuC,mDAAmD,uCAAuC,yCAAyC,uCAAuC,wDAAwD,uCAAuC,2DAA2D,uCAAuC,uCAAuC,uCAAuC,qCAAqC,uCAAuC,8CAA8C,uCAAuC,GAAG,6BAA6B,iBAAiB,QAAQ,gDAAgD,aAAa,gBAAgB,wYAAwY,0CAA0C,yEAAyE,uJAAuJ,sJAAsJ,8oBAA8oB,yFAAyF,mBAAmB,gBAAgB,sGAAsG,kDAAkD,wDAAwD,WAAW,KAAK,sDAAsD,2BAA2B,GAAG,EAAE,mCAAmC,uDAAuD,WAAW,KAAK,kBAAkB,SAAS,8XAA8X,uBAAuB,kCAAkC,oBAAoB,+BAA+B,6BAA6B,wLAAwL,SAAS,sBAAsB,gCAAgC,oBAAoB,YAAY,WAAW,KAAK,2DAA2D,uBAAuB,8CAA8C,GAAG,YAAY,cAAc,kBAAkB,4JAA4J,MAAM,yBAAyB,8GAA8G,yEAAyE,YAAY,gBAAgB,wCAAwC,uBAAuB,cAAc,kBAAkB,eAAe,kCAAkC,gBAAgB,mCAAmC,sBAAsB,gBAAgB,YAAY,sBAAsB,KAAK,2BAA2B,2BAA2B,YAAY,uCAAuC,yhBAAyhB,GAAG,4BAA4B,iBAAiB,QAAQ,wCAAwC,aAAa,kBAAkB,6KAA6K,kCAAkC,iCAAiC,4GAA4G,UAAU,6DAA6D,iBAAiB,kCAAkC,mBAAmB,iFAAiF,iCAAiC,2DAA2D,OAAO,yMAAyM,KAAK,MAAM,+CAA+C,MAAM,2CAA2C,MAAM,6BAA6B,+FAA+F,IAAI,yCAAyC,gBAAgB,qHAAqH,iCAAiC,uCAAuC,uGAAuG,GAAG,4BAA4B,iBAAiB,QAAQ,0GAA0G,aAAa,oBAAoB,8nCAA8nC,gCAAgC,oBAAoB,yDAAyD,eAAe,wBAAwB,4DAA4D,qJAAqJ,iMAAiM,+CAA+C,WAAW,eAAe,WAAW,kMAAkM,6MAA6M,EAAE,yBAAyB,MAAM,0EAA0E,wEAAwE,4BAA4B,+DAA+D,qKAAqK,IAAI,EAAE,wBAAwB,iBAAiB,oBAAoB,EAAE,EAAE,aAAa,WAAW,sCAAsC,oDAAoD,EAAE,cAAc,YAAY,wDAAwD,cAAc,oCAAoC,wCAAwC,eAAe,sCAAsC,yCAAyC,OAAO,qEAAqE,sLAAsL,sGAAsG,wYAAwY,sCAAsC,kBAAkB,yJAAyJ,wHAAwH,GAAG,MAAM,EAAE,cAAc,uIAAuI,mFAAmF,oBAAoB,WAAW,iBAAiB,2BAA2B,wDAAwD,uFAAuF,gHAAgH,sBAAsB,6BAA6B,mKAAmK,wFAAwF,wFAAwF,6TAA6T,qDAAqD,qLAAqL,sLAAsL,KAAK,EAAE,gFAAgF,EAAE,yBAAyB,oIAAoI,EAAE,oBAAoB,cAAc,yCAAyC,sBAAsB,YAAY,kCAAkC,4IAA4I,+DAA+D,MAAM,kJAAkJ,6HAA6H,wGAAwG,eAAe,6IAA6I,qGAAqG,8EAA8E,OAAO,EAAE,kBAAkB,OAAO,mGAAmG,yBAAyB,wGAAwG,uKAAuK,4CAA4C,+DAA+D,oDAAoD,sDAAsD,gCAAgC,2NAA2N,4CAA4C,WAAW,2FAA2F,oEAAoE,8BAA8B,uEAAuE,EAAE,8DAA8D,gDAAgD,mDAAmD,qCAAqC,yCAAyC,qBAAqB,wCAAwC,0BAA0B,2DAA2D,wHAAwH,6JAA6J,uCAAuC,8BAA8B,qCAAqC,iJAAiJ,sCAAsC,gDAAgD,qDAAqD,kKAAkK,+EAA+E,8CAA8C,4MAA4M,GAAG,4BAA4B,iBAAiB,QAAQ,uDAAuD,aAAa,cAAc,oFAAoF,uCAAuC,2BAA2B,+CAA+C,iFAAiF,gCAAgC,8BAA8B,0CAA0C,+EAA+E,WAAW,yBAAyB,kEAAkE,+EAA+E,mNAAmN,GAAG,GAAG,4BAA4B,iBAAiB,QAAQ,0GAA0G,aAAa,oBAAoB,s8BAAs8B,aAAa,WAAW,gGAAgG,aAAa,eAAe,yCAAyC,qDAAqD,gBAAgB,uBAAuB,cAAc,sBAAsB,oBAAoB,yDAAyD,+EAA+E,8DAA8D,EAAE,IAAI,oBAAoB,mGAAmG,EAAE,KAAK,cAAc,oCAAoC,4BAA4B,wCAAwC,aAAa,mCAAmC,yCAAyC,qWAAqW,mYAAmY,mLAAmL,4DAA4D,2KAA2K,yKAAyK,qCAAqC,EAAE,IAAI,EAAE,oBAAoB,WAAW,iBAAiB,0FAA0F,kGAAkG,sBAAsB,iBAAiB,cAAc,yCAAyC,sBAAsB,YAAY,2BAA2B,iGAAiG,+DAA+D,MAAM,kJAAkJ,6HAA6H,sFAAsF,eAAe,6IAA6I,mFAAmF,8EAA8E,OAAO,EAAE,2BAA2B,kcAAkc,KAAK,EAAE,gFAAgF,EAAE,yBAAyB,oJAAoJ,EAAE,kBAAkB,OAAO,mGAAmG,oCAAoC,wGAAwG,wKAAwK,4CAA4C,+DAA+D,oDAAoD,sDAAsD,gCAAgC,sSAAsS,4CAA4C,8GAA8G,6BAA6B,8BAA8B,iBAAiB,mDAAmD,GAAG,wBAAwB,gFAAgF,6BAA6B,2IAA2I,gBAAgB,mDAAmD,EAAE,8DAA8D,gDAAgD,mDAAmD,qCAAqC,yCAAyC,qBAAqB,0BAA0B,sBAAsB,EAAE,mDAAmD,wCAAwC,0BAA0B,2DAA2D,wHAAwH,mMAAmM,uCAAuC,8BAA8B,qCAAqC,+GAA+G,yMAAyM,sCAAsC,gDAAgD,+CAA+C,eAAe,iDAAiD,mCAAmC,eAAe,+EAA+E,+EAA+E,8CAA8C,gUAAgU,GAAG,4BAA4B,iBAAiB,QAAQ,2FAA2F,aAAa,oBAAoB,6BAA6B,WAAW,8LAA8L,qBAAqB,8CAA8C,WAAW,4CAA4C,4JAA4J,gBAAgB,KAAK,qEAAqE,8FAA8F,uFAAuF,6BAA6B,0EAA0E,uBAAuB,aAAa,mDAAmD,kBAAkB,4FAA4F,IAAI,yBAAyB,SAAS,0GAA0G,4FAA4F,6CAA6C,6IAA6I,4CAA4C,gGAAgG,8IAA8I,8DAA8D,6HAA6H,kBAAkB,2FAA2F,+CAA+C,GAAG,iBAAiB,4CAA4C,yFAAyF,6CAA6C,GAAG,kBAAkB,uEAAuE,yFAAyF,6CAA6C,GAAG,sGAAsG,4CAA4C,qDAAqD,2FAA2F,qDAAqD,mGAAmG,sCAAsC,2CAA2C,uBAAuB,uBAAuB,sBAAsB,uBAAuB,qBAAqB,8DAA8D,gBAAgB,uJAAuJ,yBAAyB,uCAAuC,gBAAgB,GAAG,GAAG,8BAA8B,wBAAwB,+BAA+B,eAAe,gBAAgB,iEAAiE,4EAA4E,8CAA8C,IAAI,EAAE,uBAAuB,gCAAgC,6HAA6H,aAAa,kNAAkN,0BAA0B,gEAAgE,IAAI,GAAG,EAAE,SAAS,aAAa,wCAAwC,WAAW,oCAAoC,uxBAAuxB,EAAE,oOAAoO,WAAW,kCAAkC,kFAAkF,6FAA6F,sCAAsC,oHAAoH,mBAAmB,sDAAsD,oBAAoB,8GAA8G,kBAAkB,wCAAwC,qEAAqE,0IAA0I,kBAAkB,sEAAsE,gBAAgB,sEAAsE,sDAAsD,EAAE,EAAE,EAAE,EAAE,oBAAoB,4JAA4J,GAAG,uTAAuT,+LAA+L,GAAG,cAAc,sBAAsB,oCAAoC,oFAAoF,IAAI,kBAAkB,SAAS,4EAA4E,sDAAsD,wIAAwI,EAAE,EAAE,gBAAgB,8GAA8G,yEAAyE,qHAAqH,qHAAqH,uEAAuE,uEAAuE,2GAA2G,aAAa,YAAY,WAAW,KAAK,wFAAwF,uBAAuB,6BAA6B,kDAAkD,2BAA2B,6EAA6E,kDAAkD,2BAA2B,IAAI,wLAAwL,SAAS,sFAAsF,yGAAyG,oEAAoE,IAAI,cAAc,0DAA0D,WAAW,yBAAyB,SAAS,IAAI,SAAS,iFAAiF,UAAU,EAAE,gBAAgB,SAAS,qBAAqB,yBAAyB,IAAI,cAAc,oDAAoD,IAAI,yBAAyB,SAAS,kBAAkB,OAAO,6FAA6F,2LAA2L,4BAA4B,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,+EAA+E,4HAA4H,odAAod,4CAA4C,+DAA+D,gGAAgG,iDAAiD,sDAAsD,iCAAiC,wEAAwE,gCAAgC,oDAAoD,oBAAoB,WAAW,iBAAiB,qFAAqF,SAAS,gLAAgL,8CAA8C,wJAAwJ,gBAAgB,KAAK,2DAA2D,4FAA4F,2BAA2B,mEAAmE,4GAA4G,kBAAkB,wCAAwC,8EAA8E,4BAA4B,GAAG,uFAAuF,2CAA2C,GAAG,iBAAiB,wLAAwL,iGAAiG,yCAAyC,GAAG,iDAAiD,yFAAyF,sCAAsC,gEAAgE,gDAAgD,oBAAoB,+IAA+I,GAAG,SAAS,4BAA4B,eAAe,YAAY,iBAAiB,QAAQ,4EAA4E,aAAa,oBAAoB,uNAAuN,gDAAgD,qGAAqG,WAAW,2EAA2E,8EAA8E,oCAAoC,wBAAwB,wBAAwB,EAAE,gIAAgI,sDAAsD,GAAG,GAAG,2LAA2L,uEAAuE,oDAAoD,uDAAuD,mEAAmE,gGAAgG,wBAAwB,6CAA6C,OAAO,0CAA0C,6CAA6C,yGAAyG,4CAA4C,0YAA0Y,IAAI,+CAA+C,6CAA6C,gGAAgG,4CAA4C,yYAAyY,KAAK,QAAQ,sLAAsL,gBAAgB,+FAA+F,yCAAyC,gBAAgB,+FAA+F,2CAA2C,cAAc,yEAAyE,cAAc,+FAA+F,wCAAwC,MAAM,8GAA8G,gCAAgC,ohBAAohB,WAAW,8CAA8C,qQAAqQ,IAAI,cAAc,iKAAiK,6BAA6B,sCAAsC,4NAA4N,GAAG,4BAA4B,iBAAiB,aAAa,QAAQ,+EAA+E,OAAO,yJAAyJ,4BAA4B,iBAAiB,QAAQ,sDAAsD,aAAa,kBAAkB,ikBAAikB,6rBAA6rB,2EAA2E,cAAc,wGAAwG,8XAA8X,gCAAgC,oDAAoD,oCAAoC,sBAAsB,mCAAmC,qBAAqB,yCAAyC,2BAA2B,qCAAqC,uBAAuB,kCAAkC,oBAAoB,oCAAoC,sBAAsB,+CAA+C,iCAAiC,yCAAyC,uBAAuB,0CAA0C,kBAAkB,0CAA0C,4BAA4B,2CAA2C,uBAAuB,gDAAgD,8JAA8J,mCAAmC,qBAAqB,gDAAgD,kCAAkC,0CAA0C,iDAAiD,iCAAiC,OAAO,sDAAsD,gFAAgF,gDAAgD,0BAA0B,4CAA4C,kCAAkC,wBAAwB,4CAA4C,sHAAsH,uCAAuC,GAAG,4BAA4B,iBAAiB,QAAQ,qEAAqE,aAAa,kBAAkB,mPAAmP,yDAAyD,2CAA2C,kBAAkB,uSAAuS,yFAAyF,sBAAsB,mCAAmC,GAAG,EAAE,OAAO,yBAAyB,kaAAka,gHAAgH,cAAc,wGAAwG,0BAA0B,gCAAgC,oDAAoD,oCAAoC,sBAAsB,mCAAmC,qBAAqB,yCAAyC,2BAA2B,qCAAqC,uBAAuB,kCAAkC,oBAAoB,oCAAoC,sBAAsB,+CAA+C,iCAAiC,4CAA4C,8BAA8B,mCAAmC,wBAAwB,oCAAoC,oCAAoC,+CAA+C,8CAA8C,gDAAgD,EAAE,uCAAuC,sEAAsE,uDAAuD,yCAAyC,kEAAkE,gHAAgH,4CAA4C,iLAAiL,wCAAwC,6CAA6C,iHAAiH,cAAc,4HAA4H,sCAAsC,wVAAwV,6LAA6L,0CAA0C,iDAAiD,iCAAiC,OAAO,sDAAsD,gFAAgF,gDAAgD,0BAA0B,4CAA4C,kCAAkC,wBAAwB,4CAA4C,+DAA+D,wDAAwD,8DAA8D,sDAAsD,GAAG,4BAA4B,iBAAiB,QAAQ,wCAAwC,aAAa,kBAAkB,wIAAwI,kCAAkC,iCAAiC,4GAA4G,oDAAoD,4CAA4C,MAAM,4DAA4D,iCAAiC,IAAI,MAAM,iEAAiE,MAAM,uDAAuD,MAAM,8BAA8B,6CAA6C,MAAM,oCAAoC,MAAM,6BAA6B,+FAA+F,IAAI,0BAA0B,QAAQ,yCAAyC,4BAA4B,4DAA4D,gCAAgC,aAAa,kBAAkB,4GAA4G,OAAO,wCAAwC,SAAS,4BAA4B,iBAAiB,QAAQ,wCAAwC,aAAa,cAAc,gDAAgD,4JAA4J,kCAAkC,8HAA8H,oFAAoF,qDAAqD,sCAAsC,uCAAuC,uCAAuC,iFAAiF,iBAAiB,OAAO,4BAA4B,iBAAiB,QAAQ,gDAAgD,aAAa,kBAAkB,oEAAoE,4BAA4B,2BAA2B,EAAE,+BAA+B,gBAAgB,OAAO,2CAA2C,EAAE,eAAe,WAAW,eAAe,6DAA6D,yBAAyB,eAAe,6DAA6D,2FAA2F,8CAA8C,2FAA2F,EAAE,qFAAqF,2FAA2F,sGAAsG,0BAA0B,yCAAyC,KAAK,EAAE,OAAO,wEAAwE,+CAA+C,eAAe,iCAAiC,2HAA2H,GAAG,4BAA4B,iBAAiB,QAAQ,kIAAkI,aAAa,kBAAkB,ipBAAipB,aAAa,WAAW,qOAAqO,gGAAgG,oBAAoB,0CAA0C,EAAE,uCAAuC,wBAAwB,+BAA+B,0GAA0G,WAAW,iKAAiK,8BAA8B,sEAAsE,UAAU,EAAE,4BAA4B,0CAA0C,0CAA0C,yBAAyB,eAAe,EAAE,gIAAgI,+EAA+E,4FAA4F,qCAAqC,iDAAiD,8BAA8B,4EAA4E,EAAE,6BAA6B,+CAA+C,8BAA8B,2EAA2E,wCAAwC,0BAA0B,gCAAgC,oNAAoN,0CAA0C,iCAAiC,oCAAoC,sCAAsC,mFAAmF,YAAY,oBAAoB,KAAK,8CAA8C,wBAAwB,wDAAwD,OAAO,gIAAgI,0DAA0D,gDAAgD,uCAAuC,4CAA4C,+DAA+D,oEAAoE,uDAAuD,6DAA6D,oDAAoD,sDAAsD,iCAAiC,+CAA+C,8CAA8C,4BAA4B,iBAAiB,QAAQ,mGAAmG,aAAa,sBAAsB,siCAAsiC,WAAW,oPAAoP,suBAAsuB,iFAAiF,uBAAuB,kFAAkF,iKAAiK,8BAA8B,wFAAwF,8EAA8E,qDAAqD,gEAAgE,uBAAuB,8HAA8H,8BAA8B,yLAAyL,iFAAiF,GAAG,aAAa,2GAA2G,yCAAyC,kBAAkB,4DAA4D,gBAAgB,gDAAgD,WAAW,mHAAmH,oEAAoE,WAAW,+IAA+I,oPAAoP,oWAAoW,KAAK,qBAAqB,kEAAkE,EAAE,EAAE,qCAAqC,cAAc,8HAA8H,OAAO,gIAAgI,gBAAgB,YAAY,oBAAoB,KAAK,8CAA8C,wBAAwB,aAAa,cAAc,qDAAqD,qEAAqE,+EAA+E,iPAAiP,gBAAgB,iEAAiE,8EAA8E,oOAAoO,qBAAqB,mFAAmF,2BAA2B,oRAAoR,uBAAuB,oIAAoI,8CAA8C,cAAc,0DAA0D,yCAAyC,mBAAmB,gBAAgB,gCAAgC,mXAAmX,0EAA0E,qDAAqD,cAAc,iOAAiO,cAAc,0FAA0F,aAAa,cAAc,uCAAuC,kJAAkJ,oQAAoQ,+BAA+B,+BAA+B,gDAAgD,wFAAwF,IAAI,2DAA2D,2YAA2Y,uEAAuE,sMAAsM,OAAO,sBAAsB,eAAe,QAAQ,cAAc,uGAAuG,cAAc,0CAA0C,iEAAiE,gCAAgC,wBAAwB,6BAA6B,yCAAyC,mCAAmC,aAAa,sCAAsC,sDAAsD,EAAE,6BAA6B,wDAAwD,wDAAwD,2DAA2D,GAAG,2DAA2D,8BAA8B,qDAAqD,WAAW,0IAA0I,4DAA4D,GAAG,gCAAgC,gFAAgF,uBAAuB,yFAAyF,+BAA+B,aAAa,WAAW,+BAA+B,iBAAiB,aAAa,kFAAkF,6CAA6C,2BAA2B,uBAAuB,EAAE,0RAA0R,+CAA+C,4BAA4B,+BAA+B,gDAAgD,wCAAwC,KAAK,yBAAyB,0IAA0I,YAAY,gBAAgB,wBAAwB,YAAY,cAAc,+BAA+B,4CAA4C,MAAM,qDAAqD,4BAA4B,+IAA+I,iCAAiC,wBAAwB,yBAAyB,EAAE,2DAA2D,YAAY,8EAA8E,6EAA6E,cAAc,GAAG,0BAA0B,oFAAoF,wcAAwc,s0BAAs0B,iBAAiB,8KAA8K,2CAA2C,oCAAoC,wGAAwG,qCAAqC,gGAAgG,6DAA6D,iIAAiI,yFAAyF,mBAAmB,kCAAkC,0NAA0N,wCAAwC,wEAAwE,cAAc,0hBAA0hB,+jBAA+jB,6DAA6D,WAAW,YAAY,mDAAmD,aAAa,qGAAqG,EAAE,aAAa,+FAA+F,sGAAsG,oEAAoE,uCAAuC,0CAA0C,4BAA4B,gDAAgD,2LAA2L,oFAAoF,4BAA4B,uCAAuC,EAAE,EAAE,wBAAwB,0HAA0H,EAAE,+BAA+B,uGAAuG,oGAAoG,+CAA+C,8BAA8B,EAAE,8QAA8Q,sBAAsB,4CAA4C,+DAA+D,oEAAoE,oDAAoD,sDAAsD,iCAAiC,OAAO,mRAAmR,sCAAsC,iBAAiB,wFAAwF,cAAc,gIAAgI,mDAAmD,SAAS,4BAA4B,iBAAiB,QAAQ,0GAA0G,aAAa,kBAAkB,0XAA0X,oDAAoD,yFAAyF,SAAS,sBAAsB,8BAA8B,0DAA0D,2DAA2D,0BAA0B,0EAA0E,wDAAwD,2DAA2D,IAAI,0CAA0C,8KAA8K,kEAAkE,0CAA0C,uCAAuC,gGAAgG,uYAAuY,+GAA+G,iEAAiE,2FAA2F,uCAAuC,6EAA6E,wCAAwC,uCAAuC,qFAAqF,0CAA0C,2BAA2B,oGAAoG,uCAAuC,WAAW,kFAAkF,kKAAkK,8BAA8B,wFAAwF,6CAA6C,qDAAqD,yCAAyC,gHAAgH,UAAU,aAAa,wDAAwD,gBAAgB,yCAAyC,iBAAiB,gBAAgB,6DAA6D,gBAAgB,0DAA0D,cAAc,MAAM,wGAAwG,mEAAmE,WAAW,8CAA8C,8BAA8B,oBAAoB,6GAA6G,sLAAsL,IAAI,kBAAkB,OAAO,mGAAmG,sBAAsB,uCAAuC,wBAAwB,6BAA6B,0BAA0B,8BAA8B,2BAA2B,gCAAgC,4BAA4B,+BAA+B,gEAAgE,0IAA0I,uYAAuY,+BAA+B,0CAA0C,2EAA2E,6CAA6C,8EAA8E,4CAA4C,+DAA+D,oDAAoD,sDAAsD,iCAAiC,8BAA8B,qEAAqE,sMAAsM,mGAAmG,iDAAiD,IAAI,6CAA6C,QAAQ,gIAAgI,YAAY,OAAO,+JAA+J,wHAAmI,4BAA4B,GAAG,E;;;;;;ACHxwmG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,0BAA0B;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACnHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA,mCAAmC,yBAAyB;AAC5D;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,yBAAyB;AAC5D;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,+BAA+B,aAAa;AAC5C;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iDAAiD;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,+BAA+B,kBAAkB;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACxYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA,qCAAqC;AACrC;;AAEA;;AAEA;AACA,mCAAmC,mBAAmB;AACtD;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC3ID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACzCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC/ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACnCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACvND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACncD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACpGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yFAAyF,eAAe;AACxG;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC7MD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC3HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qDAAqD;AACryBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC5lBD,e;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,uCAAuC;AACvC,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC/GD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC9DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,8CAA8C,0CAA0C;;AAExF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,sBAAsB;;AAEhE;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD,4BAA4B;AACjF;;AAEA;AACA;AACA;;AAEA,qDAAqD,iDAAiD;AACtG;;AAEA,iDAAiD,4BAA4B;AAC7E;;AAEA;AACA,iDAAiD,kCAAkC;AACnF;;AAEA;AACA;;AAEA,iDAAiD,4BAA4B;AAC7E;;AAEA;AACA;AACA;AACA;;AAEA,qDAAqD,iDAAiD;AACtG;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA,8BAA8B;AAC9B;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC9TD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA,2BAA2B;;AAE3B;AACA,eAAe,OAAO;AACtB,eAAe,kBAAkB;AACjC,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,kBAAkB;AACjC,eAAe,QAAQ;AACvB,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA,eAAe,sBAAsB,8CAA8C;AACnF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,sBAAsB,8CAA8C;AACnF,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+EAA+E,kBAAkB;AACjG;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,qBAAqB;AAC1G;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,oBAAoB;AACzG;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,8FAA8F,2BAA2B;AACzH;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,wFAAwF,uBAAuB;AAC/G;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,iGAAiG,8BAA8B;AAC/H;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E,mBAAmB;AAChG;AACA,eAAe,oBAAoB;AACnC,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,kBAAkB;AACzE;AACA,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mFAAmF,oBAAoB;AACvG;AACA,eAAe,oBAAoB;AACnC,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gFAAgF,oBAAoB;AACpG;AACA,eAAe,oBAAoB;AACnC,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,mBAAmB;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,kBAAkB;AAC1F;AACA,eAAe,oBAAoB;AACnC,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE,kBAAkB;AACtF;AACA,eAAe,oBAAoB;AACnC,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iGAAiG,qBAAqB;AACtH;AACA,eAAe,aAAa;AAC5B,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iHAAiH,sBAAsB;AACvI;AACA,eAAe,aAAa;AAC5B,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,4GAA4G,8BAA8B;AAC1I;AACA,eAAe,aAAa;AAC5B,iBAAiB,MAAM;AACvB;AACA;;AAEA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;ACxrCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+FAA+F;AAC/F;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wFAAwF;AACxF;AACA,4DAA4D;AAC5D;;AAEA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,+CAAmD;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC9KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC/ID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iEAAiE,sCAAsC;AACvG;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,4BAA4B;;AAE5B;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8EAA8E;;AAE9E;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC1QD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8FAA8F;AAC9F;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,qG;;;;;;ACnBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA,2CAA2C;AAC3C;;AAEA,4EAA4E;AAC5E;;AAEA;AACA,6FAA6F;AAC7F;AACA;AACA,iBAAiB,gEAAgE;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,6DAA6D;AAC7D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC3FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC1CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACjDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACvED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,6EAA6E;AAC7E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,6EAA6E;AAC7E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA,SAAS,iCAAiC;;AAE1C;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,IAAI;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC1VD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,+BAA+B;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrsBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,KAAK,iBAAiB;;AAEtB;AACA;AACA,KAAK;;AAEL;AACA,CAAC;AAAA,qG;;;;;;8CC3DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,2BAA2B;AACrE;;AAEA;AACA,0CAA0C,2BAA2B;AACrE;;AAEA;AACA,0CAA0C,0BAA0B;AACpE;;AAEA;AACA,0CAA0C,0BAA0B;AACpE;;AAEA;AACA,0CAA0C,2BAA2B;AACrE;;AAEA;AACA,0CAA0C,2BAA2B;AACrE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gHAAgH,kBAAkB;AAClI;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY,EAAE;AAC3B,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;;AC7ND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+EAA+E,WAAW;AAC1F;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AClFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACvDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,eAAe,GAAG,oCAAoC;AACnG;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC3CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;;AAEA,+BAA+B;AAC/B;AACA;;AAEA,iCAAiC;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC7HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACzHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACtXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrBD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;+CCvLtC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,iBAAiB,gDAAgD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,yBAAyB,gDAAgD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD,6BAA6B,2CAA2C;AACxE,6BAA6B,2CAA2C;AACxE,6BAA6B;AAC7B;AACA,uBAAuB,gBAAgB;AACvC;AACA,yBAAyB,0BAA0B;AACnD,qBAAqB,6BAA6B;AAClD,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,mBAAmB;AACtC;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,qBAAqB,EAAE,EAAE;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4DAA4D;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wCAAwC;AACrD;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC,mBAAmB,OAAO;AAC1B,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,4BAA4B,IAAI;AAChC;AACA,aAAa,OAAO;AACpB,+BAA+B;AAC/B,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,2BAA2B;AAC3B,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,aAAa;AACb,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B,aAAa;;AAEb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,kDAAkD;AAClD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,cAAc,EAAE;AACjE,mCAAmC;AACnC;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,oBAAoB;AACvC,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,mBAAmB,mBAAmB;AACtC,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,mBAAmB,SAAS;AAC5B,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,iBAAiB;AACjB;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA,uDAAuD,2BAA2B;AAClF;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,wBAAwB;AACxB;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,oBAAoB,oBAAoB,KAAK;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,oBAAoB,gCAAgC;AACpD,mBAAmB,wBAAwB;AAC3C;AACA,mBAAmB,QAAQ;AAC3B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB,QAAQ,gCAAgC;AAChE,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,QAAQ,gCAAgC;AAChE,qBAAqB,EAAE;AACvB;AACA;;AAEA;AACA;AACA,oBAAoB,6CAA6C,eAAe;AAChF,mBAAmB,SAAS;AAC5B;AACA,qBAAqB;AACrB,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,EAAE;AACtB,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,EAAE;AACrB,qBAAqB,OAAO;AAC5B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,EAAE;AACrB,mBAAmB,WAAW;AAC9B,oBAAoB,WAAW;AAC/B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,EAAE;AACtB,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,mBAAmB,mBAAmB;AACtC,mBAAmB,SAAS;AAC5B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,yBAAyB;AAC7C,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD,2BAA2B,UAAU;AACrC;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;;AAEA;AACA,kDAAkD,KAAK;AACvD;AACA;AACA,8CAA8C,KAAK;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yDAAyD,KAAK;AAC9D;AACA,qEAAqE;AACrE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,2BAA2B,EAAE;AAC7B,2BAA2B,SAAS;AACpC,6BAA6B,0BAA0B;AACvD,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,mCAAmC;AAC9G;AACA;AACA,2BAA2B,OAAO;AAClC,2BAA2B,EAAE;AAC7B,2BAA2B,SAAS;AACpC,6BAA6B,0BAA0B;AACvD,4BAA4B,MAAM;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD,2BAA2B,aAAa;AACxC,2BAA2B,SAAS;AACpC,6BAA6B,0BAA0B;AACvD,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E,qBAAqB;AACrB;AACA,+CAA+C;AAC/C,kEAAkE;AAClE;AACA;AACA,0DAA0D;AAC1D,gEAAgE;AAChE,yBAAyB;AACzB,0DAA0D;AAC1D;AACA;AACA;;AAEA;AACA,kGAAkG;AAClG;AACA;AACA,2BAA2B,0BAA0B;AACrD,2BAA2B,aAAa;AACxC,2BAA2B,SAAS;AACpC,4BAA4B,MAAM;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,2BAA2B,SAAS;AACpC,4BAA4B,EAAE;AAC9B,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+DAA+D,oCAAoC;AACnG;AACA;AACA,2BAA2B,OAAO;AAClC,4BAA4B,EAAE;AAC9B,4BAA4B,MAAM;AAClC;AACA;AACA;;AAEA;;AAEA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,uCAAuC,SAAS;AAChD,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,2CAA2C,SAAS;AACpD,6CAA6C,0BAA0B;AACvE;AACA,4CAA4C,MAAM;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,2CAA2C,SAAS;AACpD,6CAA6C,0BAA0B;AACvE;AACA,4CAA4C,MAAM;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;;AAEA,yBAAyB;AACzB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD,2BAA2B,SAAS;AACpC,4BAA4B,YAAY;AACxC,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,mBAAmB;AAC9C,2BAA2B,uBAAuB;AAClD,2BAA2B,SAAS;AACpC,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD,4BAA4B,YAAY;AACxC,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,gFAAgF,wCAAwC;AACxH;AACA;AACA,4BAA4B,YAAY;AACxC,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,+EAA+E,wCAAwC;AACvH;AACA;AACA,4BAA4B;AAC5B,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,wCAAwC;AACjI;AACA;AACA,4BAA4B,OAAO;AACnC,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,sFAAsF,yCAAyC;AAC/H;AACA;AACA,4BAA4B,OAAO;AACnC,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,QAAQ;AACnC,2BAA2B,QAAQ;AACnC,2BAA2B,qBAAqB;AAChD,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,SAAS;AACpC,2BAA2B,QAAQ;AACnC,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,wCAAwC;AACnE,2BAA2B,QAAQ;AACnC,4BAA4B,0BAA0B;AACtD,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,wCAAwC;AACnE,2BAA2B,QAAQ;AACnC,4BAA4B,yBAAyB;AACrD,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,4BAA4B,0BAA0B;AACtD,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,4BAA4B,0BAA0B;AACtD,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,4BAA4B,0BAA0B;AACtD,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA,gEAAgE,wBAAwB;AACxF,yEAAyE,+BAA+B;AACxG,6DAA6D,aAAa;AAC1E,sEAAsE,aAAa;;AAEnF;;AAEA,aAAa;;AAEb;AACA;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C,mBAAmB,WAAW;AAC9B,mBAAmB,SAAS;AAC5B,oBAAoB,WAAW;AAC/B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C,qBAAqB,OAAO;AAC5B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,iEAAiE,KAAK;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,YAAY;AAC/B,qBAAqB,QAAQ;AAC7B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,oBAAoB,yBAAyB;AAC7C,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,sCAAsC;AACtC,iEAAiE;AACjE;AACA,qDAAqD;AACrD,2DAA2D;AAC3D;AACA;AACA;;AAEA;AACA,gDAAgD,KAAK;AACrD;AACA;AACA,mDAAmD;AACnD;AACA,qBAAqB;AACrB;AACA,6CAA6C;AAC7C;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,0BAA0B;AAC7C,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,mBAAmB;AACtC,mBAAmB,iCAAiC;AACpD,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,QAAQ,+BAA+B;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,SAAS;AAC5B,oBAAoB,EAAE;AACtB,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,0BAA0B;AAC7C,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,WAAW;AAC9B,mBAAmB,0BAA0B;AAC7C,oBAAoB,WAAW;AAC/B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE,kDAAkD;AAClD,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,0BAA0B;AAC7C,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA,qBAAqB;AACrB,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,WAAW;AAC9B,mBAAmB,SAAS;AAC5B,oBAAoB,EAAE;AACtB;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,0BAA0B;AAC7C,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,0BAA0B;AAC7C,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,oBAAoB;AACvC,mBAAmB,OAAO;AAC1B,mBAAmB,mBAAmB;AACtC,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,mBAAmB,OAAO;AAC1B,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,uBAAuB;AAC1C,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,oBAAoB;AACvC,mBAAmB,OAAO;AAC1B,mBAAmB,gCAAgC;AACnD;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,4BAA4B;AAC/C,mBAAmB,OAAO;AAC1B,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,SAAS;AAC7B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,wFAAwF;AACnH;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,gJAAgJ;AAChJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,wFAAwF;AACnH,2BAA2B,yBAAyB;AACpD,2BAA2B,sEAAsE;AACjG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD,2BAA2B,sEAAsE;AACjG;AACA;AACA;;AAEA;AACA,6BAA6B,cAAc;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA,yCAAyC,qDAAqD,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qFAAqF,6BAA6B;AAClH,8FAA8F,4CAA4C;AAC1I,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA,gEAAgE,wBAAwB;AACxF,yEAAyE,+BAA+B;AACxG,6DAA6D,aAAa;AAC1E,sEAAsE,aAAa;;AAEnF;;AAEA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,0BAA0B;AAC7C,mBAAmB,OAAO;AAC1B,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,0BAA0B;AAC7C,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC,qBAAqB,kBAAkB;AACvC,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C,0CAA0C;AAC1C;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B,yBAAyB;AACzB;;AAEA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,SAAS,2BAA2B,GAAG;AAC1D,qBAAqB,kBAAkB;AACvC,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,yCAAyC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mDAAmD;;AAEnD,uDAAuD,kBAAkB;AACzE;AACA;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA,0BAA0B;AAC1B,yDAAyD;AACzD;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA,iBAAiB;AACjB;;AAEA,6BAA6B,0BAA0B;AACvD,iEAAiE;AACjE;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,qCAAqC;AACrC;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA,qGAAqG;AACrG,qBAAqB;AACrB;AACA;AACA;AACA,uHAAuH,8BAA8B,EAAE;AACvJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B,wDAAwD;;AAExD;AACA;AACA;AACA,iBAAiB;;AAEjB,aAAa,sDAAsD;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,yBAAyB,eAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,6BAA6B;AACpD,mBAAmB,QAAQ;AAC3B,mBAAmB,SAAS;AAC5B,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB,iBAAiB;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,qCAAqC;AACtE,aAAa;;AAEb;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,UAAU;AAC7B,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,0BAA0B,2BAA2B,GAAG;AACvE,eAAe,SAAS,2BAA2B,GAAG;AACtD,gBAAgB,iBAAiB;AACjC,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,yBAAyB;AACpG;AACA,eAAe,OAAO;AACtB,eAAe,2BAA2B;AAC1C,eAAe,SAAS,2BAA2B,GAAG;AACtD,gBAAgB,iBAAiB;AACjC,gBAAgB,MAAM;AACtB;AACA;AACA,kDAAkD;;AAElD;AACA;AACA,eAAe,QAAQ,4BAA4B;AACnD;AACA,eAAe,sCAAsC;AACrD;AACA;AACA,eAAe,kBAAkB;AACjC,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,yEAAyE,6BAA6B;AACtG;AACA,eAAe,QAAQ,4BAA4B;AACnD;AACA,eAAe,sCAAsC;AACrD;AACA;AACA,eAAe,kBAAkB;AACjC,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA,oDAAoD;;;AAGpD;AACA;AACA,eAAe,mBAAmB;AAClC,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,0BAA0B,2BAA2B,GAAG;AACvE,eAAe,SAAS,2BAA2B,GAAG;AACtD,gBAAgB,iBAAiB;AACjC,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS,4BAA4B;AACpD;AACA,eAAe,sCAAsC;AACrD;AACA;AACA,eAAe,kBAAkB;AACjC,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;AC5kKD;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC1YD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACjHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,kBAAkB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACvID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACvDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,2GAA2G,kBAAkB;AAC7H;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,yHAAyH,kBAAkB;AAC3I;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC3FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACvaAAa;;AAEb;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC1JD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC9GD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACxDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACr4BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACjgED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC7HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACtHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD;;AAElD;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AClDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,6DAA6D,SAAS;AACtE;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC5ZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;;AAEA,8EAA8E;AAC9E;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC/ID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,mCAAmC;;AAEzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,qBAAqB;AACrB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC5WD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC9JD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AClQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,8DAA8D;AAChF,uBAAuB,kBAAkB,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+BAA+B,2BAA2B;AAC1D;AACA;;AAEA;AACA,sCAAsC,+CAA+C;AACrF;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,wEAAwE;;AAExE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT,6DAA6D,sBAAsB,yBAAyB;AAC5G;AACA;;AAEA;AACA;AACA,0CAA0C;;AAE1C,uBAAuB,SAAS;AAChC;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC/YD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACvID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACjCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACjGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACrGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS,4BAA4B;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,4BAA4B;;AAE/D;AACA;;AAEA;AACA;;AAEA,mCAAmC,4BAA4B;;AAE/D;AACA;;AAEA;AACA;;AAEA,0CAA0C,aAAa,SAAS,4BAA4B;;AAE5F;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,uBAAuB,GAAG,4BAA4B,GAAG,4BAA4B;;AAE/H;AACA;;AAEA;AACA;AACA;;AAEA,4CAA4C,eAAe,GAAG,eAAe,GAAG,4BAA4B;;AAE5G;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yDAAyD,oBAAoB,GAAG,oBAAoB,GAAG,4BAA4B;;AAEnI;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC1PD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS,4BAA4B;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qCAAqC,oBAAoB;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mDAAmD,yBAAyB;AAC5E;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD,mDAAmD,GAAG,2DAA2D;;AAErK;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,4CAA4C,sBAAsB;;AAElE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA,8CAA8C,eAAe;AAC7D,aAAa;AACb,8CAA8C,cAAc;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AChRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACxDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B,iBAAiB,WAAW;AAC5B,iBAAiB,UAAU;AAC3B,iBAAiB,UAAU;AAC3B,iBAAiB,UAAU;AAC3B,iBAAiB,SAAS;AAC1B,iBAAiB,SAAS;AAC1B,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,iBAAiB,WAAW;AAC5B,iBAAiB,WAAW;AAC5B,iBAAiB,SAAS;AAC1B,iBAAiB,SAAS;AAC1B,iBAAiB,SAAS;AAC1B,iBAAiB,SAAS;AAC1B,iBAAiB,SAAS;AAC1B,iBAAiB,SAAS;AAC1B,iBAAiB,SAAS;AAC1B,iBAAiB,SAAS;AAC1B,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,CAAC;AAAA,qG;;;;;;AC/UD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gFAAgF,gBAAgB;AAChG;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,kDAAkD,wBAAwB;;AAE1E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA,yBAAyB,iBAAiB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;;AAEA;AACA,kFAAkF,eAAe;AACjG;;AAEA;AACA;;AAEA;AACA,sFAAsF,eAAe;AACrG;;AAEA,gCAAgC,aAAa;AAC7C,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,wBAAwB;;AAE1E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb,qFAAqF;AACrF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACnbD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS,+CAA+C;AACxD;AACA,SAAS,gFAAgF;AACzF;AACA,SAAS,gDAAgD;AACzD;AACA,SAAS,qFAAqF;AAC9F;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,mBAAmB;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AAAA,qG;;;;;;ACpQD,e;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,qG","file":"phenix-web-sdk-react-native.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"phenix-web-sdk\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"phenix-web-sdk\"] = factory();\n\telse\n\t\troot[\"phenix-web-sdk\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 105);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bc99f04c441e271f45bc","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './LodashLight'\n], function (LodashLight) {\n    'use strict';\n\n    return LodashLight;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-lodash-light/src/index.js\n// module id = 0\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './assert'\n], function (assert) {\n    return assert;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-assert/src/index.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!function(a,b){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=b(require(\"phenix-web-lodash-light\"),require(\"phenix-web-detect-browser\"),require(\"phenix-web-assert\"),require(\"phenix-web-observable\"));else if(\"function\"==typeof define&&define.amd)define([\"phenix-web-lodash-light\",\"phenix-web-detect-browser\",\"phenix-web-assert\",\"phenix-web-observable\"],b);else{var c=\"object\"==typeof exports?b(require(\"phenix-web-lodash-light\"),require(\"phenix-web-detect-browser\"),require(\"phenix-web-assert\"),require(\"phenix-web-observable\")):b(a[\"phenix-web-lodash-light\"],a[\"phenix-web-detect-browser\"],a[\"phenix-web-assert\"],a[\"phenix-web-observable\"]);for(var d in c)(\"object\"==typeof exports?exports:a)[d]=c[d]}}(this,function(a,b,c,d){return function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.i=function(a){return a},b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a[\"default\"]}:function(){return a};return b.d(c,\"a\",c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p=\"\",b(b.s=10)}([function(a,b,c){(function(c){var d,e;d=[],e=function(){\"use strict\";var a=function(){return\"object\"==typeof window?window:\"object\"==typeof c?c:{}};return a()}.apply(b,d),!(void 0!==e&&(a.exports=e))}).call(b,c(9))},function(b,c){b.exports=a},function(a,c){a.exports=b},function(a,b,c){var d,e;d=[c(1),c(4),c(0)],e=function(a,b,c){\"use strict\";function d(a,c,d){var f=this;this._ghost=a,this._stream=c,this._isUsingPlugin=d,this._events={};var g=function(a){f._loaded=!0,f._enabled=a===!0,a?j.call(f):o(\"Failed to create Phenix video element\"),f._onReady&&f._onReady(f._enabled)};try{if(this._video=e(d),this._video.className=this._ghost.className,this._video.height=this._ghost.height,this._video.width=this._ghost.width,this._ghost.style.cssText=\"visibility:hidden !important;width:0px !important;height:0px !important;margin:0px !important;padding:0px !important;border-style:none !important;border-width:0px !important;max-width:0px !important;max-height:0px !important;outline:none !important\",this._video.onunload=function(){f._loaded=!1},l.call(this),document.body&&document.body.contains||n(\"document.body.contains is not supported\"),document.body&&document.body.contains&&document.body.contains(this._ghost)&&this._ghost.parentNode.replaceChild(this._video,this._ghost),!d)return g(!0);var h=new b;h.waitForReady(this._video,g)}catch(i){o(\"Error while loading Phenix RTC\"+i),g(!1)}}function e(a){var b=document.createElement(\"video\");return a&&(b=document.createElement(\"object\"),b.type=\"application/x-phenix-video\"),b}function f(a,b,c){if(!this._isUsingPlugin)return this._video.addEventListener(a,b,c);var d=this._events[a];d||(d=this._events[a]=[],this._loaded&&h.call(this,a)),d.push(b)}function g(a,b,c){if(!this._isUsingPlugin)return this._video.removeEventListener(a,b,c);var d=this._events[a];if(d){var e=d.indexOf(b);e>=0&&(d=d.splice(e,1),d.length>0?this._events[a]=d:delete this._events[a])}}function h(a){function b(){var b=c._events[a];if(b)for(var d=0;d<b.length;d++)b[d].apply(c,arguments)}var c=this;c._video.phenixSetEventListener(a,b)}function i(a,b){var c;document.createEvent?(c=document.createEvent(\"HTMLEvents\"),c.initEvent(b,!0,!0)):(c=document.createEventObject(),c.eventType=b),c.eventName=b,setTimeout(function(){document.createEvent?a.dispatchEvent(c):a.fireEvent(\"on\"+c.eventType,c)})}function j(){for(var a=Object.keys(this._events),b=0;b<a.length;b++)h.call(this,a[b]);this.hookUpEvents(),k.call(this),this._video.id=this._ghost.id,this._video.style.cssText=this._ghost.cssText,this._video.className=this._ghost.className,this._video.innerHtml=this._ghost.innerHtml,this._video.width=this._ghost.width,this._video.height=this._ghost.height,this._video.autoplay=this._ghost.autoplay,this._video.muted=this._ghost.muted,this._video.defaultMuted=this._ghost.defaultMuted,this._video.volume=this._ghost.volume,this._stream&&(this._video.src=this._stream)}function k(){var b=this,d=[\"style\"];if(a.get(c,[\"MutationObserver\"])){var e=new MutationObserver(function(a){a.forEach(function(a){\"attributes\"===a.type&&a.target===b._ghost&&d.indexOf(a.attributeName)===-1&&(b._video[a.attributeName]=b._ghost[a.attributeName])})}),f={attributes:!0};e.observe(b._ghost,f)}else n(\"Falling back to use of DOM event listeners. This results in degraded performance for further DOM modifications and does not work for IE prior to version 9. See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events for details.\"),b._ghost.addEventListener?b._ghost.addEventListener(\"DOMAttrModified\",function(a){b._video[a.target.tagName]=b._ghost[a.target.tagName]},!1):b._ghost.attachEvent(\"onpropertychange\",function(a){b._video[a.target.tagName]=b._ghost[a.target.tagName]})}function l(){var b=this;if(a.get(c,[\"MutationObserver\"])){var d=new MutationObserver(function(a){a.forEach(function(a){if(\"childList\"===a.type)for(var c=0;c<a.addedNodes.length;c++){var d=a.addedNodes[c];a.target!==b._video&&(d===b._ghost?(a.target.replaceChild(b._video,b._ghost),j.call(b)):m(a.target,b._ghost)&&(b._ghost.parentNode.replaceChild(b._video,b._ghost),j.call(b)))}})}),e={childList:!0,attributes:!1,characterData:!1,subtree:!0};d.observe(document.body,e)}else n(\"Falling back to use of DOM event listeners. This results in degraded performance for further DOM modifications and does not work for IE prior to version 9. See https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events for details.\"),f(b._ghost,\"DOMNodeInserted\",function(){b._ghost.parentNode.replaceChild(b._video,b._ghost)},!1)}function m(a,b){for(var c=b.parentNode;null!==c;){if(c===a)return!0;c=c.parentNode}return!1}var n=function(){console.log.apply(console,arguments)}||function(){},o=function(){console.error.apply(console,arguments)}||n;return d.prototype.hookUpEvents=function(){var a=this,b=this._ghost;this.addEventListener(\"error\",function(){i(b,\"error\")}),this.addEventListener(\"mute\",function(){b.muted=a._video.muted,i(b,\"mute\")}),this.addEventListener(\"unmute\",function(){b.muted=a._video.muted,i(b,\"unmute\")}),this.addEventListener(\"ended\",function(){b.ended=a._video.ended,i(b,\"ended\")}),this.addEventListener(\"loadedmetadata\",function(){b.width=a._video.width,b.height=a._video.height,i(b,\"loadedmetadata\")}),this.addEventListener(\"loadeddata\",function(){b.width=a._video.width,b.height=a._video.height,i(b,\"loadeddata\")}),this.addEventListener(\"resize\",function(){b.width=a._video.width,b.height=a._video.height,i(b,\"resize\")})},d.prototype.onReady=function(a){var b=this;this._loaded?setTimeout(function(){a(b._enabled)},1):this._onReady=a},d.prototype.getElement=function(){return this._video},d.prototype.addEventListener=function(a,b,c){f.call(this,a,b,c)},d.prototype.removeEventListener=function(a,b,c){g.call(this,a,b,c)},d}.apply(b,d),!(void 0!==e&&(a.exports=e))},function(a,b,c){var d,e;d=[c(2)],e=function(a){\"use strict\";function b(a){this._timeout=a||15e3}var c=new a(navigator.userAgent).detect(),d=4,e=function(){console.error.apply(console,arguments)}||console.log;return b.prototype.waitForReadyWithTimeout=function(a,b,f){var g=!1,h=1,i=h,j=function(a){g||(g=!0,b(a))},k=function l(){a.readyState===d?j(!0):a.phenixVersion?j(!0):(h=Math.min(h+1e3,2*h),i+=h,i>f?(e(\"Timed out while waiting for <object> to load\"),j(!1)):setTimeout(l,h))};a.hasOwnProperty&&a.hasOwnProperty(\"onload\")||\"IE\"!==c.browser&&e(\"No means of detecting when <object> is loaded\"),a.onload=function(){j(!0)},k()},b.prototype.waitForReady=function(a,b){a.phenixVersion?b(!0):this.waitForReadyWithTimeout(a,b,this._timeout)},b}.apply(b,d),!(void 0!==e&&(a.exports=e))},function(a,b){a.exports=c},function(a,b){a.exports=d},function(a,b,c){var d,e;d=[c(1),c(5),c(6),c(2),c(0),c(12),c(11)],e=function(a,b,c,d,e,f,g){\"use strict\";function h(){if(a.assign(j,f()),g.isSupported()){j.phenixSupported=!0;var b=new g,c=function(){j.RTCPeerConnection=b.getRTCPeerConnectionConstructor(),j.RTCSessionDescription=b.getRTCSessionDescriptionConstructor(),j.RTCIceCandidate=b.getRTCIceCandidateConstructor(),j.getSources=b.getSourcesDelegate(),j.getUserMedia=b.getUserMediaDelegate(),j.getStats=b.getStatsDelegate(),Function.prototype.bind?(j.attachMediaStream=b.attachMediaStream.bind(b),j.reattachMediaStream=b.reattachMediaStream.bind(b),j.isPhenixEnabled=b.isEnabled.bind(b)):(j.attachMediaStream=function(){b.attachMediaStream.apply(b,arguments)},j.reattachMediaStream=function(){b.reattachMediaStream.apply(b,arguments)},j.isPhenixEnabled=function(){return b.isEnabled()}),j.webrtcSupported=!0,j.phenixSupported=!0,j.phenixVersion=b.getVersion(),j.onLoaded&&j.onLoaded.call()};b.isEnabled()?c():b.onReady(function(a){a&&(c(),j.onload&&\"function\"==typeof j.onload&&j.onload())}),b.onLoaded(function(){c()})}else j.phenixSupported=!1;return j}var i=new d(navigator.userAgent).detect(),j={browser:i.browser,browserVersion:i.version,phenixSupported:!1,isPhenixEnabled:function(){return!1},onLoaded:void 0,global:e};return a.assign(h(),{shim:h})}.apply(b,d),!(void 0!==e&&(a.exports=e))},function(a,b,c){var d,e;d=[c(0)],e=function(a){\"use strict\";var b=function(b){a.RTCPeerConnection=b.RTCPeerConnection,a.RTCSessionDescription=b.RTCSessionDescription,a.RTCIceCandidate=b.RTCIceCandidate};return b}.apply(b,d),!(void 0!==e&&(a.exports=e))},function(a,b){var c;c=function(){return this}();try{c=c||Function(\"return this\")()||(0,eval)(\"this\")}catch(d){\"object\"==typeof window&&(c=window)}a.exports=c},function(a,b,c){\"use strict\";var d,e;d=[c(7),c(8)],e=function(a,b){return a.onLoaded=function(){b(a)},a.onLoaded(),a}.apply(b,d),!(void 0!==e&&(a.exports=e))},function(a,b,c){var d,e;d=[c(1),c(5),c(6),c(4),c(3)],e=function(a,b,c,d,e){\"use strict\";function f(){var a=this;this._root=h(),this._version=\"?\";var b=function(b){a._loaded=!0,a._enabled=b===!0,a._version=a._phenixRTC.phenixVersion||\"?.?.?.?\",q(b?\"Phenix RTC \"+a._version:\"No Phenix RTC\"),a._onReady&&a._onReady(a._enabled)};try{this._phenixRTC=i(this._root),this._phenixRTC.onunload=function(){a._loaded=!1};var c=new d;c.waitForReady(this._phenixRTC,b)}catch(e){r(\"Error while loading Phenix RTC\"+e)}}function g(){this._root&&document.getElementById(\"phenixRTC\")!==this._root&&(document.body.appendChild(this._root),this._onLoaded&&this._onLoaded.call(this))}function h(){var a=document.createElement(\"div\");return a.id=\"phenixRTC\",a.style.cssText=\"visibility:hidden !important;width:0px !important;height:0px !important;margin:0px !important;padding:0px !important;border-style:none !important;border-width:0px !important;max-width:0px !important;max-height:0px !important;outline:none !important\",document.body.appendChild(a),a}function i(a){var b=document.createElement(\"object\");return b.type=\"application/x-phenix-rtc\",a.appendChild(b),b}function j(a,b){if(!a)throw new Error(\"Can not attach a stream to a undefined element\");if(a.phenixVersion)return a.src=b,a;var c=new e(a,b,(!0));return c.getElement().phenixPresenter=c,c.getElement()}function k(b){var c=function(){var c=null;switch(arguments.length){case 0:c=new b;break;case 1:c=new b(arguments[0]);break;case 2:c=new b(arguments[0],arguments[1]);break;case 3:c=new b(arguments[0],arguments[1],arguments[2]);break;case 4:c=new b(arguments[0],arguments[1],arguments[2],arguments[3]);break;case 5:c=new b(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);break;default:throw new Error(\"Unsupported number of arguments in Phenix Object Constructor\")}return c.phenixAddEventListener=a.bind(l,c),c.phenixRemoveEventListener=a.bind(m,c),c};return a.forOwn(b,function(a,b){c[b]=a}),c}function l(a,c){b.stringNotEmpty(a,\"name\"),b.isFunction(c,\"listener\"),n.call(this,a),o.call(this,a,c)}function m(a,b){p.call(this,a,b)}function n(b){if(!this.events||!this.events[b]){this.events||(this.events={});var d=this.events;d[b]={observable:(new c.Observable).extend({timeout:0}),subscription:null,listeners:[]},this.phenixSetEventListener(b,a.bind(d[b].observable.setValue,d[b].observable)),d[b].subscription=d[b].observable.subscribe(function(c){var e=d[b],f=e.listeners;a.forEach(f,function(a){a(c)})})}}function o(a,b){if(!this.events||!this.events[a])throw new Error(\"No event observable for event: \"+name);this.events[a].listeners.push(b)}function p(b,c){this.events&&this.events.events[b]&&(this.events[b].listeners=a.filter(this.events[b].listeners,function(a){return c!==a}))}var q=function(){console.log.apply(console,arguments)}||function(){},r=function(){console.error.apply(console,arguments)}||q;return f.prototype.onReady=function(a){var b=this;this._loaded?setTimeout(function(){a(b._enabled)},1):this._onReady=a},f.prototype.onLoaded=function(a){this._onLoaded=a},f.prototype.isLoaded=function(){return this._loaded===!0},f.isSupported=function(){if(navigator.plugins)for(var a=navigator.plugins,b=0;b<a.length;b++)if(a[b].name.indexOf(\"PhenixRTC\")>=0)return!0;if(navigator.userAgent&&(navigator.userAgent.match(/MSIE/)||navigator.userAgent.match(/Trident/)))try{return new window.ActiveXObject(\"PhenixP2P.RTC\"),!0}catch(c){return!1}return!1},f.prototype.isEnabled=function(){return g.call(this),this._phenixRTC&&void 0!==this._phenixRTC.phenixVersion},f.prototype.getVersion=function(){return g.call(this),this._version},f.prototype.getRTCPeerConnectionConstructor=function(){return g.call(this),k(this._phenixRTC.RTCPeerConnection)},f.prototype.getRTCSessionDescriptionConstructor=function(){return g.call(this),k(this._phenixRTC.RTCSessionDescription)},f.prototype.getRTCIceCandidateConstructor=function(){return g.call(this),k(this._phenixRTC.RTCIceCandidate)},f.prototype.getSourcesDelegate=function(){var a=this;return function(b){return g.call(a),a._phenixRTC.getSources(b)}},f.prototype.getUserMediaDelegate=function(){var a=this;return function(b,c,d){return g.call(a),a._phenixRTC.getUserMedia(b,c,d)}},f.prototype.getStatsDelegate=function(){return function(a,b,c,d){return a.getStats(b,c,d)}},f.prototype.attachMediaStream=function(a,b){return g.call(this),j.call(this,a,b)},f.prototype.reattachMediaStream=function(a,b){return g.call(this),this.attachMediaStream(a,b.src)},f}.apply(b,d),!(void 0!==e&&(a.exports=e))},function(a,b,c){var d,e;d=[c(1),c(2),c(13),c(0),c(3)],e=function(a,b,c,d,e){\"use strict\";function f(){if(v=d.RTCPeerConnection,w=d.RTCSessionDescription,x=d.RTCIceCandidate,navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices&&(y=a.bind(k,null,\"input\")),navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices&&(z=a.bind(k,null,\"output\")),(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia||d.getUserMedia)&&(A=g),!d.RTCPeerConnection)return t(\"[%s] browser version [%s] does not appear to be WebRTC-capable\",u.browser,u.version);switch(u.browser){case\"Firefox\":t(\"Firefox detected\",u),C=function(a,b){t(\"Attaching media stream\");var c=a.muted;return u.version>57&&(a.srcObject=b),a.mozSrcObject=b,a.play(),c===!0&&(a.muted=!0),a},E=function(a,b){t(\"Reattaching media stream\");var c=a.muted;return u.version>57&&(a.srcObject=b.srcObject),a.mozSrcObject=b.mozSrcObject,a.play(),c===!0&&(a.muted=!0),a},B=function(b,c,d,e){b.getStats(c,a.bind(o,this,b,d),e)},F=!0;break;case\"Opera\":t(\"Opera detected\",u),C=l,E=n,B=function(b,c,d,e){b.getStats(a.bind(o,this,b,d),c,e)},F=!0;break;case\"Chrome\":t(\"Webkit detected\",u),C=l,E=n,B=function(b,c,d,e){b.getStats(a.bind(o,this,b,d),c,e)},F=!0;break;case\"Edge\":t(\"Edge detected\",u),C=l,E=n,B=function(b,c,d,e){b.getStats(c,a.bind(o,this,b,d),e)},F=!0;break;case\"Safari\":t(\"Safari detected\",u),C=function(b,c){return a.isObject(c)&&(b.__phenixHasPlayedWebRtc=!0),b=l(b,c)},D=function(a,b){return a.__phenixHasPlayedWebRtc?(a=new e(a,b,(!1)).getElement(),a.play(),a):m(a,b)},E=n,B=function(b,c,d,e){b.getStats(c).then(a.bind(o,this,b,d),e)},F=!0;break;case\"ReactNative\":t(\"React Native detected\",u),C=function(){t(\"attachMediaStream not supported in React Native environment\")},D=function(){t(\"attachUriStream not supported in React Native environment\")},E=function(){t(\"reattachMediaStream not supported in React Native environment\")},B=function(b,c,d,e){b.getStats(c).then(a.bind(o,this,b,d),e)},F=!0;break;default:t(\"Browser does not appear to be WebRTC-capable\",u)}}function g(b,c,e){var f=a.bind(h,this,b,c,e);return navigator&&a.isFunction(navigator.getUserMedia)?navigator.getUserMedia(b,f,e):d&&a.isFunction(d.getUserMedia)?d.getUserMedia(b,f,e):void 0}function h(a,b,c,d){setTimeout(function(){for(var e=d.getTracks(),f=0;f<e.length;f++){var g=e[f];if(g.onended=function(a){t(a.timeStamp,\"Track\",g.id,g.label,\"ended\")},t(\"Track\",g.id,g.label,e[f].kind,\"readyState=\",e[f].readyState),\"ended\"===g.readyState)return i(\"User media not available\",c,e)}var h=(a.audio?1:0)+(a.video?1:0);return e.length!==h?i(\"Unable to get all requested user media.\",c,e):void b(d)},100)}function i(a,b,c){try{var d=new Error(a);d.code=\"unavailable\",b(d)}finally{j(c)}}function j(a){for(var b=0;b<a.length;b++)a[b].stop()}function k(a,b){if(\"input\"!==a&&\"output\"!==a)throw new Error(\"Unsupported device type \"+a);navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices().then(function(c){var d=[];c.forEach(function(b){b.kind===\"audio\"+a?d.push({kind:\"audio\",id:b.deviceId,label:b.label}):b.kind===\"video\"+a&&d.push({kind:\"video\",id:b.deviceId,label:b.label})}),b(d)})}function l(a,b){return\"undefined\"!=typeof a.srcObject?a.srcObject=b:\"undefined\"!=typeof a.mozSrcObject?a.mozSrcObject=b:\"undefined\"!=typeof a.src?a.src=URL.createObjectURL(b):t(\"Error attaching stream to element.\"),a.play(),a}function m(a,b){return a.src=b,a.play(),a}function n(a,b){return a.src=b.src,a}function o(a,b,c){b(p(a,c))}function p(b,c){switch(u.browser){case\"Edge\":c.forEach(function(a){a.mediaType=q(b,a.codecId),a.bytesSent=s(a.packetsSent,a.mediaType),a.bytesReceived=s(a.packetsReceived,a.mediaType)});break;case\"Safari\":c.forEach(function(b){a.includes(b.id.toLowerCase(),\"audio\")&&a.includes(b.id.toLowerCase(),\"rtp\")&&(b.mediaType=\"audio\"),a.includes(b.id.toLowerCase(),\"video\")&&a.includes(b.id.toLowerCase(),\"rtp\")&&(b.mediaType=\"video\")})}return c}function q(b,c){if(c){var d;return r(b,function(b){a.startsWith(b,\"video\")&&a.includes(b.toLowerCase(),c.toLowerCase())&&(d=\"video\"),a.startsWith(b,\"audio\")&&a.includes(b.toLowerCase(),c.toLowerCase())&&(d=\"audio\")}),d}}function r(b,c){var d=b.localDescription.sdp.split(\"m=\"),e=b.remoteDescription.sdp.split(\"m=\");return d.length===e.length&&a.findIndex(d,function(a,b){return c(a,b,e)})}function s(a,b){var c=parseInt(a)||0;return\"audio\"===b?100*c:\"video\"===b?1080*c:void 0}var t=function(){console.log.apply(console,arguments)},u=new b(navigator.userAgent).detect(),v=d.RTCPeerConnection,w=d.RTCSessionDescription,x=d.RTCIceCandidate,y=null,z=null,A=null,B=null,C=null,D=null,E=null,F=!1;return function(){f();var a={RTCPeerConnection:v,RTCSessionDescription:w,RTCIceCandidate:x,getSources:y,getDestinations:z,getUserMedia:A,getStats:B,attachMediaStream:C,attachUriStream:D||m,reattachMediaStream:E,webrtcSupported:F};return a.exportGlobal=function(){d.RTCPeerConnection=a.RTCPeerConnection,d.RTCSessionDescription=a.RTCSessionDescription,d.RTCIceCandidate=a.RTCIceCandidate},a}}.apply(b,d),!(void 0!==e&&(a.exports=e))},function(a,b,c){var d,e;d=[],e=function(){\"use strict\";var a=function(){};return a}.apply(b,d),!(void 0!==e&&(a.exports=e))}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-rtc/dist/phenix-rtc-react-native.min.js\n// module id = 2\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './Disposable',\n    './DisposableList'\n], function (Disposable, DisposableList) {\n    return {\n        Disposable: Disposable,\n        DisposableList: DisposableList\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-disposable/src/index.js\n// module id = 3\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './Observable',\n    './ObservableArray',\n    './ObservableMonitor'\n], function (Observable, ObservableArray, ObservableMonitor) {\n    'use strict';\n\n    return {\n        Observable: Observable,\n        ObservableArray: ObservableArray,\n        ObservableMonitor: ObservableMonitor\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-observable/src/index.js\n// module id = 4\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './Event',\n    './NamedEvents'\n], function (Event, NamedEvents) {\n    return {\n        Event: Event,\n        NamedEvents: NamedEvents\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-event/src/index.js\n// module id = 5\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './http'\n], function (http) {\n    'use strict';\n\n    return http;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-http/src/index.js\n// module id = 6\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var streamEnums = {\n        networkStates: {\n            networkEmpty: {\n                id: 0,\n                name: 'NETWORK_EMPTY'\n            },\n            networkIdle: {\n                id: 1,\n                name: 'NETWORK_IDLE'\n            },\n            networkLoading: {\n                id: 2,\n                name: 'NETWORK_LOADING'\n            },\n            networkNoSource: {\n                id: 3,\n                name: 'NETWORK_NO_SOURCE'\n            }\n        },\n        types: {\n            realTime: {\n                id: 0,\n                name: 'RealTime'\n            },\n            dash: {\n                id: 1,\n                name: 'dash'\n            },\n            hls: {\n                id: 2,\n                name: 'hls'\n            }\n        },\n        streamEvents: {\n            playerEnded: {\n                id: 0,\n                name: 'playerended'\n            },\n            playerError: {\n                id: 1,\n                name: 'playererror'\n            },\n            stopped: {\n                id: 2,\n                name: 'stopped'\n            }\n        },\n        rendererEvents: {\n            ended: {\n                id: 0,\n                name: 'ended'\n            },\n            error: {\n                id: 1,\n                name: 'error'\n            }\n        }\n    };\n\n    return streamEnums;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/stream.json.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './Logger',\n    './ConsoleAppender',\n    './logging.json'\n], function (Logger, ConsoleAppender, logging) {\n    'use strict';\n\n    return {\n        createLogger: function() {\n            return new Logger();\n        }, // Base logger with nothing appended\n        Logger: Logger,\n        ConsoleAppender: ConsoleAppender,\n        level: logging.level // Object with log levels\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-logging/src/index.js\n// module id = 8\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event'\n], function(_, assert, event) {\n    'use strict';\n\n    var defaultPollFrequency = 500;\n    var minimumPollFrequency = 15;\n\n    function DimensionsChangedMonitor(logger, options) {\n        if (!logger) {\n            throw new Error(\"'logger' must be specified.\");\n        }\n\n        this._logger = logger;\n        this._dimensionsChangedEvent = new event.Event();\n        this._dimensionsChangedIntervalId = null;\n        this._toBeStarted = false;\n        this._videoElement = null;\n        this._dimensionsChangedData = {\n            pollFrequency: defaultPollFrequency,\n            previousWidth: 0,\n            previousHeight: 0\n        };\n\n        if (options && options.pollFrequency) {\n            this._dimensionsChangedData.pollFrequency = options.pollFrequency >= minimumPollFrequency ? options.pollFrequency : minimumPollFrequency;\n        }\n\n        this._renderer = null;\n    }\n\n    DimensionsChangedMonitor.prototype.start = function start(renderer, element) {\n        startMonitor.call(this, renderer, element);\n    };\n\n    DimensionsChangedMonitor.prototype.stop = function stop() {\n        stopMonitor.call(this);\n    };\n\n    DimensionsChangedMonitor.prototype.addVideoDisplayDimensionsChangedCallback = function addVideoDisplayDimensionsChangedCallback(callback) {\n        assert.isFunction(callback, 'addVideoDisplayDimensionsChangedCallback');\n        startInterval.call(this);\n\n        return this._dimensionsChangedEvent.listen(callback);\n    };\n\n    DimensionsChangedMonitor.prototype.toString = function() {\n        return 'DimensionsChangedMonitor[pollFrequency=' + this._dimensionsChangedData.pollFrequency +\n            ', previousHeight=' + this._dimensionsChangedData.previousHeight +\n            ', previousWidth=' + this._dimensionsChangedData.previousHeight +\n            ', state=' + (this._dimensionsChangedIntervalId ? 'running' : 'stopped') + ']';\n    };\n\n    function startMonitor(renderer, element) {\n        if (!element || _.isUndefined(element.videoWidth)) {\n            this._logger.warn(\"Attempting to start dimensions changed monitor without providing proper 'video' element.\");\n        }\n\n        this._renderer = renderer;\n        this._videoElement = element;\n        this._toBeStarted = true;\n        startInterval.call(this);\n    }\n\n    function stopMonitor() {\n        this._toBeStarted = false;\n\n        if (this._dimensionsChangedIntervalId) {\n            clearInterval(this._dimensionsChangedIntervalId);\n            this._dimensionsChangedIntervalId = null;\n        }\n\n        this._dimensionsChangedEvent.dispose();\n    }\n\n    function startInterval() {\n        // Return if either:\n        // - start hasn't been called yet\n        // - the interval is already running\n        // - there is no callback yet\n        if (!this._toBeStarted || this._dimensionsChangedIntervalId || this._dimensionsChangedEvent.size() === 0) {\n            return;\n        }\n\n        var that = this;\n        this._dimensionsChangedData.previousWidth = this._videoElement.videoWidth;\n        this._dimensionsChangedData.previousHeight = this._videoElement.videoHeight;\n\n        this._dimensionsChangedIntervalId = setInterval(function checkVideoDimensions() {\n            if (that._videoElement.videoWidth !== that._dimensionsChangedData.previousWidth || that._videoElement.videoHeight !== that._dimensionsChangedData.previousHeight) {\n                that._dimensionsChangedData.previousWidth = that._videoElement.videoWidth;\n                that._dimensionsChangedData.previousHeight = that._videoElement.videoHeight;\n\n                that._dimensionsChangedEvent.fireAsync([that._renderer, {\n                    width: that._videoElement.videoWidth,\n                    height: that._videoElement.videoHeight\n                }]);\n            }\n        }, that._dimensionsChangedData.pollFrequency);\n    }\n\n    return DimensionsChangedMonitor;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/DimensionsChangedMonitor.js\n// module id = 9\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var memberEnums = {\n        roles: {\n            participant: {\n                id: 0,\n                name: 'Participant'\n            },\n            moderator: {\n                id: 1,\n                name: 'Moderator'\n            },\n            presenter: {\n                id: 2,\n                name: 'Presenter'\n            },\n            audience: {\n                id: 3,\n                name: 'Audience'\n            }\n        },\n        states: {\n            active: {\n                id: 0,\n                name: 'Active'\n            },\n            passive: {\n                id: 1,\n                name: 'Passive'\n            },\n            handRaised: {\n                id: 2,\n                name: 'HandRaised'\n            },\n            inactive: {\n                id: 3,\n                name: 'Inactive'\n            },\n            offline: {\n                id: 4,\n                name: 'Offline'\n            }\n        }\n    };\n\n    return memberEnums;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/member.json.js\n// module id = 10\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var roomEnums = {\n        types: {\n            directChat: {\n                id: 0,\n                name: 'DirectChat'\n            },\n            multiPartyChat: {\n                id: 1,\n                name: 'MultiPartyChat'\n            },\n            moderatedChat: {\n                id: 2,\n                name: 'ModeratedChat'\n            },\n            townHall: {\n                id: 3,\n                name: 'TownHall'\n            },\n            channel: {\n                id: 4,\n                name: 'Channel'\n            }\n        },\n        events: {\n            memberJoined: {\n                id: 0,\n                name: 'MemberJoined'\n            },\n            memberLeft: {\n                id: 1,\n                name: 'MemberLeft'\n            },\n            memberUpdated: {\n                id: 2,\n                name: 'MemberUpdated'\n            },\n            roomUpdated: {\n                id: 3,\n                name: 'RoomUpdated'\n            },\n            roomEnded: {\n                id: 4,\n                name: 'RoomEnded'\n            }\n        }\n    };\n\n    return roomEnums;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/room.json.js\n// module id = 11\n// module chunks = 0","/*\r\n Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\r\n * Backing buffer: ArrayBuffer, Accessor: Uint8Array\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bytebuffer.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([\"long\"], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module['exports'] = (function() {\r\n            var Long; try { Long = require(\"long\"); } catch (e) {}\r\n            return factory(Long);\r\n        })();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"ByteBuffer\"] = factory(global[\"dcodeIO\"][\"Long\"]);\r\n\r\n})(this, function(Long) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a new ByteBuffer.\r\n     * @class The swiss army knife for binary data in JavaScript.\r\n     * @exports ByteBuffer\r\n     * @constructor\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @expose\r\n     */\r\n    var ByteBuffer = function(capacity, littleEndian, noAssert) {\r\n        if (typeof capacity === 'undefined')\r\n            capacity = ByteBuffer.DEFAULT_CAPACITY;\r\n        if (typeof littleEndian === 'undefined')\r\n            littleEndian = ByteBuffer.DEFAULT_ENDIAN;\r\n        if (typeof noAssert === 'undefined')\r\n            noAssert = ByteBuffer.DEFAULT_NOASSERT;\r\n        if (!noAssert) {\r\n            capacity = capacity | 0;\r\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity\");\r\n            littleEndian = !!littleEndian;\r\n            noAssert = !!noAssert;\r\n        }\r\n\r\n        /**\r\n         * Backing ArrayBuffer.\r\n         * @type {!ArrayBuffer}\r\n         * @expose\r\n         */\r\n        this.buffer = capacity === 0 ? EMPTY_BUFFER : new ArrayBuffer(capacity);\r\n\r\n        /**\r\n         * Uint8Array utilized to manipulate the backing buffer. Becomes `null` if the backing buffer has a capacity of `0`.\r\n         * @type {?Uint8Array}\r\n         * @expose\r\n         */\r\n        this.view = capacity === 0 ? null : new Uint8Array(this.buffer);\r\n\r\n        /**\r\n         * Absolute read/write offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.offset = 0;\r\n\r\n        /**\r\n         * Marked offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#mark\r\n         * @see ByteBuffer#reset\r\n         */\r\n        this.markedOffset = -1;\r\n\r\n        /**\r\n         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.limit = capacity;\r\n\r\n        /**\r\n         * Whether to use little endian byte order, defaults to `false` for big endian.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.littleEndian = littleEndian;\r\n\r\n        /**\r\n         * Whether to skip assertions of offsets and values, defaults to `false`.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.noAssert = noAssert;\r\n    };\r\n\r\n    /**\r\n     * ByteBuffer version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.VERSION = \"5.0.1\";\r\n\r\n    /**\r\n     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.LITTLE_ENDIAN = true;\r\n\r\n    /**\r\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.BIG_ENDIAN = false;\r\n\r\n    /**\r\n     * Default initial capacity of `16`.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_CAPACITY = 16;\r\n\r\n    /**\r\n     * Default endianess of `false` for big endian.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;\r\n\r\n    /**\r\n     * Default no assertions flag of `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_NOASSERT = false;\r\n\r\n    /**\r\n     * A `Long` class for representing a 64-bit two's-complement integer value. May be `null` if Long.js has not been loaded\r\n     *  and int64 support is not available.\r\n     * @type {?Long}\r\n     * @const\r\n     * @see https://github.com/dcodeIO/long.js\r\n     * @expose\r\n     */\r\n    ByteBuffer.Long = Long || null;\r\n\r\n    /**\r\n     * @alias ByteBuffer.prototype\r\n     * @inner\r\n     */\r\n    var ByteBufferPrototype = ByteBuffer.prototype;\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a ByteBuffer or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    ByteBufferPrototype.__isByteBuffer__;\r\n\r\n    Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    // helpers\r\n\r\n    /**\r\n     * @type {!ArrayBuffer}\r\n     * @inner\r\n     */\r\n    var EMPTY_BUFFER = new ArrayBuffer(0);\r\n\r\n    /**\r\n     * String.fromCharCode reference for compile-time renaming.\r\n     * @type {function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Creates a source function for a string.\r\n     * @param {string} s String to read from\r\n     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are\r\n     *  no more characters left.\r\n     * @throws {TypeError} If the argument is invalid\r\n     * @inner\r\n     */\r\n    function stringSource(s) {\r\n        var i=0; return function() {\r\n            return i < s.length ? s.charCodeAt(i++) : null;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a destination function for a string.\r\n     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\r\n     *  Returns the final string when called without arguments.\r\n     * @inner\r\n     */\r\n    function stringDestination() {\r\n        var cs = [], ps = []; return function() {\r\n            if (arguments.length === 0)\r\n                return ps.join('')+stringFromCharCode.apply(String, cs);\r\n            if (cs.length + arguments.length > 1024)\r\n                ps.push(stringFromCharCode.apply(String, cs)),\r\n                    cs.length = 0;\r\n            Array.prototype.push.apply(cs, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets the accessor type.\r\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.accessor = function() {\r\n        return Uint8Array;\r\n    };\r\n    /**\r\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {\r\n        return new ByteBuffer(capacity, littleEndian, noAssert);\r\n    };\r\n\r\n    /**\r\n     * Concatenates multiple ByteBuffers into one.\r\n     * @param {!Array.<!ByteBuffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate\r\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\r\n     *  defaults to \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\r\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var capacity = 0;\r\n        for (var i=0, k=buffers.length, length; i<k; ++i) {\r\n            if (!ByteBuffer.isByteBuffer(buffers[i]))\r\n                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);\r\n            length = buffers[i].limit - buffers[i].offset;\r\n            if (length > 0) capacity += length;\r\n        }\r\n        if (capacity === 0)\r\n            return new ByteBuffer(0, littleEndian, noAssert);\r\n        var bb = new ByteBuffer(capacity, littleEndian, noAssert),\r\n            bi;\r\n        i=0; while (i<k) {\r\n            bi = buffers[i++];\r\n            length = bi.limit - bi.offset;\r\n            if (length <= 0) continue;\r\n            bb.view.set(bi.view.subarray(bi.offset, bi.limit), bb.offset);\r\n            bb.offset += length;\r\n        }\r\n        bb.limit = bb.offset;\r\n        bb.offset = 0;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Tests if the specified type is a ByteBuffer.\r\n     * @param {*} bb ByteBuffer to test\r\n     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`\r\n     * @expose\r\n     */\r\n    ByteBuffer.isByteBuffer = function(bb) {\r\n        return (bb && bb[\"__isByteBuffer__\"]) === true;\r\n    };\r\n    /**\r\n     * Gets the backing buffer type.\r\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.type = function() {\r\n        return ArrayBuffer;\r\n    };\r\n    /**\r\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\r\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\r\n     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to\r\n     *  \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\r\n     * @expose\r\n     */\r\n    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        if (typeof buffer === 'string') {\r\n            if (typeof encoding === 'undefined')\r\n                encoding = \"utf8\";\r\n            switch (encoding) {\r\n                case \"base64\":\r\n                    return ByteBuffer.fromBase64(buffer, littleEndian);\r\n                case \"hex\":\r\n                    return ByteBuffer.fromHex(buffer, littleEndian);\r\n                case \"binary\":\r\n                    return ByteBuffer.fromBinary(buffer, littleEndian);\r\n                case \"utf8\":\r\n                    return ByteBuffer.fromUTF8(buffer, littleEndian);\r\n                case \"debug\":\r\n                    return ByteBuffer.fromDebug(buffer, littleEndian);\r\n                default:\r\n                    throw Error(\"Unsupported encoding: \"+encoding);\r\n            }\r\n        }\r\n        if (buffer === null || typeof buffer !== 'object')\r\n            throw TypeError(\"Illegal buffer\");\r\n        var bb;\r\n        if (ByteBuffer.isByteBuffer(buffer)) {\r\n            bb = ByteBufferPrototype.clone.call(buffer);\r\n            bb.markedOffset = -1;\r\n            return bb;\r\n        }\r\n        if (buffer instanceof Uint8Array) { // Extract ArrayBuffer from Uint8Array\r\n            bb = new ByteBuffer(0, littleEndian, noAssert);\r\n            if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER\r\n                bb.buffer = buffer.buffer;\r\n                bb.offset = buffer.byteOffset;\r\n                bb.limit = buffer.byteOffset + buffer.byteLength;\r\n                bb.view = new Uint8Array(buffer.buffer);\r\n            }\r\n        } else if (buffer instanceof ArrayBuffer) { // Reuse ArrayBuffer\r\n            bb = new ByteBuffer(0, littleEndian, noAssert);\r\n            if (buffer.byteLength > 0) {\r\n                bb.buffer = buffer;\r\n                bb.offset = 0;\r\n                bb.limit = buffer.byteLength;\r\n                bb.view = buffer.byteLength > 0 ? new Uint8Array(buffer) : null;\r\n            }\r\n        } else if (Object.prototype.toString.call(buffer) === \"[object Array]\") { // Create from octets\r\n            bb = new ByteBuffer(buffer.length, littleEndian, noAssert);\r\n            bb.limit = buffer.length;\r\n            for (var i=0; i<buffer.length; ++i)\r\n                bb.view[i] = buffer[i];\r\n        } else\r\n            throw TypeError(\"Illegal buffer\"); // Otherwise fail\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Writes the array as a bitset.\r\n     * @param {Array<boolean>} value Array of booleans to write\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBitSet = function(value, offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n      if (!this.noAssert) {\r\n        if (!(value instanceof Array))\r\n          throw TypeError(\"Illegal BitSet: Not an array\");\r\n        if (typeof offset !== 'number' || offset % 1 !== 0)\n            throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n        offset >>>= 0;\n        if (offset < 0 || offset + 0 > this.buffer.byteLength)\n            throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n      }\r\n\r\n      var start = offset,\r\n          bits = value.length,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          k;\r\n\r\n      offset += this.writeVarint32(bits,offset);\r\n\r\n      while(bytes--) {\r\n        k = (!!value[bit++] & 1) |\r\n            ((!!value[bit++] & 1) << 1) |\r\n            ((!!value[bit++] & 1) << 2) |\r\n            ((!!value[bit++] & 1) << 3) |\r\n            ((!!value[bit++] & 1) << 4) |\r\n            ((!!value[bit++] & 1) << 5) |\r\n            ((!!value[bit++] & 1) << 6) |\r\n            ((!!value[bit++] & 1) << 7);\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0; k = 0;\r\n        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n        return this;\r\n      }\r\n      return offset - start;\r\n    }\r\n\r\n    /**\r\n     * Reads a BitSet as an array of booleans.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {Array<boolean>\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBitSet = function(offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n\r\n      var ret = this.readVarint32(offset),\r\n          bits = ret.value,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          value = [],\r\n          k;\r\n\r\n      offset += ret.length;\r\n\r\n      while(bytes--) {\r\n        k = this.readByte(offset++);\r\n        value[bit++] = !!(k & 0x01);\r\n        value[bit++] = !!(k & 0x02);\r\n        value[bit++] = !!(k & 0x04);\r\n        value[bit++] = !!(k & 0x08);\r\n        value[bit++] = !!(k & 0x10);\r\n        value[bit++] = !!(k & 0x20);\r\n        value[bit++] = !!(k & 0x40);\r\n        value[bit++] = !!(k & 0x80);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0;\r\n        k = this.readByte(offset++);\r\n        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n      }\r\n      return value;\r\n    }\r\n    /**\r\n     * Reads the specified number of bytes.\r\n     * @param {number} length Number of bytes to read\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBytes = function(length, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + length > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);\n        }\r\n        var slice = this.slice(offset, offset + length);\r\n        if (relative) this.offset += length;\n        return slice;\r\n    };\r\n\r\n    /**\r\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\r\n     * @function\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;\r\n\r\n    // types/ints/int8\r\n\r\n    /**\r\n     * Writes an 8bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 1;\n        var capacity0 = this.buffer.byteLength;\n        if (offset > capacity0)\n            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);\n        offset -= 1;\n        this.view[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;\r\n\r\n    /**\r\n     * Reads an 8bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = this.view[offset];\r\n        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 1;\n        var capacity1 = this.buffer.byteLength;\n        if (offset > capacity1)\n            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);\n        offset -= 1;\n        this.view[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = this.view[offset];\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;\r\n\r\n    // types/ints/int16\r\n\r\n    /**\r\n     * Writes a 16bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 2;\n        var capacity2 = this.buffer.byteLength;\n        if (offset > capacity2)\n            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.view[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.view[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.view[offset]   = (value & 0xFF00) >>> 8;\r\n            this.view[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;\r\n\r\n    /**\r\n     * Reads a 16bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.view[offset  ];\r\n            value |= this.view[offset+1] << 8;\r\n        } else {\r\n            value  = this.view[offset  ] << 8;\r\n            value |= this.view[offset+1];\r\n        }\r\n        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 2;\n        var capacity3 = this.buffer.byteLength;\n        if (offset > capacity3)\n            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.view[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.view[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.view[offset]   = (value & 0xFF00) >>> 8;\r\n            this.view[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.view[offset  ];\r\n            value |= this.view[offset+1] << 8;\r\n        } else {\r\n            value  = this.view[offset  ] << 8;\r\n            value |= this.view[offset+1];\r\n        }\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;\r\n\r\n    // types/ints/int32\r\n\r\n    /**\r\n     * Writes a 32bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity4 = this.buffer.byteLength;\n        if (offset > capacity4)\n            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.view[offset+3] = (value >>> 24) & 0xFF;\n            this.view[offset+2] = (value >>> 16) & 0xFF;\n            this.view[offset+1] = (value >>>  8) & 0xFF;\n            this.view[offset  ] =  value         & 0xFF;\n        } else {\n            this.view[offset  ] = (value >>> 24) & 0xFF;\n            this.view[offset+1] = (value >>> 16) & 0xFF;\n            this.view[offset+2] = (value >>>  8) & 0xFF;\n            this.view[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;\r\n\r\n    /**\r\n     * Reads a 32bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.view[offset+2] << 16;\n            value |= this.view[offset+1] <<  8;\n            value |= this.view[offset  ];\n            value += this.view[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.view[offset+1] << 16;\n            value |= this.view[offset+2] <<  8;\n            value |= this.view[offset+3];\n            value += this.view[offset  ] << 24 >>> 0;\n        }\n        value |= 0; // Cast to signed\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity5 = this.buffer.byteLength;\n        if (offset > capacity5)\n            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.view[offset+3] = (value >>> 24) & 0xFF;\n            this.view[offset+2] = (value >>> 16) & 0xFF;\n            this.view[offset+1] = (value >>>  8) & 0xFF;\n            this.view[offset  ] =  value         & 0xFF;\n        } else {\n            this.view[offset  ] = (value >>> 24) & 0xFF;\n            this.view[offset+1] = (value >>> 16) & 0xFF;\n            this.view[offset+2] = (value >>>  8) & 0xFF;\n            this.view[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.view[offset+2] << 16;\n            value |= this.view[offset+1] <<  8;\n            value |= this.view[offset  ];\n            value += this.view[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.view[offset+1] << 16;\n            value |= this.view[offset+2] <<  8;\n            value |= this.view[offset+3];\n            value += this.view[offset  ] << 24 >>> 0;\n        }\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;\r\n\r\n    // types/ints/int64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Writes a 64bit signed integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeInt64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity6 = this.buffer.byteLength;\n            if (offset > capacity6)\n                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.view[offset+3] = (lo >>> 24) & 0xFF;\n                this.view[offset+2] = (lo >>> 16) & 0xFF;\n                this.view[offset+1] = (lo >>>  8) & 0xFF;\n                this.view[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.view[offset+3] = (hi >>> 24) & 0xFF;\n                this.view[offset+2] = (hi >>> 16) & 0xFF;\n                this.view[offset+1] = (hi >>>  8) & 0xFF;\n                this.view[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.view[offset  ] = (hi >>> 24) & 0xFF;\n                this.view[offset+1] = (hi >>> 16) & 0xFF;\n                this.view[offset+2] = (hi >>>  8) & 0xFF;\n                this.view[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.view[offset  ] = (lo >>> 24) & 0xFF;\n                this.view[offset+1] = (lo >>> 16) & 0xFF;\n                this.view[offset+2] = (lo >>>  8) & 0xFF;\n                this.view[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;\r\n\r\n        /**\r\n         * Reads a 64bit signed integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readInt64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.view[offset+2] << 16;\n                lo |= this.view[offset+1] <<  8;\n                lo |= this.view[offset  ];\n                lo += this.view[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.view[offset+2] << 16;\n                hi |= this.view[offset+1] <<  8;\n                hi |= this.view[offset  ];\n                hi += this.view[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.view[offset+1] << 16;\n                hi |= this.view[offset+2] <<  8;\n                hi |= this.view[offset+3];\n                hi += this.view[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.view[offset+1] << 16;\n                lo |= this.view[offset+2] <<  8;\n                lo |= this.view[offset+3];\n                lo += this.view[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, false);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity7 = this.buffer.byteLength;\n            if (offset > capacity7)\n                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.view[offset+3] = (lo >>> 24) & 0xFF;\n                this.view[offset+2] = (lo >>> 16) & 0xFF;\n                this.view[offset+1] = (lo >>>  8) & 0xFF;\n                this.view[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.view[offset+3] = (hi >>> 24) & 0xFF;\n                this.view[offset+2] = (hi >>> 16) & 0xFF;\n                this.view[offset+1] = (hi >>>  8) & 0xFF;\n                this.view[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.view[offset  ] = (hi >>> 24) & 0xFF;\n                this.view[offset+1] = (hi >>> 16) & 0xFF;\n                this.view[offset+2] = (hi >>>  8) & 0xFF;\n                this.view[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.view[offset  ] = (lo >>> 24) & 0xFF;\n                this.view[offset+1] = (lo >>> 16) & 0xFF;\n                this.view[offset+2] = (lo >>>  8) & 0xFF;\n                this.view[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\r\n         * @function\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.view[offset+2] << 16;\n                lo |= this.view[offset+1] <<  8;\n                lo |= this.view[offset  ];\n                lo += this.view[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.view[offset+2] << 16;\n                hi |= this.view[offset+1] <<  8;\n                hi |= this.view[offset  ];\n                hi += this.view[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.view[offset+1] << 16;\n                hi |= this.view[offset+2] <<  8;\n                hi |= this.view[offset+3];\n                hi += this.view[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.view[offset+1] << 16;\n                lo |= this.view[offset+2] <<  8;\n                lo |= this.view[offset+3];\n                lo += this.view[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, true);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\r\n         * @function\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;\r\n\r\n    } // Long\r\n\r\n\r\n    // types/floats/float32\r\n\r\n    /*\r\n     ieee754 - https://github.com/feross/ieee754\r\n\r\n     The MIT License (MIT)\r\n\r\n     Copyright (c) Feross Aboukhadijeh\r\n\r\n     Permission is hereby granted, free of charge, to any person obtaining a copy\r\n     of this software and associated documentation files (the \"Software\"), to deal\r\n     in the Software without restriction, including without limitation the rights\r\n     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n     copies of the Software, and to permit persons to whom the Software is\r\n     furnished to do so, subject to the following conditions:\r\n\r\n     The above copyright notice and this permission notice shall be included in\r\n     all copies or substantial portions of the Software.\r\n\r\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n     THE SOFTWARE.\r\n    */\r\n\r\n    /**\r\n     * Reads an IEEE754 float from a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    function ieee754_read(buffer, offset, isLE, mLen, nBytes) {\r\n        var e, m,\r\n            eLen = nBytes * 8 - mLen - 1,\r\n            eMax = (1 << eLen) - 1,\r\n            eBias = eMax >> 1,\r\n            nBits = -7,\r\n            i = isLE ? (nBytes - 1) : 0,\r\n            d = isLE ? -1 : 1,\r\n            s = buffer[offset + i];\r\n\r\n        i += d;\r\n\r\n        e = s & ((1 << (-nBits)) - 1);\r\n        s >>= (-nBits);\r\n        nBits += eLen;\r\n        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n        m = e & ((1 << (-nBits)) - 1);\r\n        e >>= (-nBits);\r\n        nBits += mLen;\r\n        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n        if (e === 0) {\r\n            e = 1 - eBias;\r\n        } else if (e === eMax) {\r\n            return m ? NaN : ((s ? -1 : 1) * Infinity);\r\n        } else {\r\n            m = m + Math.pow(2, mLen);\r\n            e = e - eBias;\r\n        }\r\n        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\r\n    }\r\n\r\n    /**\r\n     * Writes an IEEE754 float to a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} value\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @inner\r\n     */\r\n    function ieee754_write(buffer, value, offset, isLE, mLen, nBytes) {\r\n        var e, m, c,\r\n            eLen = nBytes * 8 - mLen - 1,\r\n            eMax = (1 << eLen) - 1,\r\n            eBias = eMax >> 1,\r\n            rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\r\n            i = isLE ? 0 : (nBytes - 1),\r\n            d = isLE ? 1 : -1,\r\n            s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\r\n\r\n        value = Math.abs(value);\r\n\r\n        if (isNaN(value) || value === Infinity) {\r\n            m = isNaN(value) ? 1 : 0;\r\n            e = eMax;\r\n        } else {\r\n            e = Math.floor(Math.log(value) / Math.LN2);\r\n            if (value * (c = Math.pow(2, -e)) < 1) {\r\n                e--;\r\n                c *= 2;\r\n            }\r\n            if (e + eBias >= 1) {\r\n                value += rt / c;\r\n            } else {\r\n                value += rt * Math.pow(2, 1 - eBias);\r\n            }\r\n            if (value * c >= 2) {\r\n                e++;\r\n                c /= 2;\r\n            }\r\n\r\n            if (e + eBias >= eMax) {\r\n                m = 0;\r\n                e = eMax;\r\n            } else if (e + eBias >= 1) {\r\n                m = (value * c - 1) * Math.pow(2, mLen);\r\n                e = e + eBias;\r\n            } else {\r\n                m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\r\n                e = 0;\r\n            }\r\n        }\r\n\r\n        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n        e = (e << mLen) | m;\r\n        eLen += mLen;\r\n        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n        buffer[offset + i - d] |= s * 128;\r\n    }\r\n\r\n    /**\r\n     * Writes a 32bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 4;\n        var capacity8 = this.buffer.byteLength;\n        if (offset > capacity8)\n            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);\n        offset -= 4;\n        ieee754_write(this.view, value, offset, this.littleEndian, 23, 4);\r\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;\r\n\r\n    /**\r\n     * Reads a 32bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = ieee754_read(this.view, offset, this.littleEndian, 23, 4);\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;\r\n\r\n    // types/floats/float64\r\n\r\n    /**\r\n     * Writes a 64bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat64 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        offset += 8;\n        var capacity9 = this.buffer.byteLength;\n        if (offset > capacity9)\n            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);\n        offset -= 8;\n        ieee754_write(this.view, value, offset, this.littleEndian, 52, 8);\r\n        if (relative) this.offset += 8;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;\r\n\r\n    /**\r\n     * Reads a 64bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat64 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 8 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);\n        }\r\n        var value = ieee754_read(this.view, offset, this.littleEndian, 52, 8);\r\n        if (relative) this.offset += 8;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;\r\n\r\n\r\n    // types/varints/varint32\r\n\r\n    /**\r\n     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.MAX_VARINT32_BYTES = 5;\r\n\r\n    /**\r\n     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to encode\r\n     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateVarint32 = function(value) {\r\n        // ref: src/google/protobuf/io/coded_stream.cc\r\n        value = value >>> 0;\r\n             if (value < 1 << 7 ) return 1;\r\n        else if (value < 1 << 14) return 2;\r\n        else if (value < 1 << 21) return 3;\r\n        else if (value < 1 << 28) return 4;\r\n        else                      return 5;\r\n    };\r\n\r\n    /**\r\n     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.\r\n     * @param {number} n Signed 32bit integer\r\n     * @returns {number} Unsigned zigzag encoded 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagEncode32 = function(n) {\r\n        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Decodes a zigzag encoded signed 32bit integer.\r\n     * @param {number} n Unsigned zigzag encoded 32bit integer\r\n     * @returns {number} Signed 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagDecode32 = function(n) {\r\n        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var size = ByteBuffer.calculateVarint32(value),\r\n            b;\r\n        offset += size;\n        var capacity10 = this.buffer.byteLength;\n        if (offset > capacity10)\n            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);\n        offset -= size;\n        value >>>= 0;\r\n        while (value >= 0x80) {\r\n            b = (value & 0x7f) | 0x80;\r\n            this.view[offset++] = b;\r\n            value >>>= 7;\r\n        }\r\n        this.view[offset++] = value;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    /**\r\n     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {\r\n        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available\r\n     *  to fully decode the varint.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var c = 0,\r\n            value = 0 >>> 0,\r\n            b;\r\n        do {\r\n            if (!this.noAssert && offset > this.limit) {\r\n                var err = Error(\"Truncated\");\r\n                err['truncated'] = true;\r\n                throw err;\r\n            }\r\n            b = this.view[offset++];\r\n            if (c < 5)\r\n                value |= (b & 0x7f) << (7*c);\r\n            ++c;\r\n        } while ((b & 0x80) !== 0);\r\n        value |= 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return value;\r\n        }\r\n        return {\r\n            \"value\": value,\r\n            \"length\": c\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32ZigZag = function(offset) {\r\n        var val = this.readVarint32(offset);\r\n        if (typeof val === 'object')\r\n            val[\"value\"] = ByteBuffer.zigZagDecode32(val[\"value\"]);\r\n        else\r\n            val = ByteBuffer.zigZagDecode32(val);\r\n        return val;\r\n    };\r\n\r\n    // types/varints/varint64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @type {number}\r\n         * @const\r\n         * @expose\r\n         */\r\n        ByteBuffer.MAX_VARINT64_BYTES = 10;\r\n\r\n        /**\r\n         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @param {number|!Long} value Value to encode\r\n         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}\r\n         * @expose\r\n         */\r\n        ByteBuffer.calculateVarint64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            if (part2 == 0) {\r\n                if (part1 == 0) {\r\n                    if (part0 < 1 << 14)\r\n                        return part0 < 1 << 7 ? 1 : 2;\r\n                    else\r\n                        return part0 < 1 << 21 ? 3 : 4;\r\n                } else {\r\n                    if (part1 < 1 << 14)\r\n                        return part1 < 1 << 7 ? 5 : 6;\r\n                    else\r\n                        return part1 < 1 << 21 ? 7 : 8;\r\n                }\r\n            } else\r\n                return part2 < 1 << 7 ? 9 : 10;\r\n        };\r\n\r\n        /**\r\n         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.\r\n         * @param {number|!Long} value Signed long\r\n         * @returns {!Long} Unsigned zigzag encoded long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagEncode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();\r\n        };\r\n\r\n        /**\r\n         * Decodes a zigzag encoded signed 64bit integer.\r\n         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number\r\n         * @returns {!Long} Signed long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagDecode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            var size = ByteBuffer.calculateVarint64(value),\r\n                part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            offset += size;\n            var capacity11 = this.buffer.byteLength;\n            if (offset > capacity11)\n                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);\n            offset -= size;\n            switch (size) {\r\n                case 10: this.view[offset+9] = (part2 >>>  7) & 0x01;\r\n                case 9 : this.view[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;\r\n                case 8 : this.view[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;\r\n                case 7 : this.view[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;\r\n                case 6 : this.view[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;\r\n                case 5 : this.view[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;\r\n                case 4 : this.view[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;\r\n                case 3 : this.view[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;\r\n                case 2 : this.view[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;\r\n                case 1 : this.view[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;\r\n            }\r\n            if (relative) {\r\n                this.offset += size;\r\n                return this;\r\n            } else {\r\n                return size;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Writes a zig-zag encoded 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {\r\n            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n            }\r\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var start = offset,\r\n                part0 = 0,\r\n                part1 = 0,\r\n                part2 = 0,\r\n                b  = 0;\r\n            b = this.view[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.view[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            throw Error(\"Buffer overrun\"); }}}}}}}}}}\r\n            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return value;\r\n            } else {\r\n                return {\r\n                    'value': value,\r\n                    'length': offset-start\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64ZigZag = function(offset) {\r\n            var val = this.readVarint64(offset);\r\n            if (val && val['value'] instanceof Long)\r\n                val[\"value\"] = ByteBuffer.zigZagDecode64(val[\"value\"]);\r\n            else\r\n                val = ByteBuffer.zigZagDecode64(val);\r\n            return val;\r\n        };\r\n\r\n    } // Long\r\n\r\n\r\n    // types/strings/cstring\r\n\r\n    /**\r\n     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL\r\n     *  characters itself.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  contained in `str` + 1 if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeCString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        var i,\r\n            k = str.length;\r\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            for (i=0; i<k; ++i) {\r\n                if (str.charCodeAt(i) === 0)\r\n                    throw RangeError(\"Illegal str: Contains NULL-characters\");\r\n            }\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character, so:\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n        offset += k+1;\n        var capacity12 = this.buffer.byteLength;\n        if (offset > capacity12)\n            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);\n        offset -= k+1;\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        this.view[offset++] = 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters\r\n     *  itself.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readCString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            temp;\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:\r\n        var sd, b = -1;\r\n        utfx.decodeUTF8toUTF16(function() {\r\n            if (b === 0) return null;\r\n            if (offset >= this.limit)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+offset+\" < \"+this.limit);\r\n            b = this.view[offset++];\r\n            return b === 0 ? null : b;\r\n        }.bind(this), sd = stringDestination(), true);\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return sd();\r\n        } else {\r\n            return {\r\n                \"string\": sd(),\r\n                \"length\": offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/istring\r\n\r\n    /**\r\n     * Writes a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeIString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            k;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];\r\n        offset += 4+k;\n        var capacity13 = this.buffer.byteLength;\n        if (offset > capacity13)\n            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);\n        offset -= 4+k;\n        if (this.littleEndian) {\n            this.view[offset+3] = (k >>> 24) & 0xFF;\n            this.view[offset+2] = (k >>> 16) & 0xFF;\n            this.view[offset+1] = (k >>>  8) & 0xFF;\n            this.view[offset  ] =  k         & 0xFF;\n        } else {\n            this.view[offset  ] = (k >>> 24) & 0xFF;\n            this.view[offset+1] = (k >>> 16) & 0xFF;\n            this.view[offset+2] = (k >>>  8) & 0xFF;\n            this.view[offset+3] =  k         & 0xFF;\n        }\n        offset += 4;\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (offset !== start + 4 + k)\r\n            throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+4+k));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readIString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset;\r\n        var len = this.readUint32(offset);\r\n        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/utf8string\r\n\r\n    /**\r\n     * Metrics representing number of UTF8 characters. Evaluates to `c`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_CHARS = 'c';\r\n\r\n    /**\r\n     * Metrics representing number of bytes. Evaluates to `b`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_BYTES = 'b';\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUTF8String = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var k;\r\n        var start = offset;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n        offset += k;\n        var capacity14 = this.buffer.byteLength;\n        if (offset > capacity14)\n            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);\n        offset -= k;\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.\r\n     * @function\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;\r\n\r\n    /**\r\n     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's\r\n     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 characters\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Chars = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[0];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Bytes = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[1];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.\r\n     * @function\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string.\r\n     * @param {number} length Number of characters or bytes to read.\r\n     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {\r\n        if (typeof metrics === 'number') {\r\n            offset = metrics;\r\n            metrics = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var i = 0,\r\n            start = offset,\r\n            sd;\r\n        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser\r\n            sd = stringDestination();\r\n            utfx.decodeUTF8(function() {\r\n                return i < length && offset < this.limit ? this.view[offset++] : null;\r\n            }.bind(this), function(cp) {\r\n                ++i; utfx.UTF8toUTF16(cp, sd);\r\n            });\r\n            if (i !== length)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    \"string\": sd(),\r\n                    \"length\": offset - start\r\n                };\r\n            }\r\n        } else if (metrics === ByteBuffer.METRICS_BYTES) {\r\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + length > this.buffer.byteLength)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);\n            }\r\n            var k = offset + length;\r\n            utfx.decodeUTF8toUTF16(function() {\r\n                return offset < k ? this.view[offset++] : null;\r\n            }.bind(this), sd = stringDestination(), this.noAssert);\r\n            if (offset !== k)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+k);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    'string': sd(),\r\n                    'length': offset - start\r\n                };\r\n            }\r\n        } else\r\n            throw TypeError(\"Unsupported metrics: \"+metrics);\r\n    };\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.\r\n     * @function\r\n     * @param {number} length Number of characters or bytes to read\r\n     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;\r\n\r\n    // types/strings/vstring\r\n\r\n    /**\r\n     * Writes a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeVString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset,\r\n            k, l;\r\n        k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1];\r\n        l = ByteBuffer.calculateVarint32(k);\r\n        offset += l+k;\n        var capacity15 = this.buffer.byteLength;\n        if (offset > capacity15)\n            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);\n        offset -= l+k;\n        offset += this.writeVarint32(k, offset);\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            this.view[offset++] = b;\r\n        }.bind(this));\r\n        if (offset !== start+k+l)\r\n            throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+k+l));\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readVString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);\n        }\r\n        var start = offset;\r\n        var len = this.readVarint32(offset);\r\n        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\r\n     *  data's length.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\r\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\r\n     */\r\n    ByteBufferPrototype.append = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var length = source.limit - source.offset;\r\n        if (length <= 0) return this; // Nothing to append\r\n        offset += length;\n        var capacity16 = this.buffer.byteLength;\n        if (offset > capacity16)\n            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);\n        offset -= length;\n        this.view.set(source.view.subarray(source.offset, source.limit), offset);\r\n        source.offset += length;\r\n        if (relative) this.offset += length;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\r\n        specified offset up to the length of this ByteBuffer's data.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#append\r\n     */\r\n    ByteBufferPrototype.appendTo = function(target, offset) {\r\n        target.append(this, offset);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\r\n     *  disable them if your code already makes sure that everything is valid.\r\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.assert = function(assert) {\r\n        this.noAssert = !assert;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Gets the capacity of this ByteBuffer's backing buffer.\r\n     * @returns {number} Capacity of the backing buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.capacity = function() {\r\n        return this.buffer.byteLength;\r\n    };\r\n    /**\r\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\r\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clear = function() {\r\n        this.offset = 0;\r\n        this.limit = this.buffer.byteLength;\r\n        this.markedOffset = -1;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\r\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\r\n     * @returns {!ByteBuffer} Cloned instance\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clone = function(copy) {\r\n        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        if (copy) {\r\n            bb.buffer = new ArrayBuffer(this.buffer.byteLength);\r\n            bb.view = new Uint8Array(bb.buffer);\r\n        } else {\r\n            bb.buffer = this.buffer;\r\n            bb.view = this.view;\r\n        }\r\n        bb.offset = this.offset;\r\n        bb.markedOffset = this.markedOffset;\r\n        bb.limit = this.limit;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\r\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\r\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.compact = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === 0 && end === this.buffer.byteLength)\r\n            return this; // Already compacted\r\n        var len = end - begin;\r\n        if (len === 0) {\r\n            this.buffer = EMPTY_BUFFER;\r\n            this.view = null;\r\n            if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n            this.offset = 0;\r\n            this.limit = 0;\r\n            return this;\r\n        }\r\n        var buffer = new ArrayBuffer(len);\r\n        var view = new Uint8Array(buffer);\r\n        view.set(this.view.subarray(begin, end));\r\n        this.buffer = buffer;\r\n        this.view = view;\r\n        if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n        this.offset = 0;\r\n        this.limit = len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Copy\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copy = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === end)\r\n            return new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        var capacity = end - begin,\r\n            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);\r\n        bb.offset = 0;\r\n        bb.limit = capacity;\r\n        if (bb.markedOffset >= 0) bb.markedOffset -= begin;\r\n        this.copyTo(bb, 0, begin, end);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\r\n     *  by the number of bytes copied if omitted.\r\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\r\n     *  number of bytes copied if omitted.\r\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {\r\n        var relative,\r\n            targetRelative;\r\n        if (!this.noAssert) {\r\n            if (!ByteBuffer.isByteBuffer(target))\r\n                throw TypeError(\"Illegal target: Not a ByteBuffer\");\r\n        }\r\n        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;\r\n        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;\r\n        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;\r\n\r\n        if (targetOffset < 0 || targetOffset > target.buffer.byteLength)\r\n            throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.byteLength);\r\n        if (sourceOffset < 0 || sourceLimit > this.buffer.byteLength)\r\n            throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.byteLength);\r\n\r\n        var len = sourceLimit - sourceOffset;\r\n        if (len === 0)\r\n            return target; // Nothing to copy\r\n\r\n        target.ensureCapacity(targetOffset + len);\r\n\r\n        target.view.set(this.view.subarray(sourceOffset, sourceLimit), targetOffset);\r\n\r\n        if (relative) this.offset += len;\r\n        if (targetRelative) target.offset += len;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\r\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\r\n     *  the required capacity will be used instead.\r\n     * @param {number} capacity Required capacity\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.ensureCapacity = function(capacity) {\r\n        var current = this.buffer.byteLength;\r\n        if (current < capacity)\r\n            return this.resize((current *= 2) > capacity ? current : capacity);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\r\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\r\n     */\r\n    ByteBufferPrototype.fill = function(value, begin, end) {\r\n        var relative = typeof begin === 'undefined';\n        if (relative) begin = this.offset;\n        if (typeof value === 'string' && value.length > 0)\r\n            value = value.charCodeAt(0);\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin >= end)\r\n            return this; // Nothing to fill\r\n        while (begin < end) this.view[begin++] = value;\r\n        if (relative) this.offset = begin;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\r\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.flip = function() {\r\n        this.limit = this.offset;\r\n        this.offset = 0;\r\n        return this;\r\n    };\r\n    /**\r\n     * Marks an offset on this ByteBuffer to be used later.\r\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @see ByteBuffer#reset\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.mark = function(offset) {\r\n        offset = typeof offset === 'undefined' ? this.offset : offset;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        this.markedOffset = offset;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the byte order.\r\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.order = function(littleEndian) {\r\n        if (!this.noAssert) {\r\n            if (typeof littleEndian !== 'boolean')\r\n                throw TypeError(\"Illegal littleEndian: Not a boolean\");\r\n        }\r\n        this.littleEndian = !!littleEndian;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) little endian byte order.\r\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.LE = function(littleEndian) {\r\n        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) big endian byte order.\r\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.BE = function(bigEndian) {\r\n        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;\r\n        return this;\r\n    };\r\n    /**\r\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer|string|!ArrayBuffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be\r\n     *  modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\r\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\r\n     */\r\n    ByteBufferPrototype.prepend = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.byteLength)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var len = source.limit - source.offset;\r\n        if (len <= 0) return this; // Nothing to prepend\r\n        var diff = len - offset;\r\n        if (diff > 0) { // Not enough space before offset, so resize + move\r\n            var buffer = new ArrayBuffer(this.buffer.byteLength + diff);\r\n            var view = new Uint8Array(buffer);\r\n            view.set(this.view.subarray(offset, this.buffer.byteLength), len);\r\n            this.buffer = buffer;\r\n            this.view = view;\r\n            this.offset += diff;\r\n            if (this.markedOffset >= 0) this.markedOffset += diff;\r\n            this.limit += diff;\r\n            offset += diff;\r\n        } else {\r\n            var arrayView = new Uint8Array(this.buffer);\r\n        }\r\n        this.view.set(source.view.subarray(source.offset, source.limit), offset - len);\r\n\r\n        source.offset = source.limit;\r\n        if (relative)\r\n            this.offset -= len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#prepend\r\n     */\r\n    ByteBufferPrototype.prependTo = function(target, offset) {\r\n        target.prepend(this, offset);\r\n        return this;\r\n    };\r\n    /**\r\n     * Prints debug information about this ByteBuffer's contents.\r\n     * @param {function(string)=} out Output function to call, defaults to console.log\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.printDebug = function(out) {\r\n        if (typeof out !== 'function') out = console.log.bind(console);\r\n        out(\r\n            this.toString()+\"\\n\"+\r\n            \"-------------------------------------------------------------------\\n\"+\r\n            this.toDebug(/* columns */ true)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\r\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.remaining = function() {\r\n        return this.limit - this.offset;\r\n    };\r\n    /**\r\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\r\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\r\n     *  marked, sets `offset = 0`.\r\n     * @returns {!ByteBuffer} this\r\n     * @see ByteBuffer#mark\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reset = function() {\r\n        if (this.markedOffset >= 0) {\r\n            this.offset = this.markedOffset;\r\n            this.markedOffset = -1;\r\n        } else {\r\n            this.offset = 0;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\r\n     *  large or larger.\r\n     * @param {number} capacity Capacity required\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `capacity` is not a number\r\n     * @throws {RangeError} If `capacity < 0`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.resize = function(capacity) {\r\n        if (!this.noAssert) {\r\n            if (typeof capacity !== 'number' || capacity % 1 !== 0)\n                throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");\n            capacity |= 0;\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity: 0 <= \"+capacity);\r\n        }\r\n        if (this.buffer.byteLength < capacity) {\r\n            var buffer = new ArrayBuffer(capacity);\r\n            var view = new Uint8Array(buffer);\r\n            view.set(this.view);\r\n            this.buffer = buffer;\r\n            this.view = view;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Reverses this ByteBuffer's contents.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reverse = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        if (begin === end)\r\n            return this; // Nothing to reverse\r\n        Array.prototype.reverse.call(this.view.subarray(begin, end));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the next `length` bytes. This will just advance\r\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.skip = function(length) {\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n        }\r\n        var offset = this.offset + length;\r\n        if (!this.noAssert) {\r\n            if (offset < 0 || offset > this.buffer.byteLength)\r\n                throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.byteLength);\r\n        }\r\n        this.offset = offset;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.slice = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var bb = this.clone();\r\n        bb.offset = begin;\r\n        bb.limit = end;\r\n        return bb;\r\n    };\r\n    /**\r\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\r\n     *  possible. Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBuffer = function(forceCopy) {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.byteLength);\n        }\r\n        // NOTE: It's not possible to have another ArrayBuffer reference the same memory as the backing buffer. This is\r\n        // possible with Uint8Array#subarray only, but we have to return an ArrayBuffer by contract. So:\r\n        if (!forceCopy && offset === 0 && limit === this.buffer.byteLength)\r\n            return this.buffer;\r\n        if (offset === limit)\r\n            return EMPTY_BUFFER;\r\n        var buffer = new ArrayBuffer(limit - offset);\r\n        new Uint8Array(buffer).set(new Uint8Array(this.buffer).subarray(offset, limit), 0);\r\n        return buffer;\r\n    };\r\n\r\n    /**\r\n     * Returns a raw buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. This is an alias of {@link ByteBuffer#toBuffer}.\r\n     * @function\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory.\r\n     *  Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toArrayBuffer = ByteBufferPrototype.toBuffer;\r\n\r\n    /**\r\n     * Converts the ByteBuffer's contents to a string.\r\n     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows\r\n     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with\r\n     *  highlighted offsets.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {string} String representation\r\n     * @throws {Error} If `encoding` is invalid\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toString = function(encoding, begin, end) {\r\n        if (typeof encoding === 'undefined')\r\n            return \"ByteBufferAB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";\r\n        if (typeof encoding === 'number')\r\n            encoding = \"utf8\",\r\n            begin = encoding,\r\n            end = begin;\r\n        switch (encoding) {\r\n            case \"utf8\":\r\n                return this.toUTF8(begin, end);\r\n            case \"base64\":\r\n                return this.toBase64(begin, end);\r\n            case \"hex\":\r\n                return this.toHex(begin, end);\r\n            case \"binary\":\r\n                return this.toBinary(begin, end);\r\n            case \"debug\":\r\n                return this.toDebug();\r\n            case \"columns\":\r\n                return this.toColumns();\r\n            default:\r\n                throw Error(\"Unsupported encoding: \"+encoding);\r\n        }\r\n    };\r\n\r\n    // lxiv-embeddable\r\n\r\n    /**\r\n     * lxiv-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/lxiv for details\r\n     */\r\n    var lxiv = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * lxiv namespace.\r\n         * @type {!Object.<string,*>}\r\n         * @exports lxiv\r\n         */\r\n        var lxiv = {};\r\n\r\n        /**\r\n         * Character codes for output.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */\r\n        var aout = [\r\n            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\r\n            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102,\r\n            103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118,\r\n            119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47\r\n        ];\r\n\r\n        /**\r\n         * Character codes for input.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */\r\n        var ain = [];\r\n        for (var i=0, k=aout.length; i<k; ++i)\r\n            ain[aout[i]] = i;\r\n\r\n        /**\r\n         * Encodes bytes to base64 char codes.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if\r\n         *  there are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each encoded char\r\n         *  code.\r\n         */\r\n        lxiv.encode = function(src, dst) {\r\n            var b, t;\r\n            while ((b = src()) !== null) {\r\n                dst(aout[(b>>2)&0x3f]);\r\n                t = (b&0x3)<<4;\r\n                if ((b = src()) !== null) {\r\n                    t |= (b>>4)&0xf;\r\n                    dst(aout[(t|((b>>4)&0xf))&0x3f]);\r\n                    t = (b&0xf)<<2;\r\n                    if ((b = src()) !== null)\r\n                        dst(aout[(t|((b>>6)&0x3))&0x3f]),\r\n                        dst(aout[b&0x3f]);\r\n                    else\r\n                        dst(aout[t&0x3f]),\r\n                        dst(61);\r\n                } else\r\n                    dst(aout[t&0x3f]),\r\n                    dst(61),\r\n                    dst(61);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes base64 char codes to bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         * @throws {Error} If a character code is invalid\r\n         */\r\n        lxiv.decode = function(src, dst) {\r\n            var c, t1, t2;\r\n            function fail(c) {\r\n                throw Error(\"Illegal character code: \"+c);\r\n            }\r\n            while ((c = src()) !== null) {\r\n                t1 = ain[c];\r\n                if (typeof t1 === 'undefined') fail(c);\r\n                if ((c = src()) !== null) {\r\n                    t2 = ain[c];\r\n                    if (typeof t2 === 'undefined') fail(c);\r\n                    dst((t1<<2)>>>0|(t2&0x30)>>4);\r\n                    if ((c = src()) !== null) {\r\n                        t1 = ain[c];\r\n                        if (typeof t1 === 'undefined')\r\n                            if (c === 61) break; else fail(c);\r\n                        dst(((t2&0xf)<<4)>>>0|(t1&0x3c)>>2);\r\n                        if ((c = src()) !== null) {\r\n                            t2 = ain[c];\r\n                            if (typeof t2 === 'undefined')\r\n                                if (c === 61) break; else fail(c);\r\n                            dst(((t1&0x3)<<6)>>>0|t2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Tests if a string is valid base64.\r\n         * @param {string} str String to test\r\n         * @returns {boolean} `true` if valid, otherwise `false`\r\n         */\r\n        lxiv.test = function(str) {\r\n            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str);\r\n        };\r\n\r\n        return lxiv;\r\n    }();\r\n\r\n    // encodings/base64\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a base64 encoded string.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Base64 encoded string\r\n     * @throws {RangeError} If `begin` or `end` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBase64 = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin = begin | 0; end = end | 0;\r\n        if (begin < 0 || end > this.capacity || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        var sd; lxiv.encode(function() {\r\n            return begin < end ? this.view[begin++] : null;\r\n        }.bind(this), sd = stringDestination());\r\n        return sd();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBase64 = function(str, littleEndian) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"str\");\r\n        var bb = new ByteBuffer(str.length/4*3, littleEndian),\r\n            i = 0;\r\n        lxiv.decode(stringSource(str), function(b) {\r\n            bb.view[i++] = b;\r\n        });\r\n        bb.limit = i;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Encodes a binary string to base64 like `window.btoa` does.\r\n     * @param {string} str Binary string\r\n     * @returns {string} Base64 encoded string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa\r\n     * @expose\r\n     */\r\n    ByteBuffer.btoa = function(str) {\r\n        return ByteBuffer.fromBinary(str).toBase64();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to binary like `window.atob` does.\r\n     * @param {string} b64 Base64 encoded string\r\n     * @returns {string} Binary string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob\r\n     * @expose\r\n     */\r\n    ByteBuffer.atob = function(b64) {\r\n        return ByteBuffer.fromBase64(b64).toBinary();\r\n    };\r\n\r\n    // encodings/binary\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Binary encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBinary = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin |= 0; end |= 0;\r\n        if (begin < 0 || end > this.capacity() || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        if (begin === end)\r\n            return \"\";\r\n        var chars = [],\r\n            parts = [];\r\n        while (begin < end) {\r\n            chars.push(this.view[begin++]);\r\n            if (chars.length >= 1024)\r\n                parts.push(String.fromCharCode.apply(String, chars)),\r\n                chars = [];\r\n        }\r\n        return parts.join('') + String.fromCharCode.apply(String, chars);\r\n    };\r\n\r\n    /**\r\n     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBinary = function(str, littleEndian) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"str\");\r\n        var i = 0,\r\n            k = str.length,\r\n            charCode,\r\n            bb = new ByteBuffer(k, littleEndian);\r\n        while (i<k) {\r\n            charCode = str.charCodeAt(i);\r\n            if (charCode > 0xff)\r\n                throw RangeError(\"illegal char code: \"+charCode);\r\n            bb.view[i++] = charCode;\r\n        }\r\n        bb.limit = k;\r\n        return bb;\r\n    };\r\n\r\n    // encodings/debug\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:\r\n     * * `<` : offset,\r\n     * * `'` : markedOffset,\r\n     * * `>` : limit,\r\n     * * `|` : offset and limit,\r\n     * * `[` : offset and markedOffset,\r\n     * * `]` : markedOffset and limit,\r\n     * * `!` : offset, markedOffset and limit\r\n     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`\r\n     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`\r\n     * @expose\r\n     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`\r\n     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`\r\n     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`\r\n     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`\r\n     */\r\n    ByteBufferPrototype.toDebug = function(columns) {\r\n        var i = -1,\r\n            k = this.buffer.byteLength,\r\n            b,\r\n            hex = \"\",\r\n            asc = \"\",\r\n            out = \"\";\r\n        while (i<k) {\r\n            if (i !== -1) {\r\n                b = this.view[i];\r\n                if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();\r\n                else hex += b.toString(16).toUpperCase();\r\n                if (columns)\r\n                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';\r\n            }\r\n            ++i;\r\n            if (columns) {\r\n                if (i > 0 && i % 16 === 0 && i !== k) {\r\n                    while (hex.length < 3*16+3) hex += \" \";\r\n                    out += hex+asc+\"\\n\";\r\n                    hex = asc = \"\";\r\n                }\r\n            }\r\n            if (i === this.offset && i === this.limit)\r\n                hex += i === this.markedOffset ? \"!\" : \"|\";\r\n            else if (i === this.offset)\r\n                hex += i === this.markedOffset ? \"[\" : \"<\";\r\n            else if (i === this.limit)\r\n                hex += i === this.markedOffset ? \"]\" : \">\";\r\n            else\r\n                hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");\r\n        }\r\n        if (columns && hex !== \" \") {\r\n            while (hex.length < 3*16+3)\r\n                hex += \" \";\r\n            out += hex + asc + \"\\n\";\r\n        }\r\n        return columns ? out : hex;\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string with marked offsets to a ByteBuffer.\r\n     * @param {string} str Debug string to decode (not be generated with `columns = true`)\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     * @see ByteBuffer#toDebug\r\n     */\r\n    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {\r\n        var k = str.length,\r\n            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);\r\n        var i = 0, j = 0, ch, b,\r\n            rs = false, // Require symbol next\r\n            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?\r\n            fail = false;\r\n        while (i<k) {\r\n            switch (ch = str.charAt(i++)) {\r\n                case '!':\r\n                    if (!noAssert) {\r\n                        if (ho || hm || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = hl = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '|':\r\n                    if (!noAssert) {\r\n                        if (ho || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hl = true;\r\n                    }\r\n                    bb.offset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '[':\r\n                    if (!noAssert) {\r\n                        if (ho || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '<':\r\n                    if (!noAssert) {\r\n                        if (ho) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = true;\r\n                    }\r\n                    bb.offset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ']':\r\n                    if (!noAssert) {\r\n                        if (hl || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = hm = true;\r\n                    }\r\n                    bb.limit = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '>':\r\n                    if (!noAssert) {\r\n                        if (hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = true;\r\n                    }\r\n                    bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case \"'\":\r\n                    if (!noAssert) {\r\n                        if (hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hm = true;\r\n                    }\r\n                    bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ' ':\r\n                    rs = false;\r\n                    break;\r\n                default:\r\n                    if (!noAssert) {\r\n                        if (rs) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    b = parseInt(ch+str.charAt(i++), 16);\r\n                    if (!noAssert) {\r\n                        if (isNaN(b) || b < 0 || b > 255)\r\n                            throw TypeError(\"Illegal str: Not a debug encoded string\");\r\n                    }\r\n                    bb.view[j++] = b;\r\n                    rs = true;\r\n            }\r\n            if (fail)\r\n                throw TypeError(\"Illegal str: Invalid symbol at \"+i);\r\n        }\r\n        if (!noAssert) {\r\n            if (!ho || !hl)\r\n                throw TypeError(\"Illegal str: Missing offset or limit\");\r\n            if (j<bb.buffer.byteLength)\r\n                throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    // encodings/hex\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a hex encoded string.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Hex encoded string\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toHex = function(begin, end) {\r\n        begin = typeof begin === 'undefined' ? this.offset : begin;\r\n        end = typeof end === 'undefined' ? this.limit : end;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var out = new Array(end - begin),\r\n            b;\r\n        while (begin < end) {\r\n            b = this.view[begin++];\r\n            if (b < 0x10)\r\n                out.push(\"0\", b.toString(16));\r\n            else out.push(b.toString(16));\r\n        }\r\n        return out.join('');\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {\r\n        if (!noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (str.length % 2 !== 0)\r\n                throw TypeError(\"Illegal str: Length not a multiple of 2\");\r\n        }\r\n        var k = str.length,\r\n            bb = new ByteBuffer((k / 2) | 0, littleEndian),\r\n            b;\r\n        for (var i=0, j=0; i<k; i+=2) {\r\n            b = parseInt(str.substring(i, i+2), 16);\r\n            if (!noAssert)\r\n                if (!isFinite(b) || b < 0 || b > 255)\r\n                    throw TypeError(\"Illegal str: Contains non-hex characters\");\r\n            bb.view[j++] = b;\r\n        }\r\n        bb.limit = j;\r\n        return bb;\r\n    };\r\n\r\n    // utfx-embeddable\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    // encodings/utf8\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded\r\n     *  string.\r\n     * @returns {string} Hex encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toUTF8 = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.byteLength)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);\n        }\r\n        var sd; try {\r\n            utfx.decodeUTF8toUTF16(function() {\r\n                return begin < end ? this.view[begin++] : null;\r\n            }.bind(this), sd = stringDestination());\r\n        } catch (e) {\r\n            if (begin !== end)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+begin+\" != \"+end);\r\n        }\r\n        return sd();\r\n    };\r\n\r\n    /**\r\n     * Decodes an UTF8 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {\r\n        if (!noAssert)\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n        var bb = new ByteBuffer(utfx.calculateUTF16asUTF8(stringSource(str), true)[1], littleEndian, noAssert),\r\n            i = 0;\r\n        utfx.encodeUTF16toUTF8(stringSource(str), function(b) {\r\n            bb.view[i++] = b;\r\n        });\r\n        bb.limit = i;\r\n        return bb;\r\n    };\r\n\r\n    return ByteBuffer;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bytebuffer/dist/bytebuffer.js\n// module id = 12\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './ApplicationActivityDetector'\n], function (ApplicationActivityDetector) {\n    'use strict';\n\n    return new ApplicationActivityDetector();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-application-activity-detector/src/index.js\n// module id = 13\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function () {\n    'use strict';\n\n    var logging = {\n        level: {\n            TRACE: 0,\n            DEBUG: 1,\n            INFO: 2,\n            WARN: 3,\n            ERROR: 4,\n            FATAL: 5\n        }\n    };\n\n    return logging;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-logging/src/logging.json.js\n// module id = 14\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './MQWebSocket',\n    './BatchHttpProto',\n    './MQService'\n], function (MQWebSocket, BatchHttpProto, MQService) {\n    return {\n        MQWebSocket: MQWebSocket,\n        BatchHttpProto: BatchHttpProto,\n        MQService: MQService\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-proto/src/index.js\n// module id = 15\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-http',\n    'phenix-web-disposable',\n    'phenix-web-closest-endpoint-resolver'\n], function(_, http, disposable, ClosestEndPointResolver) {\n    'use strict';\n\n    var maxAttempts = 4;\n\n    function PCastEndPoint(version, baseUri, logger, sessionTelemetry) {\n        if (typeof version !== 'string') {\n            throw new Error('Must pass a valid \"version\"');\n        }\n\n        if (typeof baseUri !== 'string') {\n            throw new Error('Must pass a valid \"baseUri\"');\n        }\n\n        if (typeof logger !== 'object') {\n            throw new Error('Must pass a valid \"logger\"');\n        }\n\n        this._version = version;\n        this._baseUri = baseUri;\n        this._logger = logger;\n        this._disposables = new disposable.DisposableList();\n        this._sessionTelemetry = sessionTelemetry;\n    }\n\n    PCastEndPoint.DefaultPCastUri = 'https://pcast.phenixp2p.com';\n\n    PCastEndPoint.prototype.getBaseUri = function() {\n        return this._baseUri;\n    };\n\n    PCastEndPoint.prototype.resolveUri = function(callback /* (error, {uri, roundTripTime}) */) {\n        return resolveUri.call(this, this._baseUri, callback);\n    };\n\n    PCastEndPoint.prototype.dispose = function() {\n        this._disposables.dispose();\n    };\n\n    PCastEndPoint.prototype.toString = function() {\n        return 'PCastEndPoint[' + this._baseUri + ']';\n    };\n\n    function resolveUri(baseUri, callback /* (error, {uri, roundTripTime}) */) {\n        if (baseUri.lastIndexOf('wss:', 0) === 0) {\n            // WSS - Specific web socket end point\n            callback(undefined, {\n                uri: baseUri + '/ws',\n                roundTripTime: 0\n            });\n        } else if (baseUri.lastIndexOf('https:', 0) === 0) {\n            // HTTP - Resolve closest end point\n            var that = this;\n\n            getEndpoints.call(that, baseUri, function(err, endPoints) {\n                if (err) {\n                    return callback(err);\n                }\n\n                var closestEndPointResolver = new ClosestEndPointResolver(that._logger, that._version, callback, function(err, response){\n                    if(err){\n                        that._logger.warn('An error occured in resolving an endpoint', err);\n\n                        return;\n                    }\n\n                    that._sessionTelemetry.recordMetric('RoundTripTime', {uint64: response.time}, null, {\n                        resource: response.endPoint,\n                        kind: 'https'\n                    });\n                });\n\n                closestEndPointResolver.resolveAll(endPoints);\n\n                that._disposables.add(closestEndPointResolver);\n            });\n        } else {\n            // Not supported\n            callback(new Error('Uri not supported'));\n        }\n    }\n\n    function getEndpoints(baseUri, callback) {\n        var requestDisposable = http.getWithRetry(baseUri + '/pcast/endPoints', {\n            timeout: 15000,\n            queryParameters: {\n                version: '2018-04-11T21:42:19Z',\n                _: _.now()\n            },\n            retryOptions: {maxAttempts: maxAttempts}\n        }, function(err, response) {\n            if (err) {\n                return callback(new Error('Failed to resolve an end point', err));\n            }\n\n            var endPoints = response.data.split(',');\n\n            if (endPoints.length < 1) {\n                callback(new Error('Failed to discover end points'));\n            }\n\n            callback(undefined, endPoints);\n        });\n\n        this._disposables.add(requestDisposable);\n    }\n\n    return PCastEndPoint;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/PCastEndPoint.js\n// module id = 16\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-logging',\n    './telemetryAppenderFactory'\n], function(_, assert, logging, telemetryAppenderFactory) {\n    'use strict';\n\n    function PCastLoggerFactory() {\n\n    }\n\n    PCastLoggerFactory.prototype.createPCastLogger = function createPCastLogger(baseUri, disableConsole) {\n        if (baseUri) {\n            assert.isStringNotEmpty(baseUri, 'baseUri');\n        }\n\n        var logger = new logging.Logger();\n        var telemetryAppender = telemetryAppenderFactory.getAppender(baseUri);\n\n        telemetryAppender.setThreshold(logging.level.INFO);\n\n        if (!disableConsole) {\n            logger.addAppender(new logging.ConsoleAppender());\n        }\n\n        logger.addAppender(telemetryAppender);\n\n        logger.isPCastLogger = true;\n\n        return logger;\n    };\n\n    return new PCastLoggerFactory();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/logging/pcastLoggerFactory.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    './stream.json',\n    './track.json'\n], function(_, assert, observable, stream, track) {\n    'use strict';\n\n    var streamTypes = stream.types;\n    var trackStates = track.states;\n    var oldPcastStreamPrefix = 'pcast://phenixp2p.com/';\n    var pcastStreamPrefix = 'pcast://phenixrts.com/';\n\n    function Stream(uri, type, audioState, videoState) {\n        this.init(uri, type, audioState, videoState);\n    }\n\n    Stream.prototype.init = function(uri, type, audioState, videoState) {\n        assert.isString(uri, 'uri');\n\n        this._uri = new observable.Observable(uri);\n        this._type = new observable.Observable(type, assertIsValidStreamType);\n        this._audioState = new observable.Observable(audioState || trackStates.trackEnabled.name, assertIsValidTrackState);\n        this._videoState = new observable.Observable(videoState || trackStates.trackEnabled.name, assertIsValidTrackState);\n        this._streamId = Stream.parsePCastStreamIdFromStreamUri(uri);\n    };\n\n    Stream.prototype.getUri = function getUri() {\n        return this._uri.getValue();\n    };\n\n    Stream.prototype.getType = function getType() {\n        return this._type.getValue();\n    };\n\n    Stream.prototype.getObservableAudioState = function getObservableAudioState() {\n        return this._audioState;\n    };\n\n    Stream.prototype.getObservableVideoState = function getObservableVideoState() {\n        return this._videoState;\n    };\n\n    Stream.prototype.toJson = function toJson() {\n        return {\n            uri: this._uri.getValue(),\n            type: this._type.getValue(),\n            audioState: this._audioState.getValue(),\n            videoState: this._videoState.getValue()\n        };\n    };\n\n    Stream.prototype._update = function update(stream) {\n        if (!_.isObject(stream)) {\n            return;\n        }\n\n        if (stream.hasOwnProperty('uri')) {\n            if (stream.uri !== this._uri.getValue() && matchPCastStreams(stream.uri, this._uri.getValue())) {\n                this._uri.setValue(stream.uri);\n\n                this._streamId = Stream.parsePCastStreamIdFromStreamUri(stream.uri);\n            }\n        }\n\n        if (stream.hasOwnProperty('audioState')) {\n            this._audioState.setValue(stream.audioState);\n        }\n\n        if (stream.hasOwnProperty('videoState')) {\n            this._videoState.setValue(stream.videoState);\n        }\n    };\n\n    Stream.prototype.isPCastStream = function() {\n        return !!this._streamId;\n    };\n\n    Stream.prototype.getPCastStreamId = function() {\n        return this._streamId;\n    };\n\n    Stream.prototype.getInfo = function() {\n        return parseStreamInfoFromStreamUri(this._uri.getValue());\n    };\n\n    Stream.getPCastPrefix = function() {\n        return oldPcastStreamPrefix;\n    };\n\n    Stream.parsePCastStreamIdFromStreamUri = function(uri) {\n        var hasPrefix = _.includes(uri, getPrefixToUse(uri));\n\n        if (!hasPrefix) {\n            return null;\n        }\n\n        return uri.replace(getPrefixToUse(uri), '').split('?')[0];\n    };\n\n    Stream.getInfoFromStreamUri = function(uri) {\n        return parseStreamInfoFromStreamUri(uri);\n    };\n\n    function getPrefixToUse(uri) {\n        if (_.includes(uri, oldPcastStreamPrefix)) {\n            return oldPcastStreamPrefix;\n        }\n\n        return pcastStreamPrefix;\n    }\n\n    function matchPCastStreams(uriA, uriB) {\n        return Stream.parsePCastStreamIdFromStreamUri(uriA) === Stream.parsePCastStreamIdFromStreamUri(uriB);\n    }\n\n    function parseStreamInfoFromStreamUri(uri) {\n        var parsedUriInfo = {};\n        var queryParamString = uri.split('?');\n\n        if (queryParamString.length !== 2) {\n            return parsedUriInfo;\n        }\n\n        var queryParamsString = queryParamString[1];\n        var queryParams = queryParamsString.split('&');\n\n        _.forEach(queryParams, function(param) {\n            var parsedParams = param.split('=');\n            var key = parsedParams[0];\n\n            parsedUriInfo[key] = parsedParams[1];\n        });\n\n        return parsedUriInfo;\n    }\n\n    function assertIsValidStreamType(type) {\n        type = _.getEnumName(streamTypes, type);\n\n        if (!type) {\n            throw new Error('\"type\" must be a valid stream type');\n        }\n\n        return type;\n    }\n\n    function assertIsValidTrackState(state) {\n        state = _.getEnumName(trackStates, state);\n\n        if (!state) {\n            throw new Error('\"state\" must be a valid track state');\n        }\n\n        return state;\n    }\n\n    return Stream;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/Stream.js\n// module id = 18\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var streamEnums = {\n        types: {\n            user: {\n                id: 0,\n                name: 'User'\n            },\n            presentation: {\n                id: 1,\n                name: 'Presentation'\n            },\n            audio: {\n                id: 2,\n                name: 'Audio'\n            }\n        }\n    };\n\n    return streamEnums;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/stream.json.js\n// module id = 19\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    './logging/pcastLoggerFactory',\n    'phenix-web-http',\n    './audio/AudioContext',\n    './PCastProtocol',\n    './PCastEndPoint',\n    './userMedia/ScreenShareExtensionManager',\n    './userMedia/UserMediaProvider',\n    './streaming/PeerConnectionMonitor',\n    './DimensionsChangedMonitor',\n    './telemetry/metricsTransmitterFactory',\n    './telemetry/StreamTelemetry',\n    './telemetry/SessionTelemetry',\n    './streaming/PeerConnection',\n    './streaming/StreamWrapper',\n    './streaming/PhenixLiveStream',\n    './streaming/PhenixRealTimeStream',\n    './streaming/stream.json',\n    'phenix-rtc',\n    './sdpUtil'\n], function(_, assert, observable, disposable, pcastLoggerFactory, http, AudioContext, PCastProtocol, PCastEndPoint, ScreenShareExtensionManager, UserMediaProvider, PeerConnectionMonitor, DimensionsChangedMonitor, metricsTransmitterFactory, StreamTelemetry, SessionTelemetry, PeerConnection, StreamWrapper, PhenixLiveStream, PhenixRealTimeStream, streamEnums, phenixRTC, sdpUtil) {\n    'use strict';\n\n    var sdkVersion = '2018-04-11T21:42:19Z';\n    var defaultToHlsNative = true;\n\n    function PCast(options) {\n        options = options || {};\n\n        assert.isObject(options, 'options');\n\n        if (options.streamingSourceMapping) {\n            assert.isObject(options.streamingSourceMapping, 'options.streamingSourceMapping');\n            assert.isStringNotEmpty(options.streamingSourceMapping.replacement, 'options.streamingSourceMapping.replacement');\n\n            if (!(options.streamingSourceMapping.patternToReplace instanceof RegExp)) {\n                assert.isStringNotEmpty(options.streamingSourceMapping.patternToReplace, 'options.streamingSourceMapping.patternToReplace');\n            }\n        }\n\n        if (!_.isNullOrUndefined(options.disableMultiplePCastInstanceWarning)) {\n            assert.isBoolean(options.disableMultiplePCastInstanceWarning, 'options.disableMultiplePCastInstanceWarning');\n        }\n\n        this._observableStatus = new observable.Observable('offline');\n        this._baseUri = options.uri || PCastEndPoint.DefaultPCastUri;\n        this._deviceId = options.deviceId || '';\n        this._version = sdkVersion;\n        this._logger = options.logger || pcastLoggerFactory.createPCastLogger(this._baseUri, options.disableConsoleLogging);\n        this._metricsTransmitter = options.metricsTransmitter || metricsTransmitterFactory.createMetricsTransmitter(this._baseUri);\n        this._screenShareExtensionManager = new ScreenShareExtensionManager(options, this._logger);\n        this._shaka = options.shaka;\n        this._videojs = options.videojs || phenixRTC.global.videojs;\n        this._status = 'offline';\n        this._streamingSourceMapping = options.streamingSourceMapping;\n        this._disposables = new disposable.DisposableList();\n        this._disableMultiplePCastInstanceWarning = options.disableMultiplePCastInstanceWarning;\n        this._canPlaybackAudio = true;\n\n        var that = this;\n\n        _.addEventListener(phenixRTC.global, 'unload', function() {\n            that._logger.info('Window Unload Event Triggered');\n\n            return that.stop();\n        });\n\n        if (!options.disableBeforeUnload) {\n            _.addEventListener(phenixRTC.global, 'beforeunload', function() {\n                that._logger.info('Window Before Unload Event Triggered');\n\n                return that.stop();\n            });\n        }\n\n        if (!phenixRTC.webrtcSupported && phenixRTC.browser === 'ReactNative') {\n            phenixRTC.shim();\n        }\n\n        if (phenixRTC.webrtcSupported) {\n            setLocalH264Profile.call(this);\n            setAudioState.call(this);\n        }\n    }\n\n    PCast.prototype.getBaseUri = function() {\n        return this._baseUri;\n    };\n\n    PCast.prototype.getStatus = function() {\n        return this._observableStatus.getValue();\n    };\n\n    PCast.prototype.getObservableStatus = function() {\n        return this._observableStatus;\n    };\n\n    PCast.prototype.isStarted = function() {\n        return this._started;\n    };\n\n    PCast.prototype.reAuthenticate = function(authToken) {\n        assert.isStringNotEmpty(authToken, 'authToken');\n\n        if (this._observableStatus.getValue() === 'online') {\n            return this._logger.warn('Already authenticated. Denying request to re-authenticate');\n        }\n\n        this._logger.info('Attempting to re-authenticate with new auth token [%s]', authToken);\n\n        this._authToken = authToken;\n\n        reconnected.call(this);\n    };\n\n    PCast.prototype.start = function(authToken, authenticationCallback, onlineCallback, offlineCallback) {\n        if (typeof authToken !== 'string') {\n            throw new Error('\"authToken\" must be a string');\n        }\n\n        if (typeof authenticationCallback !== 'function') {\n            throw new Error('\"authenticationCallback\" must be a function');\n        }\n\n        if (typeof onlineCallback !== 'function') {\n            throw new Error('\"onlineCallback\" must be a function');\n        }\n\n        if (typeof offlineCallback !== 'function') {\n            throw new Error('\"offlineCallback\" must be a function');\n        }\n\n        if (this._started) {\n            throw new Error('\"Already started\"');\n        }\n\n        if (!_.isNumber(phenixRTC.global.__phenixInstantiatedPCastCount)) {\n            phenixRTC.global.__phenixInstantiatedPCastCount = 1;\n        } else {\n            phenixRTC.global.__phenixInstantiatedPCastCount++;\n        }\n\n        if (phenixRTC.global.__phenixInstantiatedPCastCount > 1 && !this._disableMultiplePCastInstanceWarning) {\n            this._logger.warn('Avoid using multiple instances of PCast as this uses unnecessary resources and will reduce performance. This is your [%s] simultaneous instance. Remember to dispose all resources when done with them by calling .stop() or .dispose()',\n                phenixRTC.global.__phenixInstantiatedPCastCount);\n        }\n\n        this._stopped = false;\n        this._started = true;\n        this._authToken = authToken;\n        this._authenticationCallback = authenticationCallback;\n        this._onlineCallback = onlineCallback;\n        this._offlineCallback = offlineCallback;\n        this._sessionTelemetry = new SessionTelemetry(this._logger, this._metricsTransmitter);\n        this._endPoint = new PCastEndPoint(this._version, this._baseUri, this._logger, this._sessionTelemetry);\n\n        transitionToStatus.call(this, 'connecting');\n\n        this._peerConnections = {};\n        this._mediaStreams = {};\n        this._publishers = {};\n        this._gumStreams = [];\n\n        this._disposables.add(this._endPoint);\n        this._disposables.add(this._sessionTelemetry);\n\n        var that = this;\n\n        that._endPoint.resolveUri(function(err, endPoint) {\n            if (err) {\n                that._logger.error('Failed to connect to [%s]', that._baseUri, err);\n\n                transitionToStatus.call(that, 'offline');\n\n                switch (err.code) {\n                case 0:\n                    that._authenticationCallback.call(that, that, 'network-unavailable', '');\n\n                    break;\n                case 503:\n                    that._authenticationCallback.call(that, that, 'capacity', '');\n\n                    break;\n                default:\n                    that._authenticationCallback.call(that, that, 'failed', '');\n\n                    break;\n                }\n\n                that._stopped = true;\n                that._started = false;\n\n                return;\n            }\n\n            that._logger.info('Discovered end point [%s] with RTT [%s]', endPoint.uri, endPoint.roundTripTime);\n\n            that._networkOneWayLatency = endPoint.roundTripTime / 2;\n            that._resolvedEndPoint = endPoint.uri;\n\n            instantiateProtocol.call(that, endPoint.uri);\n        });\n    };\n\n    PCast.prototype.stop = function() {\n        if (!this._started) {\n            return;\n        }\n\n        this._stopped = true;\n        this._started = false;\n\n        delete this._authenticationCallback;\n\n        try {\n            var reason = '';\n            var that = this;\n\n            _.forOwn(this._mediaStreams, function(mediaStream, streamId) {\n                endStream.call(that, streamId, reason);\n            });\n            _.forOwn(this._publishers, function(publisher, publisherStreamId) {\n                endStream.call(that, publisherStreamId, reason);\n\n                if (!_.includes(publisher.getOptions(), 'detached')) {\n                    publisher.stop(reason, true);\n                }\n            });\n            _.forOwn(this._peerConnections, function(mediaStream, peerConnectionStreamId) {\n                endStream.call(that, peerConnectionStreamId, reason);\n            });\n            _.forEach(this._gumStreams, function(gumStream) {\n                var tracks = gumStream.getTracks();\n\n                _.forEach(tracks, function(track) {\n                    track.stop();\n                });\n            });\n        } finally {\n            if (this._protocol) {\n                this._protocol.disconnect();\n\n                this._protocol = null;\n            }\n\n            if (this._logger.setObservableSessionId) {\n                this._logger.setObservableSessionId(null);\n            }\n\n            if (this._sessionTelemetrySubscription) {\n                this._sessionTelemetrySubscription.dispose();\n                this._sessionTelemetry.setSessionId(null);\n            }\n\n            phenixRTC.global.__phenixInstantiatedPCastCount--;\n\n            this._disposables.dispose();\n        }\n    };\n\n    PCast.prototype.getUserMedia = function(options, callback, onScreenShare) {\n        if (phenixRTC.browser === 'IE') {\n            throw new Error('Publishing not supported on IE');\n        }\n\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        if (onScreenShare) {\n            assert.isFunction(onScreenShare, 'onScreenShare');\n        }\n\n        var userMediaProvider = new UserMediaProvider(this._logger, this._screenShareExtensionManager, onScreenShare);\n\n        return userMediaProvider.getUserMedia(options, callback);\n    };\n\n    PCast.prototype.publish = function(streamToken, streamToPublish, callback, tags, options) {\n        if (phenixRTC.browser === 'IE') {\n            throw new Error('Publishing not supported on IE');\n        }\n\n        if (!this._started) {\n            throw new Error('PCast not started. Unable to publish. Please start pcast first.');\n        }\n\n        if (typeof streamToken !== 'string') {\n            throw new Error('\"streamToken\" must be a string');\n        }\n\n        if (typeof streamToPublish !== 'object' && typeof streamToPublish !== 'string') {\n            throw new Error('\"streamToPublish\" must be an object or URI');\n        }\n\n        if (typeof callback !== 'function') {\n            throw new Error('\"callback\" must be a function');\n        }\n\n        tags = tags || [];\n\n        if (!Array.isArray(tags)) {\n            throw new Error('\"tags\" must be an array');\n        }\n\n        options = options || {};\n\n        if (typeof options !== 'object') {\n            throw new Error('\"options\" must be an object');\n        }\n\n        var that = this;\n        var streamType = 'upload';\n        var setupStreamOptions = _.assign({}, options, {negotiate: true});\n\n        if (typeof streamToPublish === 'string') {\n            setupStreamOptions.negotiate = false;\n            setupStreamOptions.connectUri = streamToPublish;\n        } else {\n            setupStreamOptions.connectUri = options.connectUri;\n        }\n\n        if (tags.length > 0) {\n            setupStreamOptions.tags = tags;\n        }\n\n        var streamTelemetry = new StreamTelemetry(this.getProtocol().getSessionId(), this._logger, this._metricsTransmitter);\n\n        streamTelemetry.setProperty('resource', streamType);\n\n        this._protocol.setupStream(streamType, streamToken, setupStreamOptions, that._networkOneWayLatency * 2, function(error, response) {\n            if (error) {\n                that._logger.error('Failed to create uploader [%s]', error);\n\n                return callback.call(that, that, 'failed');\n            } else if (response.status !== 'ok') {\n                that._logger.warn('Failed to create uploader, status [%s]', response.status);\n\n                switch (response.status) {\n                case 'timeout':\n                case 'capacity':\n                case 'unauthorized':\n                    return callback.call(that, that, response.status);\n                default:\n                    return callback.call(that, that, 'failed');\n                }\n            } else {\n                var streamId = response.createStreamResponse.streamId;\n\n                streamTelemetry.setStreamId(streamId);\n                streamTelemetry.setStartOffset(response.createStreamResponse.offset);\n                streamTelemetry.recordMetric('Provisioned');\n                streamTelemetry.recordMetric('RoundTripTime', {uint64: that._networkOneWayLatency * 2}, null, {\n                    resource: that._resolvedEndPoint,\n                    kind: 'https'\n                });\n\n                if (setupStreamOptions.negotiate === true) {\n                    var offerSdp = response.createStreamResponse.createOfferDescriptionResponse.sessionDescription.sdp;\n                    var peerConnectionConfig = applyVendorSpecificLogic(parseProtobufMessage(response.createStreamResponse.rtcConfiguration));\n\n                    return createPublisherPeerConnection.call(that, peerConnectionConfig, streamToPublish, streamId, offerSdp, streamTelemetry, function(phenixPublisher, error) {\n                        streamTelemetry.recordMetric('SetupCompleted', {string: error ? 'failed' : 'ok'});\n\n                        if (error) {\n                            callback.call(that, that, 'failed', null);\n                        } else {\n                            callback.call(that, that, 'ok', phenixPublisher);\n                        }\n                    }, options, response.createStreamResponse.options);\n                }\n\n                return createPublisher.call(that, streamId, function(phenixPublisher, error) {\n                    streamTelemetry.recordMetric('SetupCompleted', {string: error ? 'failed' : 'ok'});\n\n                    if (error) {\n                        callback.call(that, that, 'failed', null);\n                    } else {\n                        callback.call(that, that, 'ok', phenixPublisher);\n                    }\n                }, response.createStreamResponse.options);\n            }\n        });\n    };\n\n    PCast.prototype.subscribe = function(streamToken, callback, options) {\n        if (!this._started) {\n            throw new Error('PCast not started. Unable to subscribe. Please start pcast first.');\n        }\n\n        if (typeof streamToken !== 'string') {\n            throw new Error('\"streamToken\" must be a string');\n        }\n\n        if (typeof callback !== 'function') {\n            throw new Error('\"callback\" must be a function');\n        }\n\n        options = options || {};\n\n        if (typeof options !== 'object') {\n            throw new Error('\"options\" must be an object');\n        }\n\n        var that = this;\n\n        setAudioState.call(that, function() {\n            var streamType = 'download';\n            var setupStreamOptions = _.assign({}, options, {negotiate: options.negotiate !== false});\n            var streamTelemetry = new StreamTelemetry(that.getProtocol().getSessionId(), that._logger, that._metricsTransmitter);\n            var createStreamOptions = _.assign({}, {useNativeHlsPlayer: defaultToHlsNative}, options);\n\n            createStreamOptions.canPlaybackAudio = that._canPlaybackAudio;\n\n            if (!that._canPlaybackAudio && options.disableAudioIfNoOutputFound && options.receiveAudio !== false) {\n                setupStreamOptions.receiveAudio = false;\n                createStreamOptions.receiveAudio = false;\n                createStreamOptions.forcedAudioDisabled = true;\n            }\n\n            streamTelemetry.setProperty('resource', streamType);\n\n            that._protocol.setupStream(streamType, streamToken, setupStreamOptions, that._networkOneWayLatency * 2, function(error, response) {\n                if (error) {\n                    that._logger.error('Failed to create downloader [%s]', error);\n\n                    return callback.call(that, that, 'failed');\n                } else if (response.status !== 'ok') {\n                    that._logger.warn('Failed to create downloader, status [%s]', response.status);\n\n                    switch (response.status) {\n                    case 'capacity':\n                    case 'stream-ended':\n                    case 'origin-stream-ended':\n                    case 'streaming-not-available':\n                    case 'unauthorized':\n                    case 'timeout':\n                        return callback.call(that, that, response.status);\n                    default:\n                        return callback.call(that, that, 'failed');\n                    }\n                } else {\n                    var streamId = response.createStreamResponse.streamId;\n                    var offerSdp = response.createStreamResponse.createOfferDescriptionResponse.sessionDescription.sdp;\n                    var peerConnectionConfig = applyVendorSpecificLogic(parseProtobufMessage(response.createStreamResponse.rtcConfiguration));\n                    var create = _.bind(createViewerPeerConnection, that, peerConnectionConfig);\n\n                    if (offerSdp.match(/a=x-playlist:/)) {\n                        create = createLiveViewer;\n                    }\n\n                    streamTelemetry.setStreamId(streamId);\n                    streamTelemetry.setStartOffset(response.createStreamResponse.offset);\n                    streamTelemetry.recordMetric('Provisioned');\n                    streamTelemetry.recordMetric('RoundTripTime', {uint64: that._networkOneWayLatency * 2}, null, {\n                        resource: that.getBaseUri(),\n                        kind: 'https'\n                    });\n\n                    createStreamOptions.originStartTime = _.now() - response.createStreamResponse.offset + that._networkOneWayLatency;\n\n                    if (phenixRTC.browser === 'Chrome' && phenixRTC.browserVersion >= 62 && that._h264ProfileId && isMobile()) {\n                        var profileLevelIdToReplace = sdpUtil.getH264ProfileId(offerSdp);\n\n                        if (profileLevelIdToReplace !== that._h264ProfileId) {\n                            that._logger.info('[%s] Replacing h264 profile level id [%s] with new value [%s] in offer sdp',\n                                streamId, profileLevelIdToReplace, that._h264ProfileId);\n\n                            offerSdp = sdpUtil.replaceH264ProfileId(offerSdp, that._h264ProfileId);\n                        }\n                    }\n\n                    return create.call(that, streamId, offerSdp, streamTelemetry, function(phenixMediaStream, error) {\n                        streamTelemetry.recordMetric('SetupCompleted', {string: error ? 'failed' : 'ok'});\n\n                        if (error) {\n                            callback.call(that, that, 'failed', null);\n                        } else {\n                            callback.call(that, that, 'ok', phenixMediaStream);\n                        }\n                    }, createStreamOptions);\n                }\n            });\n        });\n    };\n\n    PCast.prototype.getProtocol = function() {\n        return this._protocol;\n    };\n\n    PCast.prototype.getLogger = function() {\n        return this._logger;\n    };\n\n    PCast.prototype.toString = function() {\n        var protocol = this.getProtocol();\n        var sessionId = protocol ? protocol.getSessionId() : '';\n\n        return 'PCast[' + sessionId || 'unauthenticated' + ',' + (protocol ? protocol.toString() : 'uninitialized') + ']';\n    };\n\n    function instantiateProtocol(uri) {\n        this._protocol = new PCastProtocol(uri, this._deviceId, this._version, this._logger);\n\n        this._protocol.onEvent('connected', _.bind(connected, this));\n        this._protocol.onEvent('reconnecting', _.bind(reconnecting, this));\n        this._protocol.onEvent('reconnected', _.bind(reconnected, this));\n        this._protocol.onEvent('disconnected', _.bind(disconnected, this));\n        this._protocol.onEvent('pcast.StreamEnded', _.bind(streamEnded, this));\n        this._protocol.onEvent('pcast.StreamDataQuality', _.bind(dataQuality, this));\n\n        if (this._logger.setObservableSessionId) {\n            this._logger.setObservableSessionId(this._protocol.getObservableSessionId());\n        }\n\n        if (this._sessionTelemetrySubscription) {\n            this._sessionTelemetrySubscription.dispose();\n            this._sessionTelemetry.setSessionId(null);\n        }\n\n        this._sessionTelemetrySubscription = this._protocol.getObservableSessionId().subscribe(_.bind(this._sessionTelemetry.setSessionId, this._sessionTelemetry));\n    }\n\n    function connected() {\n        if (areAllPeerConnectionsOffline.call(this) && this._observableStatus.getValue() === 'offline') {\n            this._logger.warn('[PCast] connected after being offline. Going offline.');\n\n            transitionToStatus.call(this, 'critical-network-issue');\n\n            return this.stop();\n        }\n\n        var that = this;\n\n        this._connected = true;\n\n        if (!that._stopped) {\n            that._protocol.authenticate(that._authToken, function(error, response) {\n                if (that._authenticationCallback) {\n                    if (error) {\n                        that._logger.error('Failed to authenticate [%s]', error);\n                        transitionToStatus.call(that, 'unauthorized');\n                        that._authenticationCallback.call(that, that, 'unauthorized', '');\n                    } else if (response.status !== 'ok') {\n                        that._logger.warn('Failed to authenticate, status [%s]', response.status);\n                        transitionToStatus.call(that, 'unauthorized');\n                        that._authenticationCallback.call(that, that, 'unauthorized', '');\n                    } else {\n                        transitionToStatus.call(that, 'online');\n\n                        that._authenticationCallback.call(that, that, response.status, response.sessionId);\n                    }\n                }\n            });\n        }\n    }\n\n    function reconnecting() {\n        transitionToStatus.call(this, 'reconnecting');\n    }\n\n    function reconnected() {\n        transitionToStatus.call(this, 'reconnected');\n\n        this._logger.info('Attempting to re-authenticate after reconnect event');\n\n        reAuthenticate.call(this);\n    }\n\n    function reAuthenticate() {\n        var that = this;\n\n        if (!that._stopped) {\n            that._protocol.authenticate(that._authToken, function(error, response) {\n                var suppressCallbackIfNeverDisconnected = that._connected === true;\n\n                if (error) {\n                    that._logger.error('Unable to authenticate after reconnect to WebSocket [%s]', error);\n\n                    return transitionToStatus.call(that, 'reconnect-failed');\n                }\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Unable to authenticate after reconnect to WebSocket, status [%s]', response.status);\n\n                    var reason = response.status === 'capacity' ? response.status : 'reconnect-failed';\n\n                    return transitionToStatus.call(that, reason);\n                }\n\n                that._connected = true;\n\n                that._logger.info('Successfully authenticated after reconnect to WebSocket');\n\n                return transitionToStatus.call(that, 'online', null, suppressCallbackIfNeverDisconnected);\n            });\n        }\n    }\n\n    function disconnected() {\n        if (areAllPeerConnectionsOffline.call(this) && this._observableStatus.getValue() === 'reconnecting') {\n            this._logger.warn('[PCast] disconnected after attempting to reconnect. Going offline.');\n\n            transitionToStatus.call(this, 'critical-network-issue');\n\n            return this.stop();\n        }\n\n        this._connected = false;\n        transitionToStatus.call(this, 'offline');\n    }\n\n    function areAllPeerConnectionsOffline() {\n        return _.reduce(this._peerConnections, function(isOffline, peerConnection) {\n            if (!isOffline) {\n                return isOffline;\n            }\n\n            return peerConnection.iceConnectionState === 'closed';\n        }, true);\n    }\n\n    function getStreamEndedReason(value) {\n        switch (value) {\n        case '':\n        case 'none':\n        case 'ended':\n            return 'ended';\n        case 'server-error':\n        case 'session-error':\n        case 'not-ready':\n        case 'error':\n        case 'died':\n            return 'failed';\n        case 'censored':\n            return 'censored';\n        case 'maintenance':\n            return 'maintenance';\n        case 'capacity':\n            return 'capacity';\n        case 'app-background':\n            return 'app-background';\n        default:\n            return 'custom';\n        }\n    }\n\n    function streamEnded(event) {\n        var streamId = event.streamId;\n        var reason = event.reason;\n\n        return endStream.call(this, streamId, reason);\n    }\n\n    function dataQuality(event) {\n        var streamId = event.streamId;\n        var status = event.status;\n        var reason = event.reason;\n\n        var internalMediaStream = this._mediaStreams[streamId];\n\n        if (internalMediaStream) {\n            internalMediaStream.dataQualityChangedCallback(status, reason);\n        }\n\n        var publisher = this._publishers[streamId];\n\n        if (publisher && typeof publisher.dataQualityChangedCallback === 'function') {\n            publisher.dataQualityChangedCallback(publisher, status, reason);\n        }\n    }\n\n    function endStream(streamId, reason) {\n        this._logger.info('[%s] Stream ended with reason [%s]', streamId, reason);\n\n        var internalMediaStream = this._mediaStreams[streamId];\n\n        if (internalMediaStream) {\n            internalMediaStream.streamEndedCallback(getStreamEndedReason(reason), reason, true);\n        }\n\n        delete this._mediaStreams[streamId];\n\n        var publisher = this._publishers[streamId];\n\n        if (publisher && typeof publisher.publisherEndedCallback === 'function') {\n            publisher.publisherEndedCallback(publisher, getStreamEndedReason(reason), reason);\n        }\n\n        delete this._publishers[streamId];\n\n        var peerConnection = this._peerConnections[streamId];\n\n        if (peerConnection) {\n            closePeerConnection.call(this, streamId, peerConnection, 'ended');\n        }\n\n        delete this._peerConnections[streamId];\n    }\n\n    function setupStreamAddedListener(streamId, state, peerConnection, streamTelemetry, callback, options) {\n        var that = this;\n        var onAddStream = function onAddStream(event) {\n            if (state.failed) {\n                return;\n            }\n\n            var masterStream = event.stream;\n            var kind = 'real-time';\n\n            if (!masterStream) {\n                state.failed = true;\n                that._logger.warn('[%s] No remote stream', streamId);\n\n                return callback.call(that, undefined, 'failed');\n            }\n\n            that._logger.info('[%s] Got remote stream', streamId);\n\n            streamTelemetry.setProperty('kind', kind);\n\n            var streamOptions = _.assign({networkLag: that._networkOneWayLatency}, options);\n            var realTimeStream = new PhenixRealTimeStream(streamId, masterStream, peerConnection, streamTelemetry, streamOptions, that._logger);\n            var realTimeStreamDecorator = new StreamWrapper(kind, realTimeStream, that._logger);\n\n            var onError = function onError(source, event) {\n                that._logger.warn('Phenix Real-Time Stream Error [%s] [%s]', source, event);\n\n                realTimeStreamDecorator.streamErrorCallback(kind, event);\n            };\n\n            var onStop = function destroyMasterMediaStream(reason) {\n                if (state.stopped) {\n                    return;\n                }\n\n                that._logger.info('[%s] stop media stream', streamId);\n\n                closePeerConnection.call(that, streamId, peerConnection, 'stop');\n\n                that._protocol.destroyStream(streamId, reason || '', function(error, response) {\n                    if (error) {\n                        that._logger.error('[%s] failed to destroy stream [%s]', streamId, error);\n\n                        return;\n                    } else if (response.status !== 'ok') {\n                        that._logger.warn('[%s] failed to destroy stream, status [%s]', streamId, response.status);\n\n                        return;\n                    }\n\n                    that._logger.info('[%s] destroyed stream', streamId);\n                });\n\n                state.stopped = true;\n            };\n\n            realTimeStreamDecorator.on(streamEnums.streamEvents.playerError.name, onError);\n            realTimeStreamDecorator.on(streamEnums.streamEvents.stopped.name, onStop);\n\n            that._mediaStreams[streamId] = realTimeStreamDecorator;\n\n            callback.call(that, realTimeStream);\n        };\n\n        _.addEventListener(peerConnection, 'addstream', onAddStream);\n    }\n\n    function setupIceCandidateListener(streamId, peerConnection, callback) {\n        var that = this;\n        var onIceCandidate = function onIceCandidate(event) {\n            var candidate = event.candidate;\n\n            if (candidate) {\n                that._logger.debug('[%s] ICE candidate: [%s] [%s] [%s]', streamId, candidate.sdpMid, candidate.sdpMLineIndex, candidate.candidate);\n            } else {\n                that._logger.info('[%s] ICE candidate discovery complete', streamId);\n            }\n\n            if (callback) {\n                callback(candidate);\n            }\n        };\n\n        _.addEventListener(peerConnection, 'icecandidate', onIceCandidate);\n    }\n\n    function setupStateListener(streamId, peerConnection) {\n        var that = this;\n        var onNegotiationNeeded = function onNegotiationNeeded(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] Negotiation needed');\n        };\n\n        var onIceConnectionStateChanged = function onIceConnectionStateChanged(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] ICE connection state changed [%s]', streamId, peerConnection.iceConnectionState);\n        };\n\n        var onIceGatheringStateChanged = function onIceGatheringStateChanged(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] ICE gathering state changed [%s]', streamId, peerConnection.iceGatheringState);\n        };\n\n        var onSignalingStateChanged = function onSignalingStateChanged(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] Signaling state changed [%s]', streamId, peerConnection.signalingState);\n        };\n\n        var onConnectionStateChanged = function onConnectionStateChanged(event) { // eslint-disable-line no-unused-vars\n            that._logger.info('[%s] Connection state changed [%s]', streamId, peerConnection.connectionState);\n        };\n\n        _.addEventListener(peerConnection, 'negotiationneeded', onNegotiationNeeded);\n        _.addEventListener(peerConnection, 'iceconnectionstatechange', onIceConnectionStateChanged);\n        _.addEventListener(peerConnection, 'icegatheringstatechange ', onIceGatheringStateChanged);\n        _.addEventListener(peerConnection, 'signalingstatechange', onSignalingStateChanged);\n        _.addEventListener(peerConnection, 'connectionstatechange', onConnectionStateChanged);\n    }\n\n    function createPublisher(streamId, callback, streamOptions) {\n        var that = this;\n        var state = {stopped: false};\n\n        var publisher = {\n            getStreamId: function getStreamId() {\n                return streamId;\n            },\n\n            getStream: function getStream() {\n                that._logger.debug('[%s] Unable to get stream on publisher of remote origin.', streamId);\n\n                return null;\n            },\n\n            getStats: function getStats() {\n                that._logger.debug('[%s] Unable to get stream stats on publisher of remote origin.', streamId);\n\n                return null;\n            },\n\n            isActive: function isActive() {\n                return !state.stopped;\n            },\n\n            hasEnded: function hasEnded() {\n                return state.stopped;\n            },\n\n            stop: function stop(reason) {\n                if (state.stopped) {\n                    return;\n                }\n\n                that._protocol.destroyStream(streamId, reason || '', function(error, response) {\n                    if (error) {\n                        that._logger.error('[%s] failed to destroy stream [%s]', streamId, error);\n\n                        return;\n                    } else if (response.status !== 'ok') {\n                        that._logger.warn('[%s] failed to destroy stream, status [%s]', streamId, response.status);\n\n                        return;\n                    }\n\n                    that._logger.info('[%s] destroyed stream', streamId);\n                });\n\n                state.stopped = true;\n            },\n\n            setPublisherEndedCallback: function setPublisherEndedCallback(callback) {\n                if (typeof callback !== 'function') {\n                    throw new Error('\"callback\" must be a function');\n                }\n\n                this.publisherEndedCallback = callback;\n            },\n\n            setDataQualityChangedCallback: function setDataQualityChangedCallback(callback) {\n                if (typeof callback !== 'function') {\n                    throw new Error('\"callback\" must be a function');\n                }\n\n                this.dataQualityChangedCallback = callback;\n            },\n\n            getOptions: function getOptions() {\n                return streamOptions;\n            },\n\n            monitor: function monitor(options, callback) {\n                if (typeof options !== 'object') {\n                    throw new Error('\"options\" must be an object');\n                }\n\n                if (typeof callback !== 'function') {\n                    throw new Error('\"callback\" must be a function');\n                }\n            },\n\n            getMonitor: function getMonitor() {\n                return null;\n            }\n        };\n\n        that._publishers[streamId] = publisher;\n\n        callback(publisher);\n    }\n\n    function setLocalH264Profile() {\n        var that = this;\n        var peerConnection = new phenixRTC.RTCPeerConnection();\n\n        // TODO(DY) remove when updating to webrtc-adapter version 5.0.5 or greater\n        if (phenixRTC.browser === 'Safari' && phenixRTC.browserVersion > 10) {\n            peerConnection.addTransceiver('audio');\n            peerConnection.addTransceiver('video');\n        }\n\n        peerConnection.createOffer(function(offer) {\n            var h264ProfileId = sdpUtil.getH264ProfileId(offer.sdp);\n\n            if (!h264ProfileId) {\n                return that._logger.info('Unable to find local h264 profile level id');\n            }\n\n            that._logger.info('Found local h264 profile level id [%s]', h264ProfileId, offer.sdp);\n\n            that._h264ProfileId = h264ProfileId;\n        }, function(e) {\n            that._logger.error('Unable to create offer to get local h264 profile level id', e);\n        }, {\n            offerToReceiveAudio: true,\n            offerToReceiveVideo: true\n        });\n    }\n\n    function setAudioState(done) {\n        var that = this;\n\n        switch (phenixRTC.browser) {\n        case 'Edge':\n            return phenixRTC.getDestinations(function(destinations) {\n                var audioDestinations = _.filter(destinations, function(destination) {\n                    return destination.kind === 'audio';\n                });\n\n                if (audioDestinations.length === 0) {\n                    if (that._canPlaybackAudio) {\n                        that._logger.info('Detected no audio devices attached to machine');\n                    }\n\n                    that._canPlaybackAudio = false;\n                } else {\n                    that._canPlaybackAudio = true;\n                }\n\n                if (done) {\n                    done();\n                }\n            });\n        default:\n            if (done) {\n                done();\n            }\n\n            break;\n        }\n    }\n\n    function createPublisherPeerConnection(peerConnectionConfig, mediaStream, streamId, offerSdp, streamTelemetry, callback, createOptions, streamOptions) {\n        var that = this;\n        var state = {\n            failed: false,\n            stopped: false\n        };\n        var hasCrypto = offerSdp.match(/a=crypto:/i);\n        var hasDataChannel = offerSdp.match(/m=application /i);\n        var peerConnection = new phenixRTC.RTCPeerConnection(peerConnectionConfig, {\n            'optional': [\n                {DtlsSrtpKeyAgreement: !hasCrypto}, {RtpDataChannels: hasDataChannel}\n            ]\n        });\n        var remoteMediaStream = null;\n        var onIceCandidateCallback = null;\n        var publisherMonitor = null;\n\n        that._peerConnections[streamId] = peerConnection;\n\n        peerConnection.addStream(mediaStream);\n\n        if (phenixRTC.browser === 'Firefox' || phenixRTC.browser === 'Edge') {\n            if (offerSdp.match(/(\\nm=video)/g) && offerSdp.match(/(\\nm=audio)/g)) {\n                var firstSection = /(a=candidate)((.|\\n)*)(?=m=)/g;\n\n                offerSdp = offerSdp.replace(firstSection, offerSdp.match(firstSection) + 'a=end-of-candidates\\n');\n            }\n\n            offerSdp += 'a=end-of-candidates';\n\n            offerSdp = offerSdp.replace(/(\\na=ice-options:trickle)/g, '');\n        }\n\n        var onFailure = function onFailure(status) {\n            if (state.failed) {\n                return;\n            }\n\n            state.failed = true;\n            state.stopped = true;\n\n            delete that._peerConnections[streamId];\n\n            closePeerConnection.call(that, streamId, peerConnection, 'failure');\n\n            callback.call(that, undefined, status || 'failed');\n        };\n\n        function onSetRemoteDescriptionSuccess() {\n            that._logger.info('Set remote description (offer)');\n\n            function onCreateAnswerSuccess(answerSdp) {\n                that._logger.info('Created answer [%s]', answerSdp.sdp);\n\n                that._protocol.setAnswerDescription(streamId, answerSdp.sdp, function(error, response) {\n                    if (error) {\n                        that._logger.error('Failed to set answer description [%s]', error);\n\n                        return onFailure();\n                    } else if (response.status !== 'ok') {\n                        that._logger.warn('Failed to set answer description, status [%s]', response.status);\n\n                        return onFailure(response.status);\n                    }\n\n                    function onSetLocalDescriptionSuccess() {\n                        var bandwidthAttribute = /(b=AS:([0-9]*)[\\n\\r]*)/gi;\n                        var video = /(mid:video)([\\n\\r]*)/gi;\n\n                        that._logger.info('Set local description (answer)');\n\n                        var limit = 0;\n                        var bandwithAttribute = bandwidthAttribute.exec(offerSdp);\n\n                        if (bandwithAttribute && bandwithAttribute.length >= 3) {\n                            limit = bandwithAttribute[2] * 1000;\n                        }\n\n                        var publisher = {\n                            getStreamId: function getStreamId() {\n                                return streamId;\n                            },\n\n                            getStream: function getStream() {\n                                return mediaStream;\n                            },\n\n                            isActive: function isActive() {\n                                return !state.stopped;\n                            },\n\n                            hasEnded: function hasEnded() {\n                                switch (peerConnection.iceConnectionState) {\n                                case 'new':\n                                case 'checking':\n                                case 'connected':\n                                case 'completed':\n                                    return false;\n                                case 'disconnected':\n                                case 'failed':\n                                case 'closed':\n                                    return true;\n                                default:\n                                    return true;\n                                }\n                            },\n\n                            stop: function stop(reason) {\n                                if (state.stopped) {\n                                    return;\n                                }\n\n                                closePeerConnection.call(that, streamId, peerConnection, 'closed');\n\n                                that._protocol.destroyStream(streamId, reason || '', function(error, response) {\n                                    if (error) {\n                                        that._logger.error('[%s] failed to destroy stream [%s]', streamId, error);\n\n                                        return;\n                                    } else if (response.status !== 'ok') {\n                                        that._logger.warn('[%s] failed to destroy stream, status [%s]', streamId, response.status);\n\n                                        return;\n                                    }\n\n                                    that._logger.info('[%s] destroyed stream', streamId);\n                                });\n\n                                state.stopped = true;\n                            },\n\n                            setPublisherEndedCallback: function setPublisherEndedCallback(callback) {\n                                if (typeof callback !== 'function') {\n                                    throw new Error('\"callback\" must be a function');\n                                }\n\n                                this.publisherEndedCallback = callback;\n                            },\n\n                            setDataQualityChangedCallback: function setDataQualityChangedCallback(callback) {\n                                if (typeof callback !== 'function') {\n                                    throw new Error('\"callback\" must be a function');\n                                }\n\n                                this.dataQualityChangedCallback = callback;\n                            },\n\n                            limitBandwidth: function limitBandwidth(bandwidthLimit) {\n                                if (phenixRTC.browser === 'Edge') {\n                                    return that._logger.warn('Limit bandwidth not support on [%s]', phenixRTC.browser);\n                                }\n\n                                if (typeof bandwidthLimit !== 'number') {\n                                    throw new Error('\"bandwidthLimit\" must be a number');\n                                }\n\n                                var newLimit = limit ? Math.min(bandwidthLimit, limit) : bandwidthLimit;\n                                var remoteDescription = peerConnection.remoteDescription;\n\n                                that._logger.info('Changing bandwidth limit to [%s]', newLimit);\n\n                                var updatedSdp = remoteDescription.sdp.replace(bandwidthAttribute, '');\n\n                                // Add new limit in kbps\n                                updatedSdp = updatedSdp.replace(video, function(match, videoLine, lineEnding, offset, sdp) { // eslint-disable-line no-unused-vars\n                                    return [videoLine, lineEnding, 'b=AS:', Math.ceil(newLimit / 1000), lineEnding].join('');\n                                });\n\n                                var updatedRemoteDescription = new phenixRTC.RTCSessionDescription({\n                                    type: remoteDescription.type,\n                                    sdp: updatedSdp\n                                });\n\n                                peerConnection.setRemoteDescription(updatedRemoteDescription);\n\n                                return {\n                                    dispose: function() {\n                                        peerConnection.setRemoteDescription(remoteDescription);\n                                    }\n                                };\n                            },\n\n                            getMonitor: function getMonitor() {\n                                return publisherMonitor;\n                            },\n\n                            monitor: function monitor(options, callback) {\n                                if (typeof options !== 'object') {\n                                    throw new Error('\"options\" must be an object');\n                                }\n\n                                if (typeof callback !== 'function') {\n                                    throw new Error('\"callback\" must be a function');\n                                }\n\n                                var monitor = new PeerConnectionMonitor(streamId, peerConnection, that._logger);\n\n                                options.direction = 'outbound';\n\n                                monitor.start(options, function activeCallback() {\n                                    return that._publishers[streamId] === publisher && !state.stopped;\n                                }, function monitorCallback(error, monitorEvent) {\n                                    if (error) {\n                                        that._logger.warn('[%s] Publisher monitor triggered unrecoverable error [%s]', error);\n                                    }\n\n                                    that._logger.warn('[%s] Publisher triggered monitor condition for [%s]', streamId, monitorEvent.type);\n\n                                    return callback(publisher, 'client-side-failure', monitorEvent);\n                                });\n\n                                _.forEach(mediaStream.getTracks(), function(track) {\n                                    _.addEventListener(track, 'readystatechange', function() {\n                                        if (track.readyState === 'ended') {\n                                            that._logger.warn('[%s] Publisher track has failed [%s]', streamId, track);\n\n                                            return callback(publisher, 'camera-track-failure', {\n                                                type: track.kind + '-track-ended',\n                                                message: 'Publisher ' + track.kind + ' track has ended in an unrecoverable way. This may require reconfiguring your camera or microphone.'\n                                            });\n                                        }\n                                    });\n                                });\n\n                                publisherMonitor = monitor;\n\n                                return monitor;\n                            },\n\n                            setRemoteMediaStreamCallback: function setRemoteMediaStreamCallback(callback) {\n                                if (typeof callback !== 'function') {\n                                    throw new Error('\"callback\" must be a function');\n                                }\n\n                                this.remoteMediaStreamCallback = callback;\n\n                                if (remoteMediaStream) {\n                                    callback(publisher, remoteMediaStream);\n                                }\n                            },\n\n                            getOptions: function getOptions() {\n                                return streamOptions;\n                            },\n\n                            getStats: function getStats(callback) {\n                                assert.isFunction(callback, 'callback');\n\n                                if (!this._lastStats) {\n                                    this._lastStats = {};\n                                }\n\n                                var that = this;\n\n                                return phenixRTC.getStats(peerConnection, null, function(stats) {\n                                    callback(PeerConnection.convertPeerConnectionStats(stats, that._lastStats));\n                                });\n                            }\n                        };\n\n                        that._publishers[streamId] = publisher;\n\n                        callback.call(that, publisher);\n                    }\n\n                    if (_.includes(response.options, 'ice-candidates')) {\n                        onIceCandidateCallback = function(candidate) {\n                            var candidates = [];\n                            var options = [];\n\n                            if (candidate) {\n                                candidates.push(candidate);\n                            } else {\n                                options.push('completed');\n                            }\n\n                            that._protocol.addIceCandidates(streamId, candidates, options, function(error, response) {\n                                if (error) {\n                                    that._logger.error('Failed to add ICE candidate [%s]', error);\n\n                                    return;\n                                } else if (response.status !== 'ok') {\n                                    that._logger.warn('Failed to add ICE candidate, status [%s]', response.status);\n\n                                    return;\n                                }\n\n                                if (_.includes(response.options, 'cancel')) {\n                                    onIceCandidateCallback = null;\n                                }\n                            });\n                        };\n                    }\n\n                    var sessionDescription = new phenixRTC.RTCSessionDescription({\n                        type: 'answer',\n                        sdp: response.sessionDescription.sdp\n                    });\n\n                    peerConnection.setLocalDescription(sessionDescription, onSetLocalDescriptionSuccess, onFailure);\n                });\n            }\n\n            var mediaConstraints = {mandatory: {}};\n\n            if (phenixRTC.browser === 'Chrome' || phenixRTC.browser === 'ReactNative') {\n                mediaConstraints.mandatory.OfferToReceiveVideo = createOptions.receiveVideo === true;\n                mediaConstraints.mandatory.OfferToReceiveAudio = createOptions.receiveAudio === true;\n            } else {\n                mediaConstraints.mandatory.offerToReceiveVideo = createOptions.receiveVideo === true;\n                mediaConstraints.mandatory.offerToReceiveAudio = createOptions.receiveAudio === true;\n            }\n\n            peerConnection.createAnswer(onCreateAnswerSuccess, onFailure, mediaConstraints);\n        }\n\n        setupStreamAddedListener.call(that, streamId, state, peerConnection, streamTelemetry, function(mediaStream) {\n            var publisher = that._publishers[streamId];\n\n            remoteMediaStream = mediaStream;\n\n            if (publisher && publisher.remoteMediaStreamCallback) {\n                publisher.remoteMediaStreamCallback(publisher, mediaStream);\n            }\n        }, createOptions);\n        setupIceCandidateListener.call(that, streamId, peerConnection, function onIceCandidate(candidate) {\n            if (onIceCandidateCallback) {\n                onIceCandidateCallback(candidate);\n            }\n        });\n        setupStateListener.call(that, streamId, peerConnection);\n\n        var offerSessionDescription = new phenixRTC.RTCSessionDescription({\n            type: 'offer',\n            sdp: offerSdp\n        });\n\n        peerConnection.setRemoteDescription(offerSessionDescription, onSetRemoteDescriptionSuccess, onFailure);\n    }\n\n    function createViewerPeerConnection(peerConnectionConfig, streamId, offerSdp, streamTelemetry, callback, createOptions) {\n        if (phenixRTC.browser === 'IE') {\n            throw new Error('Subscribing in real-time not supported on IE without the PhenixP2P Plugin');\n        }\n\n        var that = this;\n        var state = {\n            failed: false,\n            stopped: false\n        };\n        var hasCrypto = offerSdp.match(/a=crypto:/i);\n        var hasDataChannel = offerSdp.match(/m=application /i);\n        var peerConnection = new phenixRTC.RTCPeerConnection(peerConnectionConfig, {\n            'optional': [\n                {DtlsSrtpKeyAgreement: !hasCrypto}, {RtpDataChannels: hasDataChannel}\n            ]\n        });\n        var onIceCandidateCallback = null;\n\n        that._peerConnections[streamId] = peerConnection;\n\n        if (phenixRTC.browser === 'Firefox' || phenixRTC.browser === 'Edge') {\n            if (offerSdp.match(/(\\nm=video)/g) && offerSdp.match(/(\\nm=audio)/g)) {\n                var firstSection = /(a=candidate)((.|\\n)*)(?=m=)/g;\n\n                offerSdp = offerSdp.replace(firstSection, offerSdp.match(firstSection) + 'a=end-of-candidates\\n');\n            }\n\n            offerSdp += 'a=end-of-candidates';\n\n            offerSdp = offerSdp.replace(/(\\na=ice-options:trickle)/g, '');\n        }\n\n        if (phenixRTC.browser === 'ReactNative') {\n            offerSdp = setGroupLineOrderToMatchMediaSectionOrder(offerSdp);\n        }\n\n        var onFailure = function onFailure(status) {\n            if (state.failed) {\n                return;\n            }\n\n            state.failed = true;\n            state.stopped = true;\n\n            delete that._peerConnections[streamId];\n\n            closePeerConnection.call(that, streamId, peerConnection, 'failure');\n\n            callback.call(that, undefined, status || 'failed');\n        };\n\n        function onSetRemoteDescriptionSuccess() {\n            that._logger.debug('Set remote description (offer)');\n\n            function onCreateAnswerSuccess(answerSdp) {\n                that._logger.info('Created answer [%s]', answerSdp.sdp);\n\n                that._protocol.setAnswerDescription(streamId, answerSdp.sdp, function(error, response) {\n                    if (error) {\n                        that._logger.error('Failed to set answer description [%s]', error);\n\n                        return onFailure();\n                    } else if (response.status !== 'ok') {\n                        that._logger.warn('Failed to set answer description, status [%s]', response.status);\n\n                        return onFailure(response.status);\n                    }\n\n                    function onSetLocalDescriptionSuccess() {\n                        that._logger.debug('Set local description (answer)');\n                    }\n\n                    if (_.includes(response.options, 'ice-candidates')) {\n                        onIceCandidateCallback = function(candidate) {\n                            var candidates = [];\n                            var iceCandidatesOptions = [];\n\n                            if (candidate) {\n                                candidates.push(candidate);\n                            } else {\n                                iceCandidatesOptions.push('completed');\n                            }\n\n                            that._protocol.addIceCandidates(streamId, candidate, iceCandidatesOptions, function(error, response) {\n                                if (error) {\n                                    that._logger.error('Failed to add ICE candidate [%s]', error);\n\n                                    return;\n                                } else if (response.status !== 'ok') {\n                                    that._logger.warn('Failed to add ICE candidate, status [%s]', response.status);\n\n                                    return;\n                                }\n\n                                if (_.includes(response.options, 'cancel')) {\n                                    onIceCandidateCallback = null;\n                                }\n                            });\n                        };\n                    }\n\n                    var sessionDescription = new phenixRTC.RTCSessionDescription({\n                        type: 'answer',\n                        sdp: response.sessionDescription.sdp\n                    });\n\n                    peerConnection.setLocalDescription(sessionDescription, onSetLocalDescriptionSuccess, onFailure);\n                });\n            }\n\n            var mediaConstraints = {mandatory: {}};\n\n            if (phenixRTC.browser === 'Chrome' || phenixRTC.browser === 'ReactNative') {\n                mediaConstraints.mandatory.OfferToReceiveVideo = createOptions.receiveVideo !== false;\n                mediaConstraints.mandatory.OfferToReceiveAudio = createOptions.receiveAudio !== false;\n            } else {\n                mediaConstraints.mandatory.offerToReceiveVideo = createOptions.receiveVideo !== false;\n                mediaConstraints.mandatory.offerToReceiveAudio = createOptions.receiveAudio !== false;\n            }\n\n            peerConnection.createAnswer(onCreateAnswerSuccess, onFailure, mediaConstraints);\n        }\n\n        setupStreamAddedListener.call(that, streamId, state, peerConnection, streamTelemetry, callback, createOptions);\n        setupIceCandidateListener.call(that, streamId, peerConnection, function onIceCandidate(candidate) {\n            if (onIceCandidateCallback) {\n                onIceCandidateCallback(candidate);\n            }\n        });\n        setupStateListener.call(that, streamId, peerConnection);\n\n        var offerSessionDescription = new phenixRTC.RTCSessionDescription({\n            type: 'offer',\n            sdp: offerSdp\n        });\n\n        peerConnection.setRemoteDescription(offerSessionDescription, onSetRemoteDescriptionSuccess, onFailure);\n    }\n\n    function createLiveViewer(streamId, offerSdp, streamTelemetry, callback, options) {\n        var that = this;\n\n        var dashMatch = offerSdp.match(/a=x-playlist:([^\\n]*[.]mpd\\??[^\\s]*)/m);\n        var hlsMatch = offerSdp.match(/a=x-playlist:([^\\n]*[.]m3u8\\??[^\\s]*)/m);\n        var manifestUrl = _.get(dashMatch, [1], '');\n        var playlistUrl = _.get(hlsMatch, [1], '');\n\n        if (this._streamingSourceMapping) {\n            manifestUrl = manifestUrl.replace(this._streamingSourceMapping.patternToReplace, this._streamingSourceMapping.replacement);\n            playlistUrl = playlistUrl.replace(this._streamingSourceMapping.patternToReplace, this._streamingSourceMapping.replacement);\n        }\n\n        var shouldPlayHls = isIOS() || phenixRTC.browser === 'Safari';\n\n        if (dashMatch && dashMatch.length === 2 && !shouldPlayHls) {\n            options.isDrmProtectedContent = /[?&]drmToken=([^&]*)/.test(dashMatch[1]) || /x-widevine-service-certificate/.test(offerSdp);\n\n            if (options.isDrmProtectedContent) {\n                options.widevineServiceCertificateUrl = offerSdp.match(/a=x-widevine-service-certificate:([^\\n][^\\s]*)/m)[1];\n                options.playreadyLicenseUrl = offerSdp.match(/a=x-playready-license-url:([^\\n][^\\s]*)/m)[1];\n            }\n\n            if (this._shaka && !this._shaka.Player.isBrowserSupported()) {\n                this._logger.warn('[%s] Shaka does not support this browser', streamId);\n\n                return callback.call(this, undefined, 'browser-unsupported');\n            }\n\n            return createLiveViewerOfKind.call(that, streamId, manifestUrl, streamEnums.types.dash.name, streamTelemetry, callback, options);\n        } else if (hlsMatch && hlsMatch.length === 2 && typeof document === 'object' && document.createElement('video').canPlayType('application/vnd.apple.mpegURL') === 'maybe') {\n            options.isDrmProtectedContent = /[?&]drmToken=([^&]*)/.test(hlsMatch[1]);\n\n            if (options.hlsTargetDuration) {\n                assert.isNumber(options.hlsTargetDuration, 'options.hlsTargetDuration');\n\n                playlistUrl = playlistUrl + (playlistUrl.indexOf('?') > -1 ? '&' : '?') + 'targetDuration=' + options.hlsTargetDuration;\n            }\n\n            return createLiveViewerOfKind.call(that, streamId, playlistUrl, streamEnums.types.hls.name, streamTelemetry, callback, options);\n        }\n\n        that._logger.warn('[%s] Offer does not contain a supported manifest', streamId, offerSdp);\n\n        return callback.call(that, undefined, 'failed');\n    }\n\n    function createLiveViewerOfKind(streamId, uri, kind, streamTelemetry, callback, options) {\n        var that = this;\n        var liveStream = new PhenixLiveStream(kind, streamId, uri, streamTelemetry, options, this._shaka, this._logger);\n        var liveStreamDecorator = new StreamWrapper(kind, liveStream, this._logger);\n\n        var onPlayerError = function onPlayerError(source, event) {\n            that._logger.warn('Phenix Live Stream Player Error [%s] [%s]', source, event);\n\n            liveStreamDecorator.streamErrorCallback(source, event);\n        };\n\n        var onStop = function onStop(reason) {\n            that._protocol.destroyStream(streamId, reason || '', function(error, response) {\n                if (error) {\n                    that._logger.error('[%s] failed to destroy stream, [%s]', streamId, error);\n\n                    return;\n                } else if (response.status !== 'ok') {\n                    that._logger.warn('[%s] failed to destroy stream, status [%s]', streamId, response.status);\n\n                    return;\n                }\n            });\n        };\n\n        streamTelemetry.setProperty('kind', kind);\n\n        liveStreamDecorator.on(streamEnums.streamEvents.playerError.name, onPlayerError);\n        liveStreamDecorator.on(streamEnums.streamEvents.stopped.name, onStop);\n\n        this._mediaStreams[streamId] = liveStreamDecorator;\n\n        callback.call(this, liveStreamDecorator.getPhenixMediaStream());\n    }\n\n    function transitionToStatus(newStatus, reason, suppressCallback) {\n        var oldStatus = this.getStatus();\n\n        if (oldStatus !== newStatus && !(isOfflineStatus(oldStatus) && newStatus === 'offline')) {\n            this._observableStatus.setValue(newStatus);\n\n            if (suppressCallback) {\n                return;\n            }\n\n            switch (newStatus) {\n            case 'connecting':\n            case 'reconnecting':\n            case 'reconnected':\n                break;\n            case 'critical-network-issue':\n            case 'unauthorized':\n            case 'reconnect-failed':\n            case 'offline':\n                return this._offlineCallback.call(this);\n            case 'online':\n                return this._onlineCallback.call(this);\n            default:\n                break;\n            }\n        }\n    }\n\n    function isOfflineStatus(status) {\n        return status === 'critical-network-issue' || status === 'offline';\n    }\n\n    function closePeerConnection(streamId, peerConnection, reason) {\n        if (peerConnection.signalingState !== 'closed' && !peerConnection.__closing) {\n            this._logger.debug('[%s] close peer connection [%s]', streamId, reason);\n            peerConnection.close();\n            peerConnection.__closing = true;\n        }\n    }\n\n    function parseProtobufMessage(message) {\n        if (!message) {\n            return message;\n        }\n\n        var parsedMessage = _.isArray(message) ? [] : {};\n        var processIndexOrKey = _.bind(removeNullValuesAndParseEnums, null, parsedMessage);\n\n        if (_.isArray(message)) {\n            _.forEach(message, processIndexOrKey);\n        } else {\n            _.forOwn(message, processIndexOrKey);\n        }\n\n        return parsedMessage;\n    }\n\n    function removeNullValuesAndParseEnums(parsedMessage, value, key) {\n        if (value === null) {\n            return;\n        }\n\n        if (_.isObject(value) || _.isArray(value)) {\n            return parsedMessage[key] = parseProtobufMessage(value);\n        }\n\n        if (!_.isString(value) || !_.isString(key)) {\n            return parsedMessage[key] = value;\n        }\n\n        var prefixedByKey = _.startsWith(value.toLowerCase(), key.toLowerCase());\n        var valueParsedWithoutKey = prefixedByKey ? value.substring(key.length, value.length).toLowerCase() : value;\n\n        parsedMessage[key] = valueParsedWithoutKey;\n    }\n\n    function applyVendorSpecificLogic(config) {\n        if (phenixRTC.browser === 'Firefox') {\n            removeTurnsServers(config);\n        }\n\n        return config;\n    }\n\n    function removeTurnsServers(config) {\n        if (!config) {\n            return config;\n        }\n\n        _.forEach(config.iceServers, function(server) {\n            server.urls = _.filter(server.urls, function(url) {\n                return !_.startsWith(url, 'turns');\n            });\n        });\n\n        return config;\n    }\n\n    var isMobile = function() {\n        var userAgent = _.get(phenixRTC, ['global', 'navigator', 'userAgent'], '');\n\n        return isIOS() || /Android|webOS|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS/i.test(userAgent);\n    };\n\n    var isIOS = function() {\n        var userAgent = _.get(phenixRTC, ['global', 'navigator', 'userAgent'], '');\n\n        return /iPad|iPhone|iPod/.test(userAgent) && !phenixRTC.global.MSStream;\n    };\n\n    var setGroupLineOrderToMatchMediaSectionOrder = function(sdp) {\n        var groupLineSegment = sdp.match(/(?=a=group:BUNDLE).*/);\n        var mediaSegmentNamesString = _.get(_.get(groupLineSegment, [0], '').split('a=group:BUNDLE '), [1], '');\n        var mediaSegmentNames = mediaSegmentNamesString.split(' ');\n\n        var sortedMediaSegmentNames = mediaSegmentNames.sort(function(nameA, nameB) {\n            return sdp.indexOf('m=' + nameA) > sdp.indexOf('m=' + nameB);\n        });\n\n        if (sortedMediaSegmentNames.length > 0) {\n            sdp = sdp.replace(mediaSegmentNamesString, sortedMediaSegmentNames.join(' '));\n        }\n\n        return sdp;\n    };\n\n    return PCast;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/PCast.js\n// module id = 20\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-player',\n    '../AdminAPI',\n    '../userMedia/UserMediaResolver',\n    '../PCast',\n    'phenix-rtc',\n    '../streaming/shaka.json'\n], function(_, assert, observable, phenixWebPlayer, AdminAPI, UserMediaResolver, PCast, rtc, shakaEnums) {\n    'use strict';\n\n    var unauthorizedStatus = 'unauthorized';\n    var capacityBackoffTimeout = 1000;\n    var defaultPrerollSkipDuration = 500;\n    var defaultUserActionOnlineTimeout = 20000;\n    var defaultReconnectOptions = {\n        maxOfflineTime: 3 * 60 * 1000,\n        maxReconnectFrequency: 60 * 1000\n    };\n\n    function PCastExpress(options) {\n        assert.isObject(options, 'options');\n        assert.isStringNotEmpty(options.backendUri, 'options.backendUri');\n        assert.isObject(options.authenticationData, 'options.authenticationData');\n\n        if (options.authToken) {\n            assert.isStringNotEmpty(options.authToken, 'options.authToken');\n        }\n\n        if (options.onError) {\n            assert.isFunction(options.onError, 'options.onError');\n        }\n\n        if (!_.isNullOrUndefined(options.onlineTimeout)) {\n            assert.isNumber(options.onlineTimeout, 'options.onlineTimeout');\n\n            if (options.onlineTimeout < 0) {\n                throw new Error('\"options.onlineTimeout\" must be a positive number');\n            }\n        }\n\n        if (options.reconnectOptions) {\n            assert.isObject(options.reconnectOptions, 'options.reconnectOptions');\n            assert.isNumber(options.reconnectOptions.maxOfflineTime, 'options.reconnectOptions.maxOfflineTime');\n            assert.isNumber(options.reconnectOptions.maxReconnectFrequency, 'options.reconnectOptions.maxReconnectFrequency');\n        }\n\n        this._pcastObservable = new observable.Observable(null).extend({rateLimit: 0});\n        this._subscribers = {};\n        this._publishers = {};\n        this._adminAPI = new AdminAPI(options.backendUri, options.authenticationData);\n        this._isInstantiated = false;\n        this._reauthCount = 0;\n        this._reconnectCount = 0;\n        this._authToken = options.authToken;\n        this._onError = options.onError;\n        this._options = options;\n        this._onlineTimeout = _.isNumber(options.onlineTimeout) ? options.onlineTimeout : defaultUserActionOnlineTimeout;\n        this._reconnectOptions = options.reconnectOptions || defaultReconnectOptions;\n        this._logger = null;\n\n        instantiatePCast.call(this);\n    }\n\n    PCastExpress.prototype.dispose = function dispose() {\n        if (this._listedForCriticalNetworkRecoveryDisposable) {\n            this._listedForCriticalNetworkRecoveryDisposable.dispose();\n            this._listedForCriticalNetworkRecoveryDisposable = null;\n        }\n\n        if (this._pcastObservable.getValue()) {\n            this._pcastObservable.getValue().stop();\n            this._pcastObservable.setValue(null);\n        }\n\n        if (_.isNumber(this._instantiatePCastTimeout)) {\n            clearTimeout(this._instantiatePCastTimeout);\n            this._instantiatePCastTimeout = null;\n        }\n\n        this._adminAPI.dispose();\n\n        this._reconnectCount = 0;\n        this._reauthCount = 0;\n    };\n\n    PCastExpress.prototype.getPCast = function getPCast() {\n        return this._pcastObservable.getValue();\n    };\n\n    PCastExpress.prototype.getPCastObservable = function() {\n        return this._pcastObservable;\n    };\n\n    PCastExpress.prototype.getAdminAPI = function getAdminAPI() {\n        return this._adminAPI;\n    };\n\n    PCastExpress.prototype.getUserMedia = function(options, callback) {\n        var that = this;\n\n        assert.isObject(options.mediaConstraints, 'options.mediaConstraints');\n        assert.isFunction(callback, 'callback');\n\n        if (options.resolution) {\n            assert.isNumber(options.resolution, 'options.resolution');\n        }\n\n        if (options.frameRate) {\n            assert.isNumber(options.frameRate, 'options.frameRate');\n        }\n\n        if (options.aspectRatio) {\n            assert.isStringNotEmpty(options.aspectRatio, 'options.aspectRatio');\n        }\n\n        if (options.onResolveMedia) {\n            assert.isFunction(options.onResolveMedia, 'options.onResolveMedia');\n        }\n\n        if (options.onScreenShare) {\n            assert.isFunction(options.onScreenShare, 'options.onScreenShare');\n        }\n\n        if (that._pcastObservable.getValue()) {\n            return resolveUserMedia.call(that, that._pcastObservable.getValue(), options, callback);\n        }\n\n        var pcastSubscription = that._pcastObservable.subscribe(function(pcast) {\n            if (!pcast) {\n                return;\n            }\n\n            pcastSubscription.dispose();\n\n            resolveUserMedia.call(that, pcast, options, callback);\n        });\n    };\n\n    PCastExpress.prototype.publish = function publish(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        if (options.capabilities) {\n            assert.isArray(options.capabilities, 'options.capabilities');\n        }\n\n        if (options.connectOptions) {\n            assert.isArray(options.connectOptions, 'options.connectOptions');\n        }\n\n        if (options.mediaConstraints) {\n            assert.isObject(options.mediaConstraints, 'options.mediaConstraints');\n        } else {\n            assert.isObject(options.userMediaStream, 'options.userMediaStream');\n        }\n\n        if (options.videoElement) {\n            assert.isObject(options.videoElement, 'options.videoElement');\n        }\n\n        if (options.monitor) {\n            assert.isObject(options.monitor, 'options.monitor');\n            assert.isFunction(options.monitor.callback, 'options.monitor.callback');\n\n            if (options.monitor.options) {\n                assert.isObject(options.monitor.options, 'options.monitor.options');\n            }\n        }\n\n        if (options.streamToken) {\n            assert.isStringNotEmpty(options.streamToken, 'options.streamToken');\n        }\n\n        var that = this;\n\n        this.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (options.userMediaStream) {\n                return getStreamingTokenAndPublish.call(that, options.userMediaStream, options, false, callback);\n            }\n\n            that.getUserMedia(options, function(error, response) {\n                if (error) {\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok') {\n                    return callback(null, response);\n                }\n\n                getStreamingTokenAndPublish.call(that, response.userMedia, options, true, callback);\n            });\n        }, options.isContinuation);\n    };\n\n    var connectOptionCapabilities = ['streaming', 'low-latency', 'on-demand', 'uld', 'vvld', 'vld', 'ld', 'sd', 'hd', 'fhd', 'uhd'];\n\n    PCastExpress.prototype.publishRemote = function publishRemote(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n        assert.isStringNotEmpty(options.streamUri, 'options.streamUri');\n\n        if (options.capabilities) {\n            assert.isArray(options.capabilities, 'options.capabilities');\n        }\n\n        if (options.connectOptions) {\n            assert.isArray(options.connectOptions, 'options.connectOptions');\n        }\n\n        if (options.mediaConstraints) {\n            throw new Error('Invalid argument, Media Constraints, for publishing remote.');\n        }\n\n        if (options.videoElement) {\n            throw new Error('May not view remote stream publisher. Please subscribe to view.');\n        }\n\n        if (options.prerollSkipDuration) {\n            assert.isNumber(options.prerollSkipDuration, 'options.prerollSkipDuration');\n        }\n\n        if (options.monitor) {\n            assert.isObject(options.monitor, 'options.monitor');\n            assert.isFunction(options.monitor.callback, 'options.monitor.callback');\n\n            if (options.monitor.options) {\n                assert.isObject(options.monitor.options, 'options.monitor.options');\n            }\n        }\n\n        if (options.frameRate) {\n            assert.isObject(options.frameRate, 'options.frameRate');\n\n            if (options.frameRate.exact) {\n                assert.isNumber(options.frameRate.exact, 'options.frameRate.exact');\n            }\n\n            if (options.frameRate.max) {\n                assert.isNumber(options.frameRate.max, 'options.frameRate.max');\n            }\n        }\n\n        if (options.streamToken) {\n            assert.isStringNotEmpty(options.streamToken, 'options.streamToken');\n        }\n\n        var that = this;\n\n        this.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            var remoteOptions = _.assign({\n                connectOptions: [],\n                capabilities: []\n            }, options);\n\n            if (!_.includes(remoteOptions.capabilities, 'publish-uri')) {\n                remoteOptions.capabilities.push('publish-uri');\n            }\n\n            _.forEach(connectOptionCapabilities, function(capability) {\n                if (_.includes(remoteOptions.capabilities, capability)) {\n                    remoteOptions.connectOptions.push('publisher-capability=' + capability);\n                }\n            });\n\n            if (options.frameRate && options.frameRate.exact) {\n                remoteOptions.connectOptions.push('source-uri-video-fps=' + options.frameRate.exact);\n            }\n\n            if (options.frameRate && options.frameRate.max) {\n                remoteOptions.connectOptions.push('source-uri-video-fps-max=' + options.frameRate.max);\n            }\n\n            remoteOptions.connectOptions.push('source-uri-preroll-skip-duration=' + (_.isNumber(options.prerollSkipDuration) ? options.prerollSkipDuration : defaultPrerollSkipDuration).toString());\n\n            getStreamingTokenAndPublish.call(that, remoteOptions.streamUri, remoteOptions, false, callback);\n        });\n    };\n\n    PCastExpress.prototype.publishScreen = function publishScreen(options, callback) {\n        var publishScreenOptions = _.assign({mediaConstraints: {screen: true}}, options);\n\n        _.set(publishScreenOptions, ['monitor', 'options'], _.assign({}, {\n            monitorFrameRate: false,\n            videoBitRateThreshold: 100,\n            conditionCountForNotificationThreshold: 8\n        }, _.get(publishScreenOptions, ['monitor', 'options'], {})));\n\n        return this.publish(publishScreenOptions, callback);\n    };\n\n    PCastExpress.prototype.subscribe = function subscribe(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n        assert.isStringNotEmpty(options.streamId, 'options.streamId');\n        assert.isObject(options.capabilities, 'options.capabilities');\n\n        if (options.videoElement) {\n            assert.isObject(options.videoElement, 'options.videoElement');\n        }\n\n        if (options.monitor) {\n            assert.isObject(options.monitor, 'options.monitor');\n            assert.isFunction(options.monitor.callback, 'options.monitor.callback');\n\n            if (options.monitor.options) {\n                assert.isObject(options.monitor.options, 'options.monitor.options');\n            }\n        }\n\n        if (options.streamToken) {\n            assert.isStringNotEmpty(options.streamToken, 'options.streamToken');\n        }\n\n        if (options.subscriberOptions) {\n            assert.isObject(options.subscriberOptions, 'options.subscriberOptions');\n        }\n\n        var that = this;\n\n        this.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (options.streamToken) {\n                return subscribeToStream.call(that, options.streamToken, options, callback);\n            }\n\n            that._adminAPI.createStreamTokenForSubscribing(that._pcastObservable.getValue().getProtocol().getSessionId(), options.capabilities, options.streamId, null, function(error, response) {\n                if (error) {\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok') {\n                    return callback(null, response);\n                }\n\n                subscribeToStream.call(that, response.streamToken, options, callback);\n            });\n        }, options.isContinuation);\n    };\n\n    PCastExpress.prototype.subscribeToScreen = function subscribeToScreen(options, callback) {\n        var subscribeToScreenOptions = _.assign({}, options);\n\n        _.set(subscribeToScreenOptions, ['monitor', 'options'], _.assign({}, {\n            monitorFrameRate: false,\n            videoBitRateThreshold: 100,\n            conditionCountForNotificationThreshold: 8\n        }, _.get(subscribeToScreenOptions, ['monitor', 'options'], {})));\n\n        return this.subscribe(subscribeToScreenOptions, callback);\n    };\n\n    PCastExpress.prototype.waitForOnline = function waitForOnline(callback, isNotUserAction) {\n        assert.isFunction(callback, 'callback');\n\n        if (this._pcastObservable.getValue() && this._pcastObservable.getValue().getStatus() === 'online') {\n            return callback();\n        }\n\n        var that = this;\n        var disposeOfWaitTimeout = isNotUserAction ? _.get(that._reconnectOptions, ['maxOfflineTime']) : this._onlineTimeout;\n        var pcastSubscription = null;\n        var statusSubscription = null;\n        var onlineTimeout = setTimeout(function() {\n            that._logger.info('Disposing of Express Online listener after [%s] ms', disposeOfWaitTimeout);\n\n            if (pcastSubscription) {\n                pcastSubscription.dispose();\n            }\n\n            if (statusSubscription) {\n                statusSubscription.dispose();\n            }\n\n            callback(new Error('timeout'));\n        }, disposeOfWaitTimeout);\n\n        this._logger.info('Waiting for Online status before continuing. Timeout set to [%s]', disposeOfWaitTimeout);\n\n        var subscribeToStatusChange = function(pcast) {\n            if (statusSubscription) {\n                statusSubscription.dispose();\n            }\n\n            if (!pcast) {\n                return;\n            }\n\n            statusSubscription = pcast.getObservableStatus().subscribe(function(status) {\n                if (status !== 'online') {\n                    return;\n                }\n\n                clearTimeout(onlineTimeout);\n                statusSubscription.dispose();\n                pcastSubscription.dispose();\n\n                return callback();\n            }, {initial: 'notify'});\n        };\n\n        if (this._pcastObservable.getValue()) {\n            subscribeToStatusChange(this._pcastObservable.getValue());\n        }\n\n        pcastSubscription = this._pcastObservable.subscribe(subscribeToStatusChange);\n    };\n\n    function instantiatePCast() {\n        var that = this;\n\n        if (!this._pcastObservable.getValue()) {\n            var pcastOptions = _.assign({logger: this._logger}, this._options);\n\n            this._pcastObservable.setValue(new PCast(pcastOptions));\n        }\n\n        if (!this._logger) {\n            this._logger = this._pcastObservable.getValue().getLogger();\n        }\n\n        if (!this._pcastStatusSubscription) {\n            this._pcastStatusSubscription = this._pcastObservable.getValue().getObservableStatus().subscribe(_.bind(onPCastStatusChange, this));\n        }\n\n        if (this._authToken) {\n            return this._pcastObservable.getValue().start(this._authToken, _.noop, _.noop, _.noop);\n        }\n\n        this._adminAPI.createAuthenticationToken(function(error, response) {\n            if (error && error.message === 'timeout') {\n                return onPCastStatusChange.call(that, error.message);\n            }\n\n            if (error) {\n                return handleError.call(that, error);\n            }\n\n            if (response.status !== 'ok') {\n                return onPCastStatusChange.call(that, response.status);\n            }\n\n            if (!that._pcastObservable.getValue()) {\n                return that._logger.warn('Unable to authenticate. PCast not instantiated.');\n            }\n\n            that._pcastObservable.getValue().start(response.authenticationToken, _.noop, _.noop, _.noop);\n        });\n    }\n\n    function onPCastStatusChange(status) {\n        var that = this;\n\n        switch (status) {\n        case 'timeout':\n        case 'critical-network-issue':\n            if (that._pcastObservable.getValue()) {\n                that._pcastObservable.getValue().stop('express-recovery');\n                that._pcastObservable.setValue(null);\n            }\n\n            if (that._pcastStatusSubscription) {\n                that._pcastStatusSubscription.dispose();\n                that._pcastStatusSubscription = null;\n            }\n\n            that._reconnectCount++;\n\n            return instantiateWithBackoff.call(that);\n        case 'reconnect-failed':\n        case 'unauthorized':\n            delete this._authToken;\n\n            that._reauthCount++;\n\n            if (that._reauthCount > 1) {\n                return handleError.call(this, new Error(status));\n            }\n\n            that._logger.info('[Express] Attempting to create new authToken and re-connect after [%s] response', unauthorizedStatus);\n\n            return getAuthTokenAndReAuthenticate.call(that);\n        case 'capacity':\n        case 'network-unavailable':\n            that._reconnectCount++;\n\n            return instantiateWithBackoff.call(that);\n        case 'online':\n            that._reauthCount = 0;\n            that._reconnectCount = 0;\n\n            if (!that._isInstantiated) {\n                that._logger.info('Express API successfully instantiated');\n            }\n\n            that._isInstantiated = true;\n\n            return;\n        case 'reconnecting':\n        case 'reconnected':\n        case 'connecting':\n            break; // Everything ok\n        case 'offline':\n            return;\n        case 'failed':\n        default:\n            return handleError.call(that, new Error(status));\n        }\n    }\n\n    function instantiateWithBackoff() {\n        var that = this;\n        var staticTimeout = Math.min(capacityBackoffTimeout * that._reconnectCount * that._reconnectCount, this._reconnectOptions.maxReconnectFrequency);\n        var maxOffsetInSeconds = Math.min(staticTimeout / 10000, 5);\n        var randomLinearOffset = Math.random() * maxOffsetInSeconds * 1000;\n        var timeoutWithRandomOffset = staticTimeout + randomLinearOffset;\n\n        this._logger.info('Waiting for [%s] ms before continuing to attempt to reconnect to PCast', timeoutWithRandomOffset);\n\n        this._instantiatePCastTimeout = setTimeout(function() {\n            if (!that._pcastObservable.getValue() || !that._pcastObservable.getValue().isStarted()) {\n                return instantiatePCast.call(that);\n            }\n\n            return getAuthTokenAndReAuthenticate.call(that);\n        }, timeoutWithRandomOffset);\n    }\n\n    function getAuthTokenAndReAuthenticate() {\n        var that = this;\n\n        this._adminAPI.createAuthenticationToken(function(error, response) {\n            if (error && error.message === 'timeout') {\n                return onPCastStatusChange.call(that, error.message);\n            }\n\n            if (error) {\n                return handleError.call(that, error);\n            }\n\n            if (response.status !== 'ok') {\n                return onPCastStatusChange.call(that, response.status);\n            }\n\n            if (!that._pcastObservable.getValue()) {\n                return that._logger.warn('Unable to authenticate. PCast not instantiated.');\n            }\n\n            that._pcastObservable.getValue().reAuthenticate(response.authenticationToken);\n        });\n    }\n\n    function handleError(e) {\n        if (!this._onError) {\n            throw e;\n        }\n\n        this._onError(e);\n    }\n\n    function resolveUserMedia(pcast, options, callback) {\n        var userMediaResolver = new UserMediaResolver(pcast, {\n            aspectRatio: options.aspectRatio,\n            resolutionHeight: options.resolution,\n            frameRate: options.frameRate,\n            resolutionSelectionStrategy: options.resolutionSelectionStrategy,\n            onScreenShare: function(screenOptions) {\n                screenOptions = options.onScreenShare ? options.onScreenShare(screenOptions) : screenOptions;\n\n                if (screenOptions.resolution) {\n                    assert.isNumber(screenOptions.resolution, 'clientOptions.resolution');\n                }\n\n                if (screenOptions.frameRate) {\n                    assert.isNumber(screenOptions.frameRate, 'screenOptions.frameRate');\n                }\n\n                if (screenOptions.aspectRatio) {\n                    assert.isStringNotEmpty(screenOptions.aspectRatio, 'screenOptions.aspectRatio');\n                }\n\n                return _.assign({resolutionHeight: screenOptions.resolution}, screenOptions);\n            }\n        });\n\n        userMediaResolver.getUserMedia(options.mediaConstraints, function(error, response) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (options.onResolveMedia) {\n                options.onResolveMedia(response.options);\n            }\n\n            callback(null, _.assign({status: 'ok'}, response));\n        });\n    }\n\n    function getStreamingTokenAndPublish(userMediaOrUri, options, cleanUpUserMediaOnStop, callback) {\n        var that = this;\n\n        assert.isArray(options.capabilities, 'options.capabilities');\n\n        if (options.streamToken) {\n            return publishUserMediaOrUri.call(that, options.streamToken, userMediaOrUri, options, cleanUpUserMediaOnStop, callback);\n        }\n\n        that.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            var sessionId = that._pcastObservable.getValue().getProtocol().getSessionId();\n\n            that._logger.info('Session Id [%s]', sessionId);\n\n            that._adminAPI.createStreamTokenForPublishing(sessionId, options.capabilities, function(error, response) {\n                if (error) {\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok') {\n                    return callback(null, response);\n                }\n\n                publishUserMediaOrUri.call(that, response.streamToken, userMediaOrUri, options, cleanUpUserMediaOnStop, callback);\n            });\n        }, options.isContinuation);\n    }\n\n    function publishUserMediaOrUri(streamToken, userMediaOrUri, options, cleanUpUserMediaOnStop, callback) {\n        var that = this;\n        var hasAlreadyAttachedMedia = false;\n\n        if (options.tags) {\n            assert.isArray(options.tags, 'options.tags');\n        }\n\n        if (options.connectOptions) {\n            assert.isArray(options.connectOptions, 'options.connectOptions');\n        }\n\n        var publishCallback = function publishCallback(pcast, status, publisher) {\n            var retryPublisher = function retryPublisher(reason) {\n                var placeholder = _.uniqueId();\n                var optionsWithToken = _.assign({\n                    streamToken: streamToken,\n                    isContinuation: true\n                }, options);\n\n                that._publishers[placeholder] = true;\n\n                if (reason === 'camera-track-failure') {\n                    publisher.stop(reason, false);\n                    that.publish(options, callback);\n                } else {\n                    publisher.stop(reason, true);\n                    getStreamingTokenAndPublish.call(that, userMediaOrUri, optionsWithToken, cleanUpUserMediaOnStop, callback);\n                }\n\n                delete that._publishers[placeholder];\n            };\n\n            if ((status === unauthorizedStatus && options.streamToken) || status === 'timeout') {\n                that._logger.info('[Express] Attempting to create new streamToken and re-publish after [%s] response', unauthorizedStatus);\n\n                var reAuthOptions = _.assign({isContinuation: true}, options);\n\n                delete reAuthOptions.streamToken;\n\n                return getStreamingTokenAndPublish.call(that, userMediaOrUri, reAuthOptions, cleanUpUserMediaOnStop, callback);\n            }\n\n            if (status !== 'ok') {\n                return callback(null, {status: status});\n            }\n\n            that._publishers[publisher.getStreamId()] = publisher;\n\n            if (options.videoElement && !hasAlreadyAttachedMedia) {\n                rtc.attachMediaStream(options.videoElement, userMediaOrUri);\n\n                hasAlreadyAttachedMedia = true;\n            }\n\n            var isPublisher = true;\n            var noopCallback = function() {};\n            var publisherEndedCallback = _.bind(onPublisherOrStreamEnd, that, noopCallback, retryPublisher, isPublisher);\n\n            if (options.monitor) {\n                var monitorCallback = _.bind(onMonitorCallback, that, options.monitor.callback, retryPublisher);\n\n                publisher.monitor(options.monitor.options || {}, monitorCallback);\n\n                publisherEndedCallback = _.bind(onPublisherOrStreamEnd, that, options.monitor.callback, retryPublisher, isPublisher);\n            }\n\n            publisher.setPublisherEndedCallback(publisherEndedCallback);\n\n            var expressPublisher = createExpressPublisher.call(that, publisher, options.videoElement, cleanUpUserMediaOnStop);\n\n            callback(null, {\n                status: 'ok',\n                publisher: expressPublisher\n            });\n        };\n\n        that.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            that._pcastObservable.getValue().publish(streamToken, userMediaOrUri, publishCallback, options.tags, {connectOptions: options.connectOptions});\n        }, options.isContinuation);\n    }\n\n    function subscribeToStream(streamToken, options, callback) {\n        var that = this;\n\n        var handleSubscribe = function(pcast, status, subscriber) {\n            var retrySubscriber = function retrySubscriber(reason) {\n                var placeholder = _.uniqueId();\n                var retryOptions = _.assign({isContinuation: true}, options);\n\n                that._subscribers[placeholder] = true;\n\n                subscriber.stop(reason);\n\n                that._logger.warn('[%s] Stream failure occurred with reason [%s]. Attempting to recover from failure.', options.streamId, reason);\n\n                subscribeToStream.call(that, streamToken, retryOptions, callback);\n\n                delete that._subscribers[placeholder];\n            };\n\n            if ((status === unauthorizedStatus && options.streamToken) || status === 'timeout') {\n                that._logger.info('[%s] [Express] Attempting to create new streamToken and re-subscribe after [%s] response', options.streamId, unauthorizedStatus);\n\n                var reAuthOptions = _.assign({isContinuation: true}, options);\n\n                delete reAuthOptions.streamToken;\n\n                return that.subscribe(reAuthOptions, callback);\n            }\n\n            if (status === 'streaming-not-ready') {\n                return callback(null, {\n                    status: status,\n                    retry: _.bind(retrySubscriber, that, status)\n                });\n            }\n\n            if (status !== 'ok') {\n                return callback(null, {status: status});\n            }\n\n            that._subscribers[subscriber.getStreamId()] = subscriber;\n\n            var renderer;\n\n            if (options.videoElement) {\n                renderer = subscriber.createRenderer();\n\n                renderer.start(options.videoElement);\n            }\n\n            var isPublisher = false;\n            var noopCallback = _.noop;\n            var subscriberEndedCallback = _.bind(onPublisherOrStreamEnd, that, noopCallback, retrySubscriber, isPublisher);\n\n            if (options.monitor) {\n                var monitorCallback = _.bind(onMonitorCallback, that, options.monitor.callback, retrySubscriber);\n\n                subscriber.monitor(options.monitor.options || {}, monitorCallback);\n\n                subscriberEndedCallback = _.bind(onPublisherOrStreamEnd, that, options.monitor.callback, retrySubscriber, isPublisher);\n            }\n\n            subscriber.setStreamEndedCallback(subscriberEndedCallback);\n\n            var expressSubscriber = createExpressSubscriber.call(that, subscriber, renderer);\n            var subscribeResponse = {\n                status: 'ok',\n                mediaStream: expressSubscriber\n            };\n\n            subscriber.setStreamErrorCallback(function(playerRenderer, errorType, error) {\n                if (errorType === 'real-time' && error.message === 'connection-timeout') {\n                    return retrySubscriber.call(that, error.message);\n                }\n\n                if (errorType === 'shaka' && error.severity !== shakaEnums.errorSeverity.critical.id) {\n                    return; // Ignore error\n                }\n\n                if (errorType === 'phenix-player' && error.severity === phenixWebPlayer.errors.severity.RECOVERABLE) {\n                    var reAuthOptions = _.assign({isContinuation: true}, options);\n\n                    delete reAuthOptions.streamToken;\n\n                    return that.subscribe(reAuthOptions, callback);\n                }\n\n                that._logger.warn('[%s] Error while playing stream with Express API. Stopping stream.', expressSubscriber.getStreamId(), error);\n\n                expressSubscriber.stop();\n\n                return callback(error);\n            });\n\n            if (renderer) {\n                subscribeResponse.renderer = renderer;\n            }\n\n            callback(null, subscribeResponse);\n        };\n\n        that.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            that._pcastObservable.getValue().subscribe(streamToken, handleSubscribe, options.subscriberOptions);\n        }, options.isContinuation);\n    }\n\n    function createExpressPublisher(publisher, videoElement, cleanUpUserMediaOnStop) {\n        var publisherStop = _.bind(publisher.stop, publisher);\n\n        publisher.stop = function(reason, isInternal) {\n            publisherStop(reason);\n\n            if (videoElement) {\n                videoElement.src = '';\n                videoElement.srcObject = null;\n            }\n\n            if (cleanUpUserMediaOnStop && publisher.getStream() && !isInternal) {\n                var nativeMediaStream = publisher.getStream();\n\n                if (nativeMediaStream) {\n                    nativeMediaStream.getTracks().forEach(function(track) {\n                        track.stop();\n                    });\n                }\n            }\n        };\n\n        publisher.enableAudio = function() {\n            return setStreamAudioTracksState(publisher.getStream(), true);\n        };\n\n        publisher.disableAudio = function() {\n            return setStreamAudioTracksState(publisher.getStream(), false);\n        };\n\n        publisher.enableVideo = function() {\n            return setStreamVideoTracksState(publisher.getStream(), true);\n        };\n\n        publisher.disableVideo = function() {\n            return setStreamVideoTracksState(publisher.getStream(), false);\n        };\n\n        // Publisher Ended Callback handled with normal callback route for express\n        publisher.setPublisherEndedCallback = function() {};\n\n        return publisher;\n    }\n\n    function createExpressSubscriber(subscriber, renderer) {\n        var subscriberStop = _.bind(subscriber.stop, subscriber);\n\n        subscriber.stop = function(reason) {\n            if (renderer) {\n                renderer.stop();\n            }\n\n            subscriberStop(reason);\n        };\n\n        subscriber.enableAudio = function() {\n            return setStreamAudioTracksState(subscriber.getStream(), true);\n        };\n\n        subscriber.disableAudio = function() {\n            return setStreamAudioTracksState(subscriber.getStream(), false);\n        };\n\n        subscriber.enableVideo = function() {\n            return setStreamVideoTracksState(subscriber.getStream(), true);\n        };\n\n        subscriber.disableVideo = function() {\n            return setStreamVideoTracksState(subscriber.getStream(), false);\n        };\n\n        // Stream Ended Callback handled with normal callback route for express\n        subscriber.setStreamEndedCallback = function() {};\n\n        return subscriber;\n    }\n\n    function setStreamAudioTracksState(stream, newState) {\n        if (!stream) {\n            return;\n        }\n\n        setTracksEnabled(stream.getAudioTracks(), newState);\n\n        return newState;\n    }\n\n    function setStreamVideoTracksState(stream, newState) {\n        if (!stream) {\n            return;\n        }\n\n        setTracksEnabled(stream.getVideoTracks(), newState);\n\n        return newState;\n    }\n\n    function setTracksEnabled(tracks, enabled) {\n        assert.isArray(tracks, 'tracks');\n\n        _.forEach(tracks, function(track) {\n            track.enabled = enabled;\n        });\n    }\n\n    function onMonitorCallback(callback, retry, stream, reason, monitorEvent) { // eslint-disable-line no-unused-vars\n        switch (reason) {\n        case 'camera-track-failure':\n        case 'client-side-failure':\n            callback(null, _.assign({\n                status: reason,\n                retry: _.bind(retry, null, reason)\n            }, monitorEvent));\n\n            // Handle failure event, redo stream\n            break;\n        default:\n            // No failure has occurred, handle monitor event\n            break;\n        }\n    }\n\n    function onPublisherOrStreamEnd(monitorCallback, retry, isPublisher, publisherOrStream, reason, description) {\n        var response = {\n            status: 'stream-ended',\n            reason: reason,\n            description: description\n        };\n\n        switch (reason) {\n        case 'ended': // Normal operation\n        case 'censored': // Forced to stop\n            var endedResponse = {\n                status: reason,\n                reason: reason,\n                description: description\n            };\n\n            if (isPublisher) {\n                endedResponse.publisher = publisherOrStream;\n            } else {\n                endedResponse.mediaStream = publisherOrStream;\n            }\n\n            return monitorCallback(null, endedResponse);\n        case 'custom':\n            // Client ended publisher, do nothing\n            return monitorCallback(null, response);\n        case 'capacity':\n            // Don't inform the client, attempt to re-publish automatically after backoff\n            return setTimeout(function() {\n                return retry(reason);\n            }, capacityBackoffTimeout);\n        case 'failed':\n        case 'maintenance':\n            // Don't inform the client, attempt to re-publish automatically\n            return retry(reason);\n        case 'app-background':\n        default:\n            // Give client option to re-publish\n            response.retry = retry;\n\n            return monitorCallback(null, response);\n        }\n    }\n\n    return PCastExpress;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/express/PCastExpress.js\n// module id = 21\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    '../AdminAPI',\n    './PCastExpress',\n    '../room/RoomService',\n    './MemberSelector',\n    '../room/Stream',\n    '../room/room.json',\n    '../room/member.json',\n    '../room/stream.json',\n    '../room/track.json'\n], function(_, assert, observable, disposable, AdminAPI, PCastExpress, RoomService, MemberSelector, Stream, roomEnums, memberEnums, streamEnums, trackEnums) {\n    'use strict';\n\n    var defaultStreamWildcardTokenRefreshInterval = 300000;\n    var defaultWildcardEnabled = true;\n\n    function RoomExpress(options) {\n        assert.isObject(options, 'options');\n\n        if (options.pcastExpress) {\n            assert.isObject(options.pcastExpress, 'options.pcastExpress');\n        } else {\n            assert.isStringNotEmpty(options.backendUri, 'options.backendUri');\n            assert.isObject(options.authenticationData, 'options.authenticationData');\n        }\n\n        this._pcastExpress = options.pcastExpress || new PCastExpress(options);\n        this._shouldDisposeOfPCastExpress = !options.pcastExpress;\n        this._roomServices = {};\n        this._roomServicePublishers = {};\n        this._activeRoomServices = [];\n        this._membersSubscriptions = {};\n        this._logger = this._pcastExpress.getPCast().getLogger();\n\n        var that = this;\n\n        this._pcastExpress.getPCastObservable().subscribe(function(pcast) {\n            if (!pcast) {\n                var roomServicesToCleanUp = _.assign({}, that._roomServices);\n\n                _.forOwn(that._membersSubscriptions, function(membersSubscription) {\n                    membersSubscription.dispose();\n                });\n\n                that._pcastExpress.waitForOnline(function() {\n                    _.forOwn(roomServicesToCleanUp, function(roomService) {\n                        roomService.stop();\n                    });\n                }, true);\n\n                that._membersSubscriptions = {};\n                that._roomServices = {};\n                that._activeRoomServices = [];\n            }\n        });\n    }\n\n    RoomExpress.prototype.dispose = function dispose() {\n        disposeOfRoomServices.call(this);\n\n        if (this._shouldDisposeOfPCastExpress) {\n            this._pcastExpress.dispose();\n        }\n    };\n\n    RoomExpress.prototype.getPCastExpress = function getPCastExpress() {\n        return this._pcastExpress;\n    };\n\n    // Responsible for creating room. Returns immutable room\n    RoomExpress.prototype.createRoom = function createRoom(options, callback) {\n        assert.isFunction(callback, 'callback');\n        assert.isObject(options.room, 'options.room');\n        assert.isStringNotEmpty(options.room.name, 'options.room.name');\n        assert.isStringNotEmpty(options.room.type, 'options.room.type');\n\n        if (options.room.description) {\n            assert.isStringNotEmpty(options.room.description, 'options.room.description');\n        }\n\n        var roomDescription = options.room.description || getDefaultRoomDescription(options.room.type);\n\n        createRoomService.call(this, null, null, function(error, roomServiceResponse) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (roomServiceResponse.status !== 'ok') {\n                return callback(null, roomServiceResponse);\n            }\n\n            var roomService = roomServiceResponse.roomService;\n            var roomToCreate = _.assign({}, options.room);\n\n            if (!roomToCreate.description) {\n                roomToCreate.description = roomDescription;\n            }\n\n            roomService.createRoom(roomToCreate, function(error, roomResponse) {\n                if (error) {\n                    return callback(error);\n                }\n\n                // Don't return room service. Not in room. Room returned is immutable\n                roomService.stop();\n\n                return callback(null, roomResponse);\n            });\n        });\n    };\n\n    RoomExpress.prototype.joinRoom = function joinRoom(options, joinRoomCallback, membersChangedCallback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(joinRoomCallback, 'joinRoomCallback');\n        assert.isStringNotEmpty(options.role, 'options.role');\n\n        if (membersChangedCallback) {\n            assert.isFunction(membersChangedCallback, 'membersChangedCallback');\n        }\n\n        if (options.screenName) {\n            assert.isStringNotEmpty(options.screenName, 'options.screenName');\n        }\n\n        if (options.roomId) {\n            assert.isStringNotEmpty(options.roomId, 'options.roomId');\n        }\n\n        if (options.alias) {\n            assert.isStringNotEmpty(options.alias, 'options.alias');\n        }\n\n        if (options.streams) {\n            assert.isArray(options.streams, 'options.streams');\n        }\n\n        var that = this;\n        var joinRoomWithPCast = function(pcast) {\n            if (!pcast) {\n                return;\n            }\n\n            joinRoomWithOptions.call(that, options, function(error, response) {\n                var joinRoomResponse = response;\n\n                if (joinRoomResponse && joinRoomResponse.roomService) {\n                    var leaveRoom = joinRoomResponse.roomService.leaveRoom;\n\n                    joinRoomResponse.roomService.leaveRoom = function(callback) {\n                        if (subscription && pcast.getObservableStatus() !== 'offline') {\n                            subscription.dispose();\n                        }\n\n                        leaveRoom(callback);\n                    };\n                }\n\n                joinRoomCallback(error, response);\n            }, membersChangedCallback);\n        };\n\n        if (this._pcastExpress.getPCastObservable()) {\n            return joinRoomWithPCast(this._pcastExpress.getPCastObservable());\n        }\n\n        var subscription = this._pcastExpress.getPCastObservable().subscribe(joinRoomWithPCast);\n    };\n\n    RoomExpress.prototype.publishToRoom = function publishToRoom(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n        assert.isObject(options.room, 'options.room');\n\n        if (options.streamUri) {\n            assert.isStringNotEmpty(options.streamUri, 'options.streamUri');\n        } else if (options.mediaConstraints) {\n            assert.isObject(options.mediaConstraints, 'options.mediaConstraints');\n        } else {\n            assert.isObject(options.userMediaStream, 'options.userMediaStream');\n        }\n\n        if (options.videoElement) {\n            assert.isObject(options.videoElement, 'options.videoElement');\n        }\n\n        if (options.screenName) {\n            assert.isStringNotEmpty(options.screenName, 'options.screenName');\n        }\n\n        if (options.capabilities) {\n            assert.isArray(options.capabilities, 'options.capabilities');\n        }\n\n        if (options.tags) {\n            assert.isArray(options.tags, 'options.tags');\n        }\n\n        if (options.streamInfo) {\n            assert.isObject(options.streamInfo, 'options.streamInfo');\n        }\n\n        if (options.viewerStreamSelectionStrategy) {\n            assert.isStringNotEmpty(options.viewerStreamSelectionStrategy, 'options.viewerStreamSelectionStrategy');\n        }\n\n        if (_.isUndefined(options.enableWildcardCapability)) {\n            options.enableWildcardCapability = defaultWildcardEnabled;\n        }\n\n        assert.isValidType(options.streamType, streamEnums.types, 'options.streamType');\n        assert.isValidType(options.memberRole, memberEnums.roles, 'options.memberRole');\n        assert.isBoolean(options.enableWildcardCapability, 'options.enableWildcardCapability');\n\n        var that = this;\n        var screenName = options.screenName || _.uniqueId();\n\n        this.createRoom(options, function(error, createRoomResponse) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (createRoomResponse.status !== 'ok' && createRoomResponse.status !== 'already-exists') {\n                return callback(null, createRoomResponse);\n            }\n\n            var room = createRoomResponse.room;\n            var publishOptions = _.assign({\n                monitor: {\n                    callback: _.bind(monitorSubsciberOrPublisher, that, callback),\n                    options: {conditionCountForNotificationThreshold: 8}\n                },\n                streamInfo: {}\n            }, options);\n\n            if (room.getObservableType().getValue() === roomEnums.types.channel.name) {\n                publishOptions.tags = ['channelId:' + room.getRoomId()].concat(publishOptions.tags || []);\n            } else {\n                publishOptions.tags = ['roomId:' + room.getRoomId()].concat(publishOptions.tags || []);\n            }\n\n            if (options.streamUri) {\n                var remoteOptions = _.assign({connectOptions: []}, publishOptions);\n                var hasRoomConnectOptions = _.find(remoteOptions.connectOptions, function(option) {\n                    return _.startsWith(option, 'room-id');\n                });\n\n                if (!hasRoomConnectOptions) {\n                    remoteOptions.connectOptions = remoteOptions.connectOptions.concat([\n                        'room-id=' + room.getRoomId(),\n                        'member-role=' + options.memberRole,\n                        'member-stream-type=' + options.streamType,\n                        'screen-name=' + screenName\n                    ]);\n                }\n\n                if (options.enableWildcardCapability) {\n                    remoteOptions.connectOptions.concat([\n                        'member-stream-token-type=Wildcard',\n                        'member-stream-token-refresh-interval=' + defaultStreamWildcardTokenRefreshInterval\n                    ]);\n                }\n\n                return that._pcastExpress.publishRemote(remoteOptions, callback);\n            }\n\n            var joinRoomAsAudienceOptions = _.assign({}, options, {\n                role: memberEnums.roles.audience.name,\n                roomId: room.getRoomId()\n            });\n\n            joinRoomWithOptions.call(that, joinRoomAsAudienceOptions, function(error, response) {\n                if (error) {\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok' && response.status !== 'already-in-room') {\n                    return callback(null, createRoomResponse);\n                }\n\n                var activeRoom = response.roomService.getObservableActiveRoom().getValue();\n\n                publishAndUpdateSelf.call(that, publishOptions, activeRoom, callback);\n            });\n        });\n    };\n\n    RoomExpress.prototype.publishScreenToRoom = function publishScreenToRoom(options, callback) {\n        var publishScreenOptions = _.assign({}, options, {mediaConstraints: {screen: true}});\n\n        this.publishToRoom(publishScreenOptions, callback);\n    };\n\n    RoomExpress.prototype.subscribeToMemberStream = function(memberStream, options, callback) {\n        assert.isObject(memberStream, 'memberStream');\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var streamUri = memberStream.getUri();\n        var streamId = memberStream.getPCastStreamId();\n        var streamToken = parseStreamTokenFromStreamUri(streamUri, options.capabilities);\n        var isScreen = _.get(memberStream.getInfo(), ['isScreen'], false);\n\n        if (!streamId) {\n            this._logger.error('Invalid Member Stream. Unable to parse streamId from uri');\n\n            throw new Error('Invalid Member Stream. Unable to parse streamId from uri');\n        }\n\n        var subscribeOptions = _.assign({}, {\n            streamId: streamId,\n            streamToken: streamToken\n        }, options);\n        var disposables = new disposable.DisposableList();\n\n        subscribeToMemberStream.call(this, subscribeOptions, isScreen, function(error, response) {\n            disposables.dispose();\n\n            if (response && response.status === 'ok' && response.mediaStream && response.mediaStream.getStream()) {\n                disposables.add(memberStream.getObservableAudioState().subscribe(function(state) {\n                    var monitor = response.mediaStream.getMonitor();\n                    var tracks = response.mediaStream.getStream().getAudioTracks();\n\n                    if (monitor && tracks.length === 1) {\n                        monitor.setMonitorTrackState(tracks[0], state === trackEnums.states.trackEnabled.name);\n                    }\n                }, {initial: 'notify'}));\n                disposables.add(memberStream.getObservableVideoState().subscribe(function(state) {\n                    var monitor = response.mediaStream.getMonitor();\n                    var tracks = response.mediaStream.getStream().getVideoTracks();\n\n                    if (monitor && tracks.length === 1) {\n                        monitor.setMonitorTrackState(tracks[0], state === trackEnums.states.trackEnabled.name);\n                    }\n                }, {initial: 'notify'}));\n            }\n\n            if (error && parseInt(error.category) === 6) {\n                return callback(error, {status: 'device-insecure'});\n            }\n\n            callback(error, response);\n        });\n    };\n\n    function disposeOfRoomServices() {\n        _.forOwn(this._membersSubscriptions, function(membersSubscription) {\n            membersSubscription.dispose();\n        });\n        _.forOwn(this._roomServicePublishers, function(publishers) {\n            _.forEach(publishers, function(publisher) {\n                publisher.stop();\n            });\n        });\n        _.forOwn(this._roomServices, function(roomService) {\n            roomService.stop();\n        });\n\n        this._membersSubscriptions = {};\n        this._roomServicePublishers = {};\n        this._roomServices = {};\n        this._activeRoomServices = [];\n    }\n\n    function createRoomService(roomId, alias, callback) {\n        var that = this;\n        var uniqueId = _.uniqueId();\n\n        this._pcastExpress.waitForOnline(function(error) {\n            if (error) {\n                return callback(error);\n            }\n\n            var activeRoomService = findActiveRoom.call(that, roomId, alias);\n\n            if (activeRoomService) {\n                return callback(null, {\n                    status: 'ok',\n                    roomService: activeRoomService\n                });\n            }\n\n            that._roomServices[uniqueId] = new RoomService(that._pcastExpress.getPCast());\n\n            var expressRoomService = createExpressRoomService.call(that, that._roomServices[uniqueId], uniqueId);\n\n            callback(null, {\n                status: 'ok',\n                roomService: expressRoomService\n            });\n        });\n    }\n\n    function findActiveRoom(roomId, alias) {\n        return _.find(this._activeRoomServices, function(roomService) {\n            var activeRoom = roomService.getObservableActiveRoom().getValue();\n\n            return activeRoom && (activeRoom.getRoomId() === roomId || activeRoom.getObservableAlias().getValue() === alias);\n        });\n    }\n\n    function createExpressRoomService(roomService, uniqueId) {\n        var that = this;\n        var roomServiceStop = roomService.stop;\n        var roomServiceLeaveRoom = roomService.leaveRoom;\n\n        roomService.stop = function() {\n            roomServiceStop.call(roomService);\n\n            delete that._roomServices[uniqueId];\n        };\n\n        roomService.leaveRoom = function leaveRoom(callback) {\n            var room = roomService.getObservableActiveRoom().getValue();\n\n            roomServiceLeaveRoom.call(roomService, function(error, response) {\n                if (error) {\n                    roomService.stop();\n\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok' && response.status !== 'not-in-room') {\n                    return callback(null, response);\n                }\n\n                if (room && that._membersSubscriptions[room.getRoomId()]) {\n                    that._membersSubscriptions[room.getRoomId()].dispose();\n\n                    delete that._membersSubscriptions[room.getRoomId()];\n                }\n\n                that._logger.info('Successfully disposed of Express Room Service [%s]', room ? room.getRoomId() : 'Uninitialized');\n\n                roomService.stop();\n\n                return callback(null, response);\n            });\n        };\n\n        return roomService;\n    }\n\n    function joinRoomWithOptions(options, joinRoomCallback, membersChangedCallback) {\n        var that = this;\n        var role = options.role;\n        var screenName = options.screenName || _.uniqueId();\n\n        createRoomService.call(that, options.roomId, options.alias, function(error, roomServiceResponse) {\n            if (error) {\n                return joinRoomCallback(error);\n            }\n\n            if (roomServiceResponse.status !== 'ok') {\n                return joinRoomCallback(null, roomServiceResponse);\n            }\n\n            var roomService = roomServiceResponse.roomService;\n            var activeRoomObservable = roomService.getObservableActiveRoom();\n            var activeRoom = activeRoomObservable.getValue();\n            var membersSubscription = null;\n\n            if (!activeRoom) {\n                roomService.start(role, screenName);\n            }\n\n            if (options.streams) {\n                updateSelfStreamsAndRole.call(that, options.streams, options.role, roomService, function(error) {\n                    if (error) {\n                        return joinRoomCallback(error);\n                    }\n                });\n            }\n\n            if (activeRoom && membersChangedCallback) {\n                joinRoomCallback(null, {\n                    status: 'ok',\n                    roomService: roomService\n                });\n\n                return activeRoomObservable.subscribe(function(newRoom) {\n                    if (membersSubscription) {\n                        membersSubscription.dispose();\n                        membersSubscription = null;\n                    }\n\n                    if (!newRoom) {\n                        return;\n                    }\n\n                    membersSubscription = newRoom.getObservableMembers().subscribe(membersChangedCallback, {initial: 'notify'});\n                }, {initial: 'notify'});\n            }\n\n            roomService.enterRoom(options.roomId, options.alias, function(error, roomResponse) {\n                if (error) {\n                    roomService.stop();\n\n                    return joinRoomCallback(error);\n                }\n\n                if (roomResponse.status === 'not-found') {\n                    roomService.stop();\n\n                    return joinRoomCallback(null, {status: 'room-not-found'});\n                }\n\n                if (roomResponse.status !== 'ok' && roomResponse.status !== 'already-in-room') {\n                    roomService.stop();\n\n                    return joinRoomCallback(null, roomResponse);\n                }\n\n                var room = roomResponse.room;\n\n                that._activeRoomServices.push(roomService);\n\n                joinRoomCallback(null, {\n                    status: 'ok',\n                    roomService: roomService\n                });\n\n                if (membersChangedCallback) {\n                    membersSubscription = room.getObservableMembers().subscribe(membersChangedCallback, {initial: 'notify'});\n\n                    return activeRoomObservable.subscribe(function(newRoom) {\n                        if (membersSubscription) {\n                            membersSubscription.dispose();\n                            membersSubscription = null;\n                        }\n\n                        if (!newRoom) {\n                            return;\n                        }\n\n                        membersSubscription = newRoom.getObservableMembers().subscribe(membersChangedCallback, {initial: 'notify'});\n                    });\n                }\n            });\n        });\n    }\n\n    function subscribeToMemberStream(subscribeOptions, isScreen, callback) {\n        var that = this;\n\n        var count = 0;\n        var handleSubscribe = function(error, response) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (response.status !== 'ok' && response.status !== 'streaming-not-ready') {\n                return callback(null, response);\n            }\n\n            count++;\n\n            if (response.status === 'streaming-not-ready' && count < 3) {\n                return setTimeout(response.retry, count * count * 1000);\n            } else if (response.status === 'streaming-not-ready' && count >= 3) {\n                return callback(null, {status: response.status});\n            }\n\n            var subscribeResponse = _.assign({}, response, {status: 'ok'});\n\n            if (count > 1) {\n                subscribeResponse.reason = 'stream-failure-recovered';\n\n                return callback(null, subscribeResponse);\n            }\n\n            callback(null, subscribeResponse);\n        };\n\n        if (isScreen) {\n            return that._pcastExpress.subscribeToScreen(subscribeOptions, handleSubscribe);\n        }\n\n        return that._pcastExpress.subscribe(subscribeOptions, handleSubscribe);\n    }\n\n    function publishAndUpdateSelf(options, room, callback) {\n        var that = this;\n        var publisher;\n        var refreshTokenTimeout;\n\n        var handlePublish = function(error, response) {\n            if (refreshTokenTimeout && publisher) {\n                clearInterval(refreshTokenTimeout);\n            }\n\n            if (error) {\n                return callback(error);\n            }\n\n            if (response.status !== 'ok') {\n                return callback(null, response);\n            }\n\n            addPublisher.call(that, response.publisher, room);\n            removePublisher.call(that, publisher, room);\n\n            publisher = response.publisher;\n\n            var publisherStop = _.bind(publisher.stop, publisher);\n\n            publisher.stop = function() {\n                clearInterval(refreshTokenTimeout);\n                publisherStop.apply(publisher, arguments);\n            };\n\n            if (options.enableWildcardCapability) {\n                refreshTokenTimeout = setInterval(function() {\n                    that._logger.debug('Refresh wildcard viewer stream token for [%s] interval of [%s] has expired. Creating new token.',\n                        publisher.getStreamId(), defaultStreamWildcardTokenRefreshInterval);\n\n                    var activeRoomService = findActiveRoom.call(that, room.getRoomId());\n                    var activeRoom = activeRoomService ? activeRoomService.getObservableActiveRoom().getValue() : room;\n\n                    createViewerStreamTokensAndUpdateSelf.call(that, options, publisher, activeRoom, function ignoreSuccess(error, response) {\n                        if (error || response.status !== 'ok') {\n                            callback(error, response);\n                        }\n                    });\n                }, defaultStreamWildcardTokenRefreshInterval);\n            }\n\n            createViewerStreamTokensAndUpdateSelf.call(that, options, response.publisher, room, callback);\n        };\n\n        if (_.get(options, ['mediaConstraints', 'screen'], false)) {\n            _.set(options, ['streamInfo', 'isScreen'], true);\n\n            return this._pcastExpress.publishScreen(options, handlePublish);\n        }\n\n        this._pcastExpress.publish(options, handlePublish);\n    }\n\n    function addPublisher(publisher, room) {\n        if (!this._roomServicePublishers[room.getRoomId()]) {\n            this._roomServicePublishers[room.getRoomId()] = [];\n        }\n\n        this._roomServicePublishers[room.getRoomId()].push(publisher);\n    }\n\n    function removePublisher(publisher, room) {\n        if (!this._roomServicePublishers[room.getRoomId()] || !publisher) {\n            return;\n        }\n\n        this._roomServicePublishers[room.getRoomId()] = _.filter(this._roomServicePublishers[room.getRoomId()], function(roomPublisher) {\n            return roomPublisher.getStreamId() !== publisher.getStreamId();\n        });\n    }\n\n    function createViewerStreamTokensAndUpdateSelf(options, publisher, room, callback) {\n        var that = this;\n        var streamType = options.streamType;\n        var streamInfo = options.streamInfo;\n        var composeWithAdditionalStreams = options.viewerStreamSelectionStrategy === 'high-availability' && room.getObservableType().getValue() === roomEnums.types.channel.name;\n        var additionalStreamIds = null;\n        var handleJoinRoomCallback = callback;\n        var disposable;\n\n        if (!options.enableWildcardCapability) {\n            var publisherStream = mapStreamToMemberStream(publisher, streamType, streamInfo);\n            var updateSelfOptions = _.assign({}, options, {streams: mapNewPublisherStreamToMemberStreams.call(that, publisherStream, room)});\n\n            return updateSelfAndListenForChanges.call(that, updateSelfOptions, handleJoinRoomCallback, publisher, room);\n        }\n\n        if (composeWithAdditionalStreams) {\n            var membersWithSameContent = MemberSelector.getSimilarMembers(options.screenName, room.getObservableMembers().getValue());\n\n            additionalStreamIds = getValidStreamIds(membersWithSameContent);\n\n            handleJoinRoomCallback = function(error, response) {\n                callback(error, response);\n\n                var roomService = _.get(response, 'roomService', findActiveRoom.call(that, room.getRoomId()));\n\n                if (error || response.status !== 'ok' || disposable || !roomService) {\n                    return;\n                }\n\n                var activeRoom = roomService.getObservableActiveRoom().getValue();\n\n                disposable = activeRoom.getObservableMembers().subscribe(function(members) {\n                    var newMembersWithSameContent = MemberSelector.getSimilarMembers(options.screenName, members);\n                    var newAdditionalStreamIds = getValidStreamIds(newMembersWithSameContent);\n                    var areTheSame = newAdditionalStreamIds.length === additionalStreamIds.length && _.reduce(newAdditionalStreamIds, function(areAllPreviousTheSame, streamId) {\n                        return areAllPreviousTheSame ? _.includes(additionalStreamIds, streamId) : areAllPreviousTheSame;\n                    }, true);\n\n                    if (areTheSame) {\n                        return;\n                    }\n\n                    that._logger.debug('Members with similar content to stream [%s] have changed. Generating new wildcard viewer token', publisher.getStreamId());\n\n                    disposable.dispose();\n                    disposable = null;\n\n                    createViewerStreamTokensAndUpdateSelf.call(that, options, publisher, activeRoom, function ignoreSuccess(error, response) {\n                        if (error || response.status !== 'ok') {\n                            callback(error, response);\n                        }\n                    });\n                });\n            };\n        }\n\n        if (additionalStreamIds && additionalStreamIds.length > 0) {\n            that._logger.debug('Creating [real-time] viewer wildcard stream token for published stream [%s] with [%s] additional streams', publisher.getStreamId(), additionalStreamIds.length);\n        } else {\n            that._logger.debug('Creating [real-time] viewer wildcard stream token for published stream [%s]', publisher.getStreamId());\n        }\n\n        that._pcastExpress.getAdminAPI().createStreamTokenForSubscribing('*', [], publisher.getStreamId(), additionalStreamIds, function(error, createStreamTokenResponse) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (createStreamTokenResponse.status !== 'ok') {\n                return callback(null, createStreamTokenResponse);\n            }\n\n            if (additionalStreamIds && additionalStreamIds.length > 0) {\n                that._logger.debug('Creating [broadcast] viewer wildcard stream token for published stream [%s] with [%s] additional streams', publisher.getStreamId(), additionalStreamIds.length);\n            } else {\n                that._logger.debug('Creating [broadcast] viewer wildcard stream token for published stream [%s]', publisher.getStreamId());\n            }\n\n            that._pcastExpress.getAdminAPI().createStreamTokenForSubscribing('*', ['broadcast'], publisher.getStreamId(), additionalStreamIds, function(error, createStreamTokenBroadcastResponse) {\n                if (error) {\n                    return callback(error);\n                }\n\n                if (createStreamTokenBroadcastResponse.status !== 'ok') {\n                    return callback(null, createStreamTokenBroadcastResponse);\n                }\n\n                if (_.includes(options.capabilities, 'streaming')) {\n                    if (additionalStreamIds && additionalStreamIds.length > 0) {\n                        that._logger.debug('Creating [streaming] viewer wildcard stream token for published stream [%s] with [%s] additional streams', publisher.getStreamId(), additionalStreamIds.length);\n                    } else {\n                        that._logger.debug('Creating [streaming] viewer wildcard stream token for published stream [%s]', publisher.getStreamId());\n                    }\n\n                    return that._pcastExpress.getAdminAPI().createStreamTokenForSubscribing('*', ['streaming'], publisher.getStreamId(), additionalStreamIds, function(error, createStreamTokenWithStreamingResponse) {\n                        if (error) {\n                            return callback(error);\n                        }\n\n                        if (createStreamTokenWithStreamingResponse.status !== 'ok') {\n                            return callback(null, createStreamTokenWithStreamingResponse);\n                        }\n\n                        if (_.includes(options.capabilities, 'drm')) {\n                            if (additionalStreamIds && additionalStreamIds.length > 0) {\n                                that._logger.debug('Creating [drm-open-access] and [drm-hollywood] viewer wildcard stream token for published stream [%s] with [%s] additional streams', publisher.getStreamId(), additionalStreamIds.length);\n                            } else {\n                                that._logger.debug('Creating [drm-open-access] and [drm-hollywood] viewer wildcard stream token for published stream [%s]', publisher.getStreamId());\n                            }\n\n                            return that._pcastExpress.getAdminAPI().createStreamTokenForSubscribing('*', ['streaming', 'drm-open-access'], publisher.getStreamId(), additionalStreamIds, function(error, createStreamTokenWithStreamingDrmOpenAccessResponse) {\n                                if (error) {\n                                    return callback(error);\n                                }\n\n                                if (createStreamTokenWithStreamingDrmOpenAccessResponse.status !== 'ok') {\n                                    return callback(null, createStreamTokenWithStreamingDrmOpenAccessResponse);\n                                }\n\n                                return that._pcastExpress.getAdminAPI().createStreamTokenForSubscribing('*', ['streaming', 'drm-hollywood'], publisher.getStreamId(), additionalStreamIds, function(error, createStreamTokenWithStreamingDrmHollywoodResponse) {\n                                    if (error) {\n                                        return callback(error);\n                                    }\n\n                                    if (createStreamTokenWithStreamingDrmHollywoodResponse.status !== 'ok') {\n                                        return callback(null, createStreamTokenWithStreamingDrmHollywoodResponse);\n                                    }\n\n                                    var drmTokens = [createStreamTokenWithStreamingDrmOpenAccessResponse.streamToken, createStreamTokenWithStreamingDrmHollywoodResponse.streamToken];\n                                    var publisherStream = mapStreamToMemberStream(publisher, streamType, streamInfo, createStreamTokenResponse.streamToken, createStreamTokenBroadcastResponse.streamToken, createStreamTokenWithStreamingResponse.streamToken, drmTokens);\n                                    var updateSelfOptions = _.assign({}, options, {streams: mapNewPublisherStreamToMemberStreams.call(that, publisherStream, room)});\n\n                                    updateSelfAndListenForChanges.call(that, updateSelfOptions, handleJoinRoomCallback, publisher, room);\n                                });\n                            });\n                        }\n\n                        var publisherStream = mapStreamToMemberStream(publisher, streamType, streamInfo, createStreamTokenResponse.streamToken, createStreamTokenBroadcastResponse.streamToken, createStreamTokenWithStreamingResponse.streamToken);\n                        var updateSelfOptions = _.assign({}, options, {streams: mapNewPublisherStreamToMemberStreams.call(that, publisherStream, room)});\n\n                        updateSelfAndListenForChanges.call(that, updateSelfOptions, handleJoinRoomCallback, publisher, room);\n                    });\n                }\n\n                var publisherStream = mapStreamToMemberStream(publisher, streamType, streamInfo, createStreamTokenResponse.streamToken, createStreamTokenBroadcastResponse.streamToken);\n                var updateSelfOptions = _.assign({}, options, {streams: mapNewPublisherStreamToMemberStreams.call(that, publisherStream, room)});\n\n                updateSelfAndListenForChanges.call(that, updateSelfOptions, handleJoinRoomCallback, publisher, room);\n            });\n        });\n    }\n\n    function getValidStreamIds(members) {\n        return _.reduce(members, function(streamIds, member) {\n            var stream = _.get(member.getObservableStreams().getValue(), '0');\n            var streamId = stream ? stream.getPCastStreamId() : '';\n\n            if (streamId) {\n                streamIds.push(streamId);\n            }\n\n            return streamIds;\n        }, []);\n    }\n\n    function updateSelfAndListenForChanges(options, callback, publisher, room) {\n        var that = this;\n        var activeRoomService = findActiveRoom.call(that, room.getRoomId());\n        var responseObject = {\n            publisher: publisher,\n            roomService: activeRoomService\n        };\n        var handleUpdate = function(error, response) {\n            if (error) {\n                return callback(error);\n            }\n\n            if (response.status === 'ok') {\n                activeRoomService = findActiveRoom.call(that, room.getRoomId());\n\n                var selfStreams = activeRoomService.getSelf().getObservableStreams().getValue();\n                var publishedSelfStream = _.find(selfStreams, function(selfStream) {\n                    return selfStream.getPCastStreamId() === publisher.getStreamId();\n                });\n\n                listenForTrackStateChange.call(that, publisher.getStream(), publishedSelfStream);\n            }\n\n            // TODO(DY) Clean up once event based listeners are exposed on the publisher for stop/end\n            if (response.status === 'ok' && !publisher._cleanUpRoomWrapper) {\n                var publisherStop = _.bind(publisher.stop, publisher);\n\n                publisher._cleanUpRoomWrapper = true;\n\n                publisher.stop = function() {\n                    removePublisher.call(that, publisher, room);\n\n                    var streamsAfterStop = mapNewPublisherStreamToMemberStreams.call(that, null, room);\n                    var roomService = findActiveRoom.call(that, room.getRoomId());\n\n                    publisherStop.apply(publisher, arguments);\n\n                    if (!roomService) {\n                        return;\n                    }\n\n                    updateSelfStreamsAndRoleAndEnterRoomIfNecessary.call(that, streamsAfterStop, options.memberRole, roomService, options, function(error) {\n                        if (error) {\n                            return callback(error);\n                        }\n                    });\n                };\n            }\n\n            return callback(null, _.assign({}, responseObject, response));\n        };\n\n        updateSelfStreamsAndRoleAndEnterRoomIfNecessary.call(that, options.streams, options.memberRole, activeRoomService, options, handleUpdate);\n    }\n\n    function mapNewPublisherStreamToMemberStreams(publisherStream, room) {\n        var activeRoomService = findActiveRoom.call(this, room.getRoomId());\n        var defaultStreams = publisherStream ? [publisherStream] : [];\n\n        if (!activeRoomService) {\n            return defaultStreams;\n        }\n\n        var self = activeRoomService.getSelf();\n\n        if (!self) {\n            return defaultStreams;\n        }\n\n        var selfStreams = _.map(self.getObservableStreams().getValue(), function(selfStream) {\n            return selfStream.toJson();\n        });\n        var publishers = this._roomServicePublishers[room.getRoomId()] || [];\n        var publisherIds = _.map(publishers, function(publisher) {\n            return publisher.getStreamId();\n        });\n\n        if (!selfStreams || selfStreams.length === 0) {\n            return defaultStreams;\n        }\n\n        if (publisherStream) {\n            selfStreams = _.filter(selfStreams, function(stream) {\n                var hasSameUri = stream.uri === publisherStream.uri;\n                var pcastStreamId = Stream.parsePCastStreamIdFromStreamUri(stream.uri);\n                var isPCastStream = !!pcastStreamId;\n                var hasSamePCastStreamId = isPCastStream && pcastStreamId === Stream.parsePCastStreamIdFromStreamUri(publisherStream.uri);\n                var hasSameType = stream.type === publisherStream.type;\n\n                return (!hasSameUri && !hasSamePCastStreamId) || !hasSameType;\n            });\n\n            selfStreams.push(publisherStream);\n        }\n\n        return _.filter(selfStreams, function(stream) {\n            return _.includes(publisherIds, Stream.parsePCastStreamIdFromStreamUri(stream.uri) || stream.uri);\n        });\n    }\n\n    function updateSelfStreamsAndRole(streams, role, roomService, callback) {\n        var activeRoom = roomService ? roomService.getObservableActiveRoom().getValue() : null;\n\n        if (streams && roomService) {\n            roomService.getSelf().setStreams(streams);\n        }\n\n        if (role && roomService) {\n            roomService.getSelf().getObservableRole().setValue(role);\n        }\n\n        if (activeRoom && roomService.getSelf()) {\n            return updateSelfWithRetry.call(this, roomService.getSelf(), callback);\n        }\n    }\n\n    function updateSelfStreamsAndRoleAndEnterRoomIfNecessary(streams, role, roomService, options, callback) {\n        var activeRoomService = findActiveRoom.call(this, options.room.roomId, options.room.alias);\n        var activeRoom = roomService ? roomService.getObservableActiveRoom().getValue() : null;\n        var shouldJoinRoom = !activeRoom && !activeRoomService;\n        var that = this;\n\n        if (streams && activeRoomService) {\n            activeRoomService.getSelf().setStreams(streams);\n        }\n\n        if (role && activeRoomService) {\n            activeRoomService.getSelf().getObservableRole().setValue(role);\n        }\n\n        if (activeRoom && activeRoomService.getSelf()) {\n            return updateSelfWithRetry.call(this, activeRoomService.getSelf(), callback);\n        }\n\n        if (shouldJoinRoom) {\n            var joinRoomAsPresenterOptions = _.assign({\n                role: role,\n                alias: _.get(options, ['room', 'alias']),\n                roomId: _.get(options, ['room', 'roomId'])\n            }, options);\n\n            joinRoomWithOptions.call(that, joinRoomAsPresenterOptions, function(error, response) {\n                if (error) {\n                    return callback(error);\n                }\n\n                if (response.status !== 'ok' && response.status !== 'already-in-room') {\n                    return callback(null, response);\n                }\n\n                callback(error, response);\n            });\n        }\n    }\n\n    function updateSelfWithRetry(self, callback) {\n        var updateSelfErrors = 0;\n        var that = this;\n        var maxUpdateSelfRetries = 5;\n\n        try {\n            self.commitChanges(function handleUpdateSelf(error, response) {\n                if (error) {\n                    updateSelfErrors++;\n                }\n\n                if (response && response.status !== 'ok') {\n                    updateSelfErrors++;\n                }\n\n                if (response && response.status === 'ok') {\n                    updateSelfErrors = 0;\n\n                    return !callback || callback(null, response);\n                }\n\n                if (updateSelfErrors >= maxUpdateSelfRetries) {\n                    that._logger.warn('Unable to update self after [%s] attempts.', maxUpdateSelfRetries);\n\n                    return callback(new Error('Unable to update self'));\n                }\n\n                if (updateSelfErrors > 0 && updateSelfErrors < maxUpdateSelfRetries) {\n                    that._logger.warn('Unable to update self after [%s] attempts. Retrying.', updateSelfErrors);\n\n                    return self.commitChanges(handleUpdateSelf);\n                }\n            });\n        } catch (error) {\n            callback(error);\n        }\n    }\n\n    function monitorSubsciberOrPublisher(callback, error, response) {\n        if (error) {\n            return callback(error);\n        }\n\n        if (response.retry) {\n            return response.retry();\n        }\n\n        callback(error, response);\n    }\n\n    function getDefaultRoomDescription(type) {\n        switch(type) {\n        case roomEnums.types.channel.name:\n            return 'Room Channel';\n        case roomEnums.types.moderatedChat.name:\n            return 'Moderated Chat';\n        case roomEnums.types.multiPartyChat.name:\n            return 'Multi Party Chat';\n        case roomEnums.types.townHall.name:\n            return 'Town Hall';\n        case roomEnums.types.directChat.name:\n            return 'Direct Chat';\n        default:\n            throw new Error('Unsupported Room Type');\n        }\n    }\n\n    function parseStreamTokenFromStreamUri(uri, capabilities) {\n        var streamInfo = Stream.getInfoFromStreamUri(uri);\n        // TODO(DY) Remove streamTokenStreaming once apps updated in prod\n        var isStreaming = (streamInfo.streamTokenForLiveStream || streamInfo.streamTokenStreaming) && _.includes(capabilities, 'streaming');\n\n        // Token for both not generated.\n        if (_.includes(capabilities, 'drm-open-access') && _.includes(capabilities, 'drm-hollywood')) {\n            return;\n        }\n\n        if (isStreaming && streamInfo.streamTokenForLiveStreamWithDrmOpenAccess && (_.includes(capabilities, 'drm-open-access') || isAndroid())) {\n            return streamInfo.streamTokenForLiveStreamWithDrmOpenAccess;\n        }\n\n        if (isStreaming && streamInfo.streamTokenForLiveStreamWithDrmHollywood && _.includes(capabilities, 'drm-hollywood')) {\n            return streamInfo.streamTokenForLiveStreamWithDrmHollywood;\n        }\n\n        if (isStreaming && !_.includes(capabilities, 'drm-open-access') && !_.includes(capabilities, 'drm-hollywood')) {\n            return streamInfo.streamTokenForLiveStream || streamInfo.streamTokenStreaming;\n        }\n\n        if (streamInfo.streamTokenForBroadcastStream && _.includes(capabilities, 'broadcast')) {\n            return streamInfo.streamTokenForBroadcastStream;\n        }\n\n        if (!_.includes(capabilities, 'streaming') && !_.includes(capabilities, 'broadcast')) {\n            return streamInfo.streamToken;\n        }\n    }\n\n    function mapStreamToMemberStream(publisher, type, streamInfo, viewerStreamToken, viewerStreamTokenForBroadcastStream, viewerStreamTokenForLiveStream, drmStreamTokens) {\n        var mediaStream = publisher.getStream();\n        var audioTracks = mediaStream ? mediaStream.getAudioTracks() : null;\n        var videoTracks = mediaStream ? mediaStream.getVideoTracks() : null;\n        var audioTrackEnabled = audioTracks.length > 0 && audioTracks[0].enabled;\n        var videoTrackEnabled = videoTracks.length > 0 && videoTracks[0].enabled;\n\n        var publishedStream = {\n            uri: Stream.getPCastPrefix() + publisher.getStreamId(),\n            type: type,\n            audioState: audioTrackEnabled ? trackEnums.states.trackEnabled.name : trackEnums.states.trackDisabled.name,\n            videoState: videoTrackEnabled ? trackEnums.states.trackEnabled.name : trackEnums.states.trackDisabled.name\n        };\n\n        var infoToAppend = _.assign({}, streamInfo, {\n            streamToken: viewerStreamToken,\n            streamTokenForBroadcastStream: viewerStreamTokenForBroadcastStream,\n            streamTokenForLiveStream: viewerStreamTokenForLiveStream\n        });\n\n        if (!viewerStreamToken) {\n            delete infoToAppend.streamToken;\n        }\n\n        if (!viewerStreamTokenForBroadcastStream) {\n            delete infoToAppend.streamTokenForBroadcastStream;\n        }\n\n        if (!viewerStreamTokenForLiveStream) {\n            delete infoToAppend.streamTokenForLiveStream;\n        }\n\n        if (drmStreamTokens) {\n            assert.isArray(drmStreamTokens, 'drmStreamTokens');\n\n            infoToAppend.streamTokenForLiveStreamWithDrmOpenAccess = drmStreamTokens[0];\n            infoToAppend.streamTokenForLiveStreamWithDrmHollywood = drmStreamTokens[1];\n        }\n\n        var queryParamString = _.reduce(infoToAppend, function(queryParamString, currentValue, currentKey) {\n            var currentPrefix = queryParamString ? '&' : '?';\n\n            return queryParamString + currentPrefix + currentKey + '=' + currentValue;\n        }, '');\n\n        if (queryParamString.length > 0) {\n            publishedStream.uri = publishedStream.uri + queryParamString;\n        }\n\n        return publishedStream;\n    }\n\n    function listenForTrackStateChange(stream, memberStream) {\n        var tracks = stream.getTracks();\n        var that = this;\n\n        _.forEach(tracks, function(track) {\n            _.addEventListener(track, 'StateChange', function() {\n                var state = track.enabled ? trackEnums.states.trackEnabled.name : trackEnums.states.trackDisabled.name;\n                var self = getSelfAssociatedWithStream.call(that, memberStream);\n\n                that._logger.info('[%s] [%s] Track state changed to [%s], updating room member stream state [%s]', stream.id, track.id, track.enabled, state);\n\n                if (track.kind === 'video') {\n                    memberStream.getObservableVideoState().setValue(state);\n                } else {\n                    memberStream.getObservableAudioState().setValue(state);\n                }\n\n                if (self) {\n                    updateSelfWithRetry.call(that, self);\n                }\n            });\n        });\n    }\n\n    function getSelfAssociatedWithStream(memberStream) {\n        var roomService = _.find(this._activeRoomServices, function(roomService) {\n            var self = roomService.getSelf();\n            var selfStreams = self ? self.getObservableStreams().getValue() : [];\n\n            return _.find(selfStreams, function(selfStream) {\n                return memberStream === selfStream;\n            });\n        });\n\n        return roomService ? roomService.getSelf() : null;\n    }\n\n    function isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n\n    return RoomExpress;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/express/RoomExpress.js\n// module id = 22\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    '../authentication/AuthenticationService',\n    './Room',\n    './ImmutableRoom',\n    './Member',\n    '../chat/RoomChatService',\n    './room.json',\n    './member.json'\n], function(_, assert, observable, disposable, AuthenticationService, Room, ImmutableRoom, Member, RoomChatService, roomEnums, memberEnums) {\n    'use strict';\n\n    var notInRoomResponse = _.freeze({status: 'not-in-room'});\n    var alreadyInRoomResponse = _.freeze({status: 'already-in-room'});\n    var inAnotherRoomResponse = _.freeze({status: 'in-another-room'});\n\n    function RoomService(pcast) {\n        assert.isObject(pcast, 'pcast');\n        assert.isFunction(pcast.getLogger, 'pcast.getLogger');\n        assert.isFunction(pcast.getProtocol, 'pcast.getProtocol');\n\n        this._pcast = pcast;\n        this._logger = pcast.getLogger();\n        this._protocol = pcast.getProtocol();\n\n        this._self = new observable.Observable(null);\n        this._activeRoom = new observable.Observable(null);\n        this._cachedRoom = new observable.Observable(null);\n        this._roomChatService = null;\n\n        assert.isObject(this._logger, 'this._logger');\n        assert.isObject(this._protocol, 'this._protocol');\n\n        this._authService = new AuthenticationService(this._pcast);\n    }\n\n    RoomService.prototype.start = function start(role, screenName) {\n        if (this._started) {\n            return this._logger.warn('RoomService already started.');\n        }\n\n        assert.isStringNotEmpty(role, 'role');\n        assert.isStringNotEmpty(screenName, 'screenName');\n\n        var myState = memberEnums.states.passive.name;\n        var mySessionId = this._authService.getPCastSessionId();\n        var myScreenName = screenName;\n        var myStreams = [];\n        var myLastUpdate = _.now();\n        var roomService = this;\n\n        var self = new Member(roomService, myState, mySessionId, myScreenName, role, myStreams, myLastUpdate);\n\n        this._self = new observable.Observable(self);\n        this._disposables = new disposable.DisposableList();\n\n        var disposeOfRoomEventHandler = this._protocol.onEvent('chat.RoomEvent', _.bind(onRoomEvent, this));\n\n        this._disposables.add(disposeOfRoomEventHandler);\n\n        setupSubscriptions.call(this);\n\n        this._started = true;\n\n        return self;\n    };\n\n    RoomService.prototype.getRoomInfo = function getRoomInfo(roomId, alias, callback) {\n        if (roomId) {\n            assert.isStringNotEmpty(roomId, 'roomId');\n        } else {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        getRoomInfoRequest.call(this, roomId, alias, callback);\n    };\n\n    RoomService.prototype.createRoom = function createRoom(room, callback) {\n        assert.isObject(room, 'room');\n        assert.isStringNotEmpty(room.name, 'room.name');\n        assert.isStringNotEmpty(room.type, 'room.type');\n        assert.isString(room.description, 'room.description');\n        assert.isFunction(callback, 'callback');\n\n        createRoomRequest.call(this, room, callback);\n    };\n\n    RoomService.prototype.enterRoom = function enterRoom(roomId, alias, callback) {\n        if (roomId) {\n            assert.isStringNotEmpty(roomId, 'roomId');\n        } else {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        enterRoomRequest.call(this, roomId, alias, callback);\n    };\n\n    RoomService.prototype.leaveRoom = function leaveRoom(callback) {\n        var that = this;\n\n        return leaveRoomRequest.call(that, callback);\n    };\n\n    RoomService.prototype.getChatService = function getChatService() {\n        if (!this._roomChatService && this._activeRoom.getValue()) {\n            this._roomChatService = new RoomChatService(this);\n        }\n\n        return this._roomChatService;\n    };\n\n    RoomService.prototype.getSelf = function getSelf() {\n        return this._self.getValue();\n    };\n\n    RoomService.prototype.getObservableActiveRoom = function getObservableActiveRoom() {\n        return this._activeRoom;\n    };\n\n    RoomService.prototype.updateSelf = function updateSelf(callback) {\n        assert.isFunction(callback, 'callback');\n\n        updateMemberRequest.call(this, this.getSelf(), callback);\n    };\n\n    RoomService.prototype.updateMember = function updateMember(member, callback) {\n        assert.isFunction(callback, 'callback');\n        assert.isObject(member, 'member');\n\n        updateMemberRequest.call(this, member, callback);\n    };\n\n    RoomService.prototype.updateRoom = function updateRoom(callback) {\n        assert.isFunction(callback, 'callback');\n\n        updateRoomRequest.call(this, callback);\n    };\n\n    RoomService.prototype.revertRoomChanges = function revertRoomChanges() {\n        var activeRoom = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!activeRoom || !cachedRoom) {\n            return this._logger.warn('Unable to revert changes to room. Not currently in a room.');\n        }\n\n        activeRoom._update(cachedRoom.toJson());\n    };\n\n    RoomService.prototype.revertMemberChanges = function revertMemberChanges(member) {\n        assert.isObject(member, 'member');\n\n        var cachedMember = findMemberInObservableRoom(member.getSessionId(), this._cachedRoom);\n        var activeMember = findMemberInObservableRoom(member.getSessionId(), this._activeRoom);\n\n        if (!cachedMember || !activeMember) {\n            return this._logger.warn('Unable to revert changes to member. Member is currently not in room.');\n        }\n\n        activeMember._update(cachedMember.toJson());\n    };\n\n    RoomService.prototype.isInRoom = function isInRoom() {\n        return !!this._activeRoom.getValue();\n    };\n\n    RoomService.prototype.toString = function toString() {\n        return 'RoomService';\n    };\n\n    RoomService.prototype.stop = function stop() {\n        var activeRoom = this._activeRoom.getValue();\n        var that = this;\n\n        if (activeRoom) {\n            return this.leaveRoom(function(error, response) {\n                if (error) {\n                    that._logger.warn('Failure to stop room service. Unable to leave room', error);\n                }\n\n                if (response && response.status !== 'ok') {\n                    that._logger.warn('Failure to stop room service. Unable to leave room. Status: [%s]', response.status);\n                }\n\n                if (response && response.status === 'ok') {\n                    resetRoomModels.call(that);\n\n                    that._started = false;\n                }\n            });\n        }\n\n        resetRoomModels.call(this);\n\n        that._started = false;\n    };\n\n    function resetRoomModels() {\n        this._self.setValue(null);\n        this._activeRoom.setValue(null);\n        this._cachedRoom.setValue(null);\n        this._roomChatService = null;\n\n        if (this._disposables) {\n            this._disposables.dispose();\n        }\n\n        this._disposables = null;\n    }\n\n    function resetSelf(sessionId) {\n        var self = this._self.getValue().toJson();\n        var roomService = this;\n\n        this._logger.info('Resetting self after sessionId changed to [%s]', sessionId);\n\n        this._self.setValue(new Member(roomService, self.state, sessionId || '', self.screenName, self.role, self.streams, self.lastUpdate));\n    }\n\n    function resetRoom() {\n        var that = this;\n\n        var activeRoom = that._activeRoom.getValue();\n        var selfSessionId = that._self.getValue().getSessionId();\n\n        if (!_.isObject(activeRoom) || !selfSessionId) {\n            return;\n        }\n\n        var roomId = activeRoom.getRoomId();\n        var alias = activeRoom.getObservableAlias().getValue();\n\n        that._logger.info('Leaving and re-entering room after reset of self model');\n\n        leaveRoomRequest.call(that, function() {\n            enterRoomRequest.call(that, roomId, alias, function() {\n                that._logger.info('Room Reset Completed');\n            });\n        });\n    }\n\n    // Handle events\n    function onRoomEvent(event) {\n        assert.isObject(event, 'event');\n        assert.isString(event.roomId, 'event.roomId');\n        assert.isString(event.eventType, 'event.eventType');\n        assert.isArray(event.members, 'event.members');\n\n        _.forEach(event.members, function(member) {\n            assert.isObject(member, 'member');\n        });\n\n        var that = this;\n\n        switch (event.eventType) {\n        case roomEnums.events.memberJoined.name:\n            that._logger.debug('[%s] Member joined [%s]', event.roomId, event.members);\n\n            return onMembersJoinsRoom.call(that, event.roomId, event.members);\n        case roomEnums.events.memberLeft.name:\n            that._logger.debug('[%s] Member left [%s]', event.roomId, event.members);\n\n            return onMembersLeavesRoom.call(that, event.roomId, event.members);\n        case roomEnums.events.memberUpdated.name:\n            that._logger.debug('[%s] Member updated [%s]', event.roomId, event.members);\n\n            return onMembersUpdated.call(that, event.roomId, event.members);\n        case roomEnums.events.roomUpdated.name:\n            that._logger.debug('[%s] Room updated [%s]', event.roomId, event.room);\n\n            return onRoomUpdated.call(that, event.roomId, event.room);\n        case roomEnums.events.roomEnded.name:\n            that._logger.info('[%s] Room ended', event.roomId);\n\n            break;\n        default:\n            that._logger.warn('Unsupported room event [%s]', event.eventType);\n        }\n    }\n\n    function onMembersJoinsRoom(roomId, members) {\n        var room = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!room || room.getRoomId() !== roomId) {\n            return;\n        }\n\n        room._removeMembers(members);\n        room._addMembers(members);\n\n        cachedRoom._removeMembers(members);\n        cachedRoom._addMembers(members);\n\n        var that = this;\n\n        var memberIsSelf = function(member) {\n            return member.sessionId === that.getSelf().getSessionId();\n        };\n\n        var joinedSelf = _.find(members, memberIsSelf);\n\n        if (joinedSelf) {\n            replaceSelfInstanceInRoom.call(that, room);\n\n            room._updateMembers([joinedSelf]);\n        }\n\n        this._logger.info('[%s] Room has now [%d] members', roomId, room.getObservableMembers().getValue().length);\n    }\n\n    function onMembersLeavesRoom(roomId, members) {\n        var room = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!room || room.getRoomId() !== roomId) {\n            return;\n        }\n\n        room._removeMembers(members);\n        cachedRoom._removeMembers(members);\n\n        this._logger.info('[%s] Room has now [%d] members', roomId, room.getObservableMembers().getValue().length);\n    }\n\n    function onMembersUpdated(roomId, members) {\n        var room = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!room || room.getRoomId() !== roomId) {\n            return;\n        }\n\n        // To help reduce conflicts when different properties are sequentially changing\n        var membersWithOnlyPropertiesThatChanged = getDifferencesBetweenCachedRoomMembersAndUpdatedMembers.call(this, members);\n\n        room._updateMembers(membersWithOnlyPropertiesThatChanged);\n        cachedRoom._updateMembers(membersWithOnlyPropertiesThatChanged);\n\n        this._logger.info('[%s] Room has [%d] updated members', roomId, members.length);\n    }\n\n    function onRoomUpdated(roomId, room) {\n        var activeRoom = this._activeRoom.getValue();\n        var cachedRoom = this._cachedRoom.getValue();\n\n        if (!activeRoom || activeRoom.getRoomId() !== roomId) {\n            return;\n        }\n\n        cachedRoom._update(room);\n        activeRoom._update(room);\n    }\n\n    function handlePCastSessionIdChanged(sessionId) {\n        if (this.getSelf() && this.getSelf().getSessionId() === (sessionId || '')) {\n            return;\n        }\n\n        resetSelf.call(this, sessionId);\n    }\n\n    function findMemberInObservableRoom(sessionId, observableRoom) {\n        var room = observableRoom.getValue();\n        var members = room.getObservableMembers().getValue();\n\n        return findMemberInMembers(sessionId, members);\n    }\n\n    function findMemberInMembers(sessionId, members) {\n        return _.find(members, function(member) {\n            return sessionId === member.getSessionId();\n        });\n    }\n\n    function handlePCastStatusChange(status) {\n        this._logger.info('PCast status changed to [%s]', status);\n\n        if (status.toLowerCase() !== 'offline' && this._lastPcastStatus === 'offline') {\n            // ToDo (dcy) disabled until we determine what to do when the client goes back online\n            // resetRoom.call(this);\n        } else if (status.toLowerCase() === 'offline' && this._lastPcastStatus !== 'offline' && !_.isNullOrUndefined(this._lastPcastStatus)) {\n            // ToDo (dcy) disabled until we determine what to do when the client goes offline\n        }\n\n        this._lastPcastStatus = status;\n    }\n\n    function setupSubscriptions() {\n        var selfSubscription = this._self.subscribe(_.bind(resetRoom, this));\n\n        var pcastStatusSubscription = this._authService.getObservableStatus().subscribe(_.bind(handlePCastStatusChange, this));\n        var pcastSessionIdSubscription = this._authService.getObservableSessionId().subscribe(_.bind(handlePCastSessionIdChanged, this));\n\n        this._disposables.add(selfSubscription);\n        this._disposables.add(pcastStatusSubscription);\n        this._disposables.add(pcastSessionIdSubscription);\n    }\n\n    function getDifferencesBetweenCachedRoomMembersAndUpdatedMembers(members) {\n        var that = this;\n\n        return _.map(members, function(member) {\n            var cachedMember = findMemberInObservableRoom(member.sessionId, that._cachedRoom);\n            var placeholderMember = new Member(null, member.state, member.sessionId, member.screenName, member.role, member.streams, member.lastUpdate);\n            var memberWithOnlyDifferentProperties = buildMemberForRequest(placeholderMember, cachedMember);\n\n            memberWithOnlyDifferentProperties.lastUpdate = member.lastUpdate;\n\n            return memberWithOnlyDifferentProperties;\n        });\n    }\n\n    // Requests to server\n    function buildMemberForRequest(member, memberToCompare) {\n        var memberForRequest = findDifferencesInMember(member, memberToCompare);\n\n        memberForRequest.sessionId = member.getSessionId();\n        // Last valid update from server. Handles collisions.\n        memberForRequest.lastUpdate = memberToCompare ? memberToCompare.getLastUpdate() : _.now();\n\n        return memberForRequest;\n    }\n\n    function findDifferencesInMember(member, memberToCompare) {\n        if (!memberToCompare) {\n            return member.toJson();\n        }\n\n        var memberForRequest = {};\n        var newMember = member.toJson();\n        var cachedMember = memberToCompare.toJson();\n        var differences = _.findDifferences(newMember, cachedMember, true);\n\n        _.forEach(differences, function(key) {\n            memberForRequest[key] = newMember[key];\n        });\n\n        return memberForRequest;\n    }\n\n    function getRoomInfoRequest(roomId, alias, callback) {\n        this._authService.assertAuthorized();\n\n        var that = this;\n\n        this._protocol.getRoomInfo(roomId, alias,\n            function handleCreateRoomResponse(error, response) {\n                if (error) {\n                    that._logger.error('Request to get room info failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Request to get room info failed with status [%s]', response.status);\n\n                    return callback(null, result);\n                }\n\n                result.room = _.freeze(createImmutableRoomFromResponse.call(this, response));\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function createRoomRequest(room, callback) {\n        this._authService.assertAuthorized();\n\n        var that = this;\n\n        var validatedRoom = getValidRoomObject(room);\n\n        this._protocol.createRoom(validatedRoom, function handleCreateRoomResponse(error, response) {\n            if (error) {\n                that._logger.error('Creating room failed with error [%s]', error);\n\n                return callback(error, null);\n            }\n\n            var result = {status: response.status};\n\n            if (response.status !== 'ok' && response.status !== 'already-exists') {\n                that._logger.warn('Creating room failed with status [%s]', response.status);\n\n                return callback(null, result);\n            }\n\n            result.room = _.freeze(createImmutableRoomFromResponse.call(this, response));\n\n            callback(null, result);\n        });\n    }\n\n    function getValidRoomObject(room) {\n        var roomService = this;\n\n        return (new Room(roomService, '', room.alias, room.name, room.description, room.type, [], room.bridgeId, room.pin)).toJson();\n    }\n\n    function enterRoomRequest(roomId, alias, callback) {\n        var activeRoom = this._activeRoom.getValue();\n\n        if (activeRoom) {\n            var isSameRoom = roomId === activeRoom.getRoomId() || alias === activeRoom.getObservableAlias().getValue();\n\n            this._logger.info('Unable to join room. Already in [%s]/[%s] room.', activeRoom.getRoomId(), activeRoom.getObservableAlias().getValue());\n\n            return callback(null, _.assign({room: activeRoom}, isSameRoom ? alreadyInRoomResponse : inAnotherRoomResponse));\n        }\n\n        this._authService.assertAuthorized();\n\n        var self = this._self.getValue();\n\n        var screenName = self.getObservableScreenName().getValue();\n        var role = self.getObservableRole().getValue();\n        var selfForRequest = buildMemberForRequest.call(this, self, null);\n        var timestamp = _.now();\n\n        this._logger.info('Enter room [%s]/[%s] with screen name [%s] and role [%s]', roomId, alias, screenName, role);\n\n        var that = this;\n\n        this._protocol.enterRoom(roomId, alias, selfForRequest, timestamp,\n            function handleEnterRoomResponse(error, response) {\n                if (error) {\n                    that._logger.error('Joining of room failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Joining of room failed with status [%s]', response.status);\n\n                    return callback(null, result);\n                }\n\n                result.room = initializeRoomAndBuildCache.call(that, response);\n\n                if (response.status === 'ok' && response.self) {\n                    that.getSelf()._update(response.self);\n                }\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function leaveRoomRequest(callback) {\n        if (!this._activeRoom.getValue()) {\n            this._logger.info('Unable to leave room. Not currently in a room.');\n\n            return callback(null, notInRoomResponse);\n        }\n\n        if (this._isLeavingRoom) {\n            return;\n        }\n\n        this._authService.assertAuthorized();\n\n        var roomId = this._activeRoom.getValue().getRoomId();\n        var timestamp = _.now();\n\n        this._logger.info('Leave room [%s]', roomId);\n\n        var that = this;\n\n        this._isLeavingRoom = true;\n\n        this._protocol.leaveRoom(roomId, timestamp,\n            function handleLeaveRoomResponse(error, response) {\n                that._isLeavingRoom = false;\n\n                if (error) {\n                    that._logger.error('Leaving room failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Leaving room failed with status [%s]', response.status);\n\n                    return callback(null, result);\n                }\n\n                if (that._roomChatService) {\n                    that._roomChatService.stop();\n                }\n\n                that._roomChatService = null;\n\n                that._activeRoom.setValue(null);\n                that._cachedRoom.setValue(null);\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function updateMemberRequest(member, callback) {\n        if (!this._activeRoom.getValue()) {\n            this._logger.warn('Not in a room. Please Enter a room before updating member.');\n\n            return callback(null, notInRoomResponse);\n        }\n\n        this._authService.assertAuthorized();\n\n        var memberIsSelf = member.getSessionId() === this.getSelf().getSessionId();\n        var cachedMember = findMemberInObservableRoom(member.getSessionId(), this._cachedRoom);\n        var memberForRequest = buildMemberForRequest.call(this, member, cachedMember);\n        var timestamp = _.now();\n        var wasSelfAudienceMember = memberIsSelf && !cachedMember;\n        var isSelfBecomingAudience = memberIsSelf && memberForRequest.role === memberEnums.roles.audience.name;\n\n        if (wasSelfAudienceMember) {\n            memberForRequest.lastUpdate = member.getObservableLastUpdate().getValue();\n        }\n\n        this._logger.info('Updating member info for active room');\n\n        var that = this;\n\n        this._protocol.updateMember(memberForRequest, timestamp,\n            function handleUpdateMemberResponse(error, response) {\n                if (error) {\n                    that._logger.error('Update of member failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Update of member failed with status [%s]', response.status);\n                }\n\n                if (response.status === 'ok' && isSelfBecomingAudience) {\n                    that.getSelf().getObservableLastUpdate().setValue(response.lastUpdate);\n                }\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function updateRoomRequest(callback) {\n        if (!this._activeRoom.getValue()) {\n            this._logger.warn('Not in a room. Please Enter a room before updating member.');\n\n            return callback(null, notInRoomResponse);\n        }\n\n        this._authService.assertAuthorized();\n\n        var room = this._activeRoom.getValue();\n        var timestamp = _.now();\n\n        var that = this;\n\n        this._protocol.updateRoom(room.toJson(), timestamp,\n            function handleUpdateMemberResponse(error, response) {\n                if (error) {\n                    that._logger.error('Update of room failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Update of room failed with status [%s]', response.status);\n                }\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function createImmutableRoomFromResponse(response) {\n        var roomInfo = response.room;\n        var members = response.members || [];\n        var roomService = this;\n\n        return new ImmutableRoom(roomService, roomInfo.roomId, roomInfo.alias, roomInfo.name, roomInfo.description, roomInfo.type, members, roomInfo.bridgeId, roomInfo.pin);\n    }\n\n    function createRoomFromResponse(response) {\n        var roomInfo = response.room;\n        var members = response.members;\n        var roomService = this;\n\n        return new Room(roomService, roomInfo.roomId, roomInfo.alias, roomInfo.name, roomInfo.description, roomInfo.type, members, roomInfo.bridgeId, roomInfo.pin);\n    }\n\n    function initializeRoomAndBuildCache(response) {\n        var room = createRoomFromResponse.call(this, response);\n        var cachedRoom = createRoomFromResponse.call(this, response);\n\n        replaceSelfInstanceInRoom.call(this, room);\n\n        this._activeRoom.setValue(room);\n        this._cachedRoom.setValue(cachedRoom);\n\n        return room;\n    }\n\n    function replaceSelfInstanceInRoom(room) {\n        var self = this._self.getValue();\n        var members = room.getObservableMembers().getValue();\n\n        var selfIndex = _.findIndex(members, function(member) {\n            return self.getSessionId() === member.getSessionId();\n        });\n\n        if (!_.isNumber(selfIndex)) {\n            return this._logger.info('Self not in server room model.');\n        }\n\n        self._update(members[selfIndex].toJson());\n\n        members[selfIndex] = self;\n\n        room.getObservableMembers().setValue(members);\n    }\n\n    return RoomService;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/RoomService.js\n// module id = 23\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-rtc',\n    './ResolutionProvider'\n], function(_, assert, RTC, ResolutionProvider) {\n    'use strict';\n\n    function UserMediaResolver(pcast, options) {\n        assert.isObject(pcast, 'pcast');\n\n        if (options) {\n            assert.isObject(options, 'options');\n        }\n\n        if (options && options.screenShare) {\n            assert.isFunction(options.screenShare, 'options.screenShare');\n        }\n\n        this._pcast = pcast;\n        this._logger = pcast.getLogger();\n        this._options = options || {};\n        this._onScreenShare = _.get(options, ['onScreenShare']);\n    }\n\n    UserMediaResolver.prototype.getUserMedia = function getUserMedia(deviceOptions, callback) {\n        assert.isObject(deviceOptions, 'deviceOptions');\n\n        var resolutionProvider = new ResolutionProvider(this._options);\n        var resolution = resolutionProvider.getDefaultResolution();\n        var frameRate = resolutionProvider.getDefaultFrameRate();\n\n        getUserMediaWithOptions.call(this, deviceOptions, resolution, frameRate, resolutionProvider, callback);\n    };\n\n    UserMediaResolver.prototype.getVendorSpecificConstraints = function getVendorSpecificConstraints(deviceOptions, resolution, frameRate) {\n        resolution = resolution || {};\n\n        if (!deviceOptions || (!deviceOptions.audio && ! deviceOptions.video && !deviceOptions.screen && !deviceOptions.screenAudio)) {\n            throw new Error('Invalid device options. Must pass in at least one device option.');\n        }\n\n        if ((RTC.browser === 'Firefox' && RTC.browserVersion > 38)\n            || (RTC.browser === 'Chrome' && RTC.browserVersion > 52 && !deviceOptions.screen && !deviceOptions.screenAudio)\n            || (RTC.browser === 'Safari' && RTC.browserVersion > 10)\n            || (RTC.browser === 'Opera' && RTC.browserVersion > 40)) {\n            return setUserMediaOptionsForNewerBrowser(deviceOptions, resolution, frameRate);\n        }\n\n        if (RTC.browser === 'Edge') {\n            return setUserMediaOptionsForEdge(deviceOptions, resolution, frameRate);\n        }\n\n        return setUserMediaOptionsForOtherBrowsers(deviceOptions, resolution, frameRate);\n    };\n\n    function setUserMediaOptionsForEdge(deviceOptions, resolution, frameRate) {\n        var video = deviceOptions.video;\n        var audio = deviceOptions.audio;\n        var screen = deviceOptions.screen;\n        var width = resolution.width;\n        var height = resolution.height;\n        var constraints = {};\n\n        if (video) {\n            constraints.video = {\n                height: {\n                    min: height,\n                    max: height,\n                    exact: height\n                },\n                width: {\n                    min: width,\n                    max: width,\n                    exact: width\n                },\n                frameRate: frameRate\n            };\n\n            if (video.deviceId) {\n                constraints.video.deviceId = video.deviceId;\n            }\n\n            if (video.facingMode) {\n                constraints.video.facingMode = video.facingMode;\n            }\n\n            if (!width) {\n                delete constraints.video.width;\n            }\n\n            if (!height) {\n                delete constraints.video.height;\n            }\n\n            if (!frameRate) {\n                delete constraints.video.frameRate;\n            }\n\n            if (!width && !height && !frameRate && !video.deviceId && !video.facingMode) {\n                constraints.video = true;\n            }\n        }\n\n        if (audio) {\n            constraints.audio = true;\n\n            if (audio.deviceId) {\n                constraints.audio = {deviceId: audio.deviceId};\n            }\n        }\n\n        if (screen) {\n            constraints.screen = true;\n        }\n\n        return constraints;\n    }\n\n    function setUserMediaOptionsForNewerBrowser(deviceOptions, resolution, frameRate) {\n        var video = deviceOptions.video;\n        var audio = deviceOptions.audio;\n        var screen = deviceOptions.screen;\n        var screenAudio = deviceOptions.screenAudio;\n        var width = resolution.width;\n        var height = resolution.height;\n        var constraints = {};\n\n        if (video) {\n            constraints.video = {\n                height: {\n                    min: height,\n                    ideal: height,\n                    max: height\n                },\n                width: {\n                    min: width,\n                    ideal: width,\n                    max: width\n                },\n                frameRate: {\n                    ideal: frameRate,\n                    max: frameRate\n                }\n            };\n\n            if (video.deviceId) {\n                constraints.video.deviceId = {exact: video.deviceId};\n            }\n\n            if (video.facingMode) {\n                constraints.video.facingMode = video.facingMode;\n            }\n\n            if (!width) {\n                delete constraints.video.width;\n            }\n\n            if (!height) {\n                delete constraints.video.height;\n            }\n\n            if (!frameRate) {\n                delete constraints.video.frameRate;\n            }\n\n            if (!width && !height && !frameRate && !video.deviceId && !video.facingMode) {\n                constraints.video = true;\n            }\n        }\n\n        if (audio) {\n            constraints.audio = {};\n\n            if (audio.deviceId) {\n                constraints.audio.deviceId = {exact: audio.deviceId};\n            }\n\n            if (audio.mediaSource) {\n                constraints.audio.mediaSource = audio.mediaSource;\n            }\n\n            if (audio.mediaSourceId) {\n                constraints.audio.mediaSourceId = audio.mediaSourceId;\n            }\n\n            if (!audio.deviceId && !audio.mediaSource && !audio.mediaSourceId) {\n                constraints.audio = true;\n            }\n        }\n\n        if (screenAudio) {\n            constraints.screenAudio = {};\n\n            if (screenAudio.deviceId) {\n                constraints.screenAudio.deviceId = {exact: screenAudio.deviceId};\n            }\n\n            if (screenAudio.mediaSource) {\n                constraints.screenAudio.mediaSource = screenAudio.mediaSource;\n            }\n\n            if (screenAudio.mediaSourceId) {\n                constraints.screenAudio.mediaSourceId = screenAudio.mediaSourceId;\n            }\n\n            if (!screenAudio.deviceId && !screenAudio.mediaSource && !screenAudio.mediaSourceId) {\n                constraints.screenAudio = true;\n            }\n        }\n\n        if (screen) {\n            constraints.screen = {\n                height: {\n                    min: height,\n                    ideal: height,\n                    max: height\n                },\n                width: {\n                    min: width,\n                    ideal: width,\n                    max: width\n                },\n                frameRate: {\n                    ideal: frameRate,\n                    max: frameRate\n                }\n            };\n\n            if (!width) {\n                delete constraints.screen.width;\n            }\n\n            if (!height) {\n                delete constraints.screen.height;\n            }\n\n            if (!frameRate) {\n                delete constraints.screen.frameRate;\n            }\n\n            if (screen.mediaSource) {\n                constraints.screen.mediaSource = screen.mediaSource;\n            }\n\n            if (!width && !height && !frameRate && !screen.mediaSource) {\n                constraints.screen = true;\n            }\n        }\n\n        if (screen && video) {\n            constraints.screen = true;\n        }\n\n        return constraints;\n    }\n\n    function setUserMediaOptionsForOtherBrowsers(deviceOptions, resolution, frameRate) {\n        var video = deviceOptions.video;\n        var audio = deviceOptions.audio;\n        var screen = deviceOptions.screen;\n        var screenAudio = deviceOptions.screenAudio;\n        var width = resolution.width;\n        var height = resolution.height;\n        var constraints = {};\n\n        if (video) {\n            constraints.video = {\n                mandatory: {\n                    minHeight: height,\n                    maxHeight: height,\n                    minWidth: width,\n                    maxWidth: width,\n                    maxFrameRate: frameRate\n                }\n            };\n\n            if (video.deviceId) {\n                constraints.video.mandatory.sourceId = video.deviceId;\n            }\n\n            if (video.facingMode) {\n                constraints.video.facingMode = video.facingMode;\n            }\n\n            if (video.mediaSource) {\n                constraints.video.mandatory.mediaSource = video.mediaSource;\n            }\n\n            if (video.mediaSourceId) {\n                constraints.video.mandatory.mediaSourceId = video.mediaSourceId;\n            }\n\n            if (!width) {\n                delete constraints.video.mandatory.minWidth;\n                delete constraints.video.mandatory.maxWidth;\n            }\n\n            if (!height) {\n                delete constraints.video.mandatory.minHeight;\n                delete constraints.video.mandatory.maxHeight;\n            }\n\n            if (!frameRate) {\n                delete constraints.video.mandatory.maxFrameRate;\n            }\n\n            if (!width && !height && !frameRate && !video.deviceId && !video.facingMode && !video.mediaSource && !video.mediaSourceId) {\n                constraints.video = true;\n            }\n        }\n\n        if (audio) {\n            constraints.audio = {mandatory: {}};\n\n            if (audio.deviceId) {\n                constraints.audio.mandatory.sourceId = audio.deviceId;\n            }\n\n            if (audio.mediaSource) {\n                constraints.audio.mandatory.mediaSource = audio.mediaSource;\n            }\n\n            if (audio.mediaSourceId) {\n                constraints.audio.mandatory.mediaSourceId = audio.mediaSourceId;\n            }\n\n            if (!audio.deviceId && !audio.mediaSource && !audio.mediaSourceId) {\n                constraints.audio = true;\n            }\n        }\n\n        if (screenAudio) {\n            constraints.screenAudio = {mandatory: {}};\n\n            if (screenAudio.deviceId) {\n                constraints.screenAudio.mandatory.sourceId = screenAudio.deviceId;\n            }\n\n            if (screenAudio.mediaSource) {\n                constraints.screenAudio.mandatory.mediaSource = screenAudio.mediaSource;\n            }\n\n            if (screenAudio.mediaSourceId) {\n                constraints.screenAudio.mandatory.mediaSourceId = screenAudio.mediaSourceId;\n            }\n\n            if (!screenAudio.deviceId && !screenAudio.mediaSource && !screenAudio.mediaSourceId) {\n                constraints.screenAudio = true;\n            }\n        }\n\n        if (screen) {\n            constraints.screen = {\n                mandatory: {\n                    minHeight: height,\n                    maxHeight: height,\n                    minWidth: width,\n                    maxWidth: width,\n                    maxFrameRate: frameRate\n                }\n            };\n\n            if (!width) {\n                delete constraints.screen.mandatory.minWidth;\n                delete constraints.screen.mandatory.maxWidth;\n            }\n\n            if (!height) {\n                delete constraints.screen.mandatory.minHeight;\n                delete constraints.screen.mandatory.maxHeight;\n            }\n\n            if (!frameRate) {\n                delete constraints.screen.mandatory.maxFrameRate;\n            }\n\n            if (screen.mediaSource) {\n                constraints.screen.mandatory.mediaSource = screen.mediaSource;\n            }\n\n            if (screen.mediaSourceId) {\n                constraints.screen.mandatory.mediaSourceId = screen.mediaSourceId;\n            }\n\n            if (!width && !height && !frameRate && !screen.mediaSource) {\n                constraints.screen = true;\n            }\n        }\n\n        if (screen && video) {\n            constraints.screen = true;\n        }\n\n        return constraints;\n    }\n\n    function getUserMediaWithOptions(deviceOptions, resolution, frameRate, resolutionProvider, callback) {\n        var constraints = this.getVendorSpecificConstraints(deviceOptions, resolution || {}, frameRate);\n        var hasVideo = !!constraints.video;\n        var that = this;\n\n        this._pcast.getUserMedia(constraints, function(pcast, status, userMedia, error) {\n            if (status === 'ok') {\n                return callback(null, {\n                    userMedia: userMedia,\n                    options: {\n                        frameRate: hasVideo ? frameRate : null,\n                        resolution: hasVideo ? resolution.height : null,\n                        aspectRatio: hasVideo ? resolution.aspectRatio : null\n                    }\n                });\n            }\n\n            var nextResolution = resolution;\n            var nextFrameRate = frameRate;\n            var constraintName = getConstraintNameFromError(error);\n\n            if (error && (\n                error.name === 'ConstraintNotSatisfiedError'\n                || error.name === 'OverconstrainedError'\n                || error.constructor.name === 'OverconstrainedError'\n                || (error.code === 'unavailable' && RTC.browser === 'Edge'))\n            ) {\n                switch (constraintName.toLowerCase()) {\n                case 'width':\n                case 'height':\n                    if (!resolution || !resolutionProvider.canResolveNextResolution()) {\n                        break;\n                    }\n\n                    that._logger.warn('Unable to get user media with constraint [%s] with height [%s] and width [%s]. Retrying with next closest resolution.',\n                        constraintName, nextResolution.height, nextResolution.width);\n                    nextResolution = resolutionProvider.getNextResolution(resolution.height, resolution.aspectRatio);\n\n                    return getUserMediaWithOptions.call(that, deviceOptions, nextResolution, nextFrameRate, resolutionProvider, callback);\n                case 'framerate':\n                default:\n                    // Always try without frame rate if constraint name not defined\n                    if (frameRate) {\n                        that._logger.warn('Unable to get user media with constraint [%s] and framerate [%s]. Retrying without frame rate constraint.', constraintName, frameRate);\n                        nextFrameRate = null;\n\n                        return getUserMediaWithOptions.call(that, deviceOptions, nextResolution, nextFrameRate, resolutionProvider, callback);\n                    }\n\n                    // Then try to reduce resolution\n                    if (!resolution || !resolutionProvider.canResolveNextResolution()) {\n                        break;\n                    }\n\n                    that._logger.warn('Unable to get user media with constraint [%s] with height [%s] and width [%s]. Retrying with next closest resolution.',\n                        constraintName, nextResolution.height, nextResolution.width);\n                    nextResolution = resolutionProvider.getNextResolution(resolution.height, resolution.aspectRatio);\n\n                    return getUserMediaWithOptions.call(that, deviceOptions, nextResolution, nextFrameRate, resolutionProvider, callback);\n                }\n            }\n\n            that._logger.error('Unable to get user media with status [%s]', status, error);\n\n            return callback(error);\n        }, function(constraints) {\n            var clientConstraints = constraints;\n\n            if (that._onScreenShare && RTC.browser === 'Chrome') {\n                var normalizedConstraints = normalizeChromeScreenShareConstraints(constraints);\n\n                clientConstraints = that._onScreenShare(normalizedConstraints);\n\n                var resolution;\n\n                if (clientConstraints.resolutionHeight && clientConstraints.aspectRatio) {\n                    resolution = {\n                        width: resolutionProvider.calculateWidthByAspectRatio(clientConstraints.resolution, clientConstraints.aspectRatio),\n                        height: clientConstraints.resolutionHeight\n                    };\n                }\n\n                clientConstraints = getChromeScreenShareConstraints.call(that, normalizedConstraints, resolution, clientConstraints.frameRate);\n            }\n\n            return clientConstraints;\n        });\n    }\n\n    function normalizeChromeScreenShareConstraints(constraints) {\n        var chromeVideoSource = _.get(constraints, ['video', 'mandatory', 'chromeMediaSource']);\n        var chromeAudioSource = _.get(constraints, ['audio', 'mandatory', 'chromeMediaSource']);\n        var chromeVideoSourceId = _.get(constraints, ['video', 'mandatory', 'chromeMediaSourceId']);\n        var chromeAudioSourceId = _.get(constraints, ['audio', 'mandatory', 'chromeMediaSourceId']);\n        var normalizedConstraints = {};\n\n        if (chromeVideoSource || chromeAudioSourceId) {\n            _.set(normalizedConstraints, ['screen', 'mediaSource'], chromeVideoSource);\n            _.set(normalizedConstraints, ['screen', 'mediaSourceId'], chromeVideoSourceId);\n        }\n\n        if (chromeAudioSource || chromeAudioSourceId) {\n            _.set(normalizedConstraints, ['screenAudio', 'mediaSource'], chromeAudioSource);\n            _.set(normalizedConstraints, ['screenAudio', 'mediaSourceId'], chromeAudioSourceId);\n        }\n\n        return normalizedConstraints;\n    }\n\n    function getChromeScreenShareConstraints(constraints, resolution, frameRate) {\n        var screenShareConstraints = this.getVendorSpecificConstraints(constraints, resolution, frameRate);\n\n        if (screenShareConstraints.screen) {\n            screenShareConstraints.video = screenShareConstraints.screen;\n            delete screenShareConstraints.screen;\n        }\n\n        if (screenShareConstraints.screenAudio) {\n            screenShareConstraints.audio = screenShareConstraints.screenAudio;\n            delete screenShareConstraints.screenAudio;\n        }\n\n        var chromeVideoSource = _.get(screenShareConstraints, ['video', 'mandatory', 'mediaSource']);\n        var chromeAudioSource = _.get(screenShareConstraints, ['audio', 'mandatory', 'mediaSource']);\n        var chromeVideoSourceId = _.get(screenShareConstraints, ['video', 'mandatory', 'mediaSourceId']);\n        var chromeAudioSourceId = _.get(screenShareConstraints, ['audio', 'mandatory', 'mediaSourceId']);\n\n        if (chromeVideoSource || chromeVideoSourceId) {\n            _.set(screenShareConstraints, ['video', 'mandatory', 'chromeMediaSource'], chromeVideoSource);\n            _.set(screenShareConstraints, ['video', 'mandatory', 'chromeMediaSourceId'], chromeVideoSourceId);\n            delete screenShareConstraints.video.mandatory.mediaSource;\n            delete screenShareConstraints.video.mandatory.mediaSourceId;\n        }\n\n        if (chromeAudioSource || chromeAudioSourceId) {\n            _.set(screenShareConstraints, ['audio', 'mandatory', 'chromeMediaSource'], chromeAudioSource);\n            _.set(screenShareConstraints, ['audio', 'mandatory', 'chromeMediaSourceId'], chromeAudioSourceId);\n            delete screenShareConstraints.audio.mandatory.mediaSource;\n            delete screenShareConstraints.audio.mandatory.mediaSourceId;\n        }\n\n        return screenShareConstraints;\n    }\n\n    function getConstraintNameFromError(error) {\n        if (error.constraintName) {\n            return error.constraintName;\n        }\n\n        if (error.constraint) {\n            return error.constraint;\n        }\n\n        return '';\n    }\n\n    return UserMediaResolver;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/userMedia/UserMediaResolver.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './detectBrowser'\n], function (detectBrowser) {\n    return detectBrowser;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-detect-browser/src/index.js\n// module id = 25\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable'\n], function (_, assert, disposable) {\n    'use strict';\n\n    function Event() {\n        this._listeners = [];\n    }\n\n    Event.prototype.fire = function (args, context) {\n        fireEvent.call(this, args, context);\n    };\n\n    Event.prototype.fireAsync = function (args, context, callback) {\n        fireEvent.call(this, args, context, callback || function () {});\n    };\n\n    Event.prototype.listen = function (listener) {\n        var that = this;\n\n        assert.isFunction(listener, 'listener');\n\n        that._listeners.push(listener);\n\n        return new disposable.Disposable(function () {\n            that._listeners = _.remove(that._listeners, function (item) {\n                return item === listener;\n            });\n        });\n    };\n\n    Event.prototype.size = function () {\n        return this._listeners.length;\n    };\n\n    Event.prototype.dispose = function () {\n        this._listeners = [];\n    };\n\n    Event.prototype.toString = function () {\n        return 'Event|' + this.size();\n    };\n\n    function fireEvent(args, context, asyncCallback) {\n        var that = this;\n\n        if (_.isNullOrUndefined(args)) {\n            args = [];\n        }\n\n        assert.isArray(args, 'args');\n\n        var notifyListeners = function notifyListeners() {\n            _.forEach(that._listeners, function (listener) {\n                listener.apply(context, args);\n            });\n        };\n\n        if (asyncCallback) {\n            setTimeout(function () {\n                notifyListeners();\n                asyncCallback();\n            }, 0);\n        } else {\n            notifyListeners();\n        }\n    }\n\n    return Event;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-event/src/Event.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './networkConnectionMonitor'\n], function (networkConnectionMonitor) {\n    'use strict';\n\n    return networkConnectionMonitor;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-network-connection-monitor/src/index.js\n// module id = 27\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable'\n], function (_, assert, disposable) {\n    'use strict';\n\n    function Observable(initialValue, beforeChange) {\n        this.latestValue = null;\n        this.subscribeCallbacks = {};\n        this.subscriptionTimeout = 100;\n        this.subscriptionCount = 0;\n        this.resetOnChange = false;\n        this.lastChangeTime = 0;\n        this.isPendingChanges = false;\n        this.beforeChange = beforeChange;\n\n        setLatestValue.call(this, initialValue);\n    }\n\n    Observable.prototype.getValue = function getValue() {\n        return clone(this.latestValue);\n    };\n\n    Observable.prototype.setValue = function setValue(value) {\n        if (value !== this.latestValue) {\n            setLatestValue.call(this, value);\n            onSubscribeCallback.call(this, this.subscriptionTimeout);\n        }\n    };\n\n    Observable.prototype.subscribe = function subscribe(callback, options) {\n        assert.isFunction(callback, 'callback');\n\n        if (options) {\n            assert.isObject(options, 'options');\n        }\n\n        var that = this;\n        var key = _.uniqueId();\n        var listenForChanges;\n\n        that.subscribeCallbacks[key] = callback;\n        that.subscriptionCount += 1;\n\n        if (options) {\n            if (options.initial === 'notify') {\n                onSubscribeCallback.call(that, that.subscriptionTimeout, true);\n            }\n\n            if (options.listenForChanges) {\n                listenForChanges = setInterval(function() {\n                    var valueAtInterval = options.listenForChanges.callback();\n\n                    if (valueAtInterval !== that.latestValue) {\n                        that.setValue(valueAtInterval);\n                    }\n                }, options.listenForChanges.timeout);\n            }\n        }\n\n        return new disposable.Disposable(function dispose() {\n            delete that.subscribeCallbacks[key];\n\n            if (listenForChanges) {\n                clearInterval(listenForChanges);\n\n                listenForChanges = null;\n            }\n\n            that.subscriptionCount -= 1;\n        });\n    };\n\n    Observable.prototype.extend = function extend(options) {\n        assert.isObject(options, 'options');\n\n        switch (options.method) {\n        case 'notifyWhenChangesStop':\n            this.subscriptionTimeout = options.timeout;\n            this.resetOnChange = true;\n\n            break;\n        case 'notifyAtFixedRate':\n            this.subscriptionTimeout = options.timeout;\n\n            break;\n        default:\n            break;\n        }\n\n        if (_.isNumber(options.rateLimit)) {\n            this.subscriptionTimeout = options.rateLimit;\n        }\n\n        return this;\n    };\n\n    function clone(value) {\n        if (typeof value === 'undefined' || value === null) {\n            return value;\n        }\n\n        // Necessary for observable array. Subsequent comparison must not be equal in order to trigger updates.\n        if (_.isArray(value)) {\n            return value.slice();\n        }\n\n        return value;\n    }\n\n    function setLatestValue(value) {\n        var valueToSet = value;\n\n        if (this.beforeChange) {\n            valueToSet = this.beforeChange(value);\n        }\n\n        this.latestValue = clone(valueToSet);\n    }\n\n    function onSubscribeCallback(timeoutLength, noTimeout) {\n        this.lastChangeTime = _.now();\n\n        if (!this.isPendingChanges && this.subscriptionCount !== 0) {\n            this.isPendingChanges = true;\n\n            if (noTimeout) {\n                return notifySubscribers.call(this);\n            }\n\n            continueAfterTimeout.call(this, timeoutLength);\n        }\n    }\n\n    function continueAfterTimeout(timeoutLength) {\n        var that = this;\n\n        setTimeout(function() {\n            var timeElapsedSinceLastChange = _.now() - that.lastChangeTime;\n\n            if (that.resetOnChange && timeElapsedSinceLastChange < that.subscriptionTimeout) {\n                continueAfterTimeout.call(that, that.subscriptionTimeout - timeElapsedSinceLastChange);\n            } else {\n                notifySubscribers.call(that);\n            }\n        }, timeoutLength);\n    }\n\n    function notifySubscribers() {\n        try {\n            executeSubscriptionCallbacks.call(this);\n        } finally {\n            this.isPendingChanges = false;\n        }\n    }\n\n    function executeSubscriptionCallbacks() {\n        var that = this;\n\n        _.forOwn(that.subscribeCallbacks, function (callback) {\n            if (_.isFunction(callback)) {\n                callback(that.latestValue);\n            }\n        });\n    }\n\n    return Observable;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-observable/src/Observable.js\n// module id = 28\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. Confidential and Proprietary. All Rights Reserved.\n */\n!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t(require(\"phenix-web-assert\"),require(\"phenix-web-lodash-light\"),require(\"phenix-web-logging\"),require(\"phenix-web-event\"),require(\"phenix-web-disposable\"),require(\"phenix-rtc\"),require(\"phenix-web-http\"),require(\"phenix-web-detect-browser\"),require(\"phenix-web-application-activity-detector\"));else if(\"function\"==typeof define&&define.amd)define([\"phenix-web-assert\",\"phenix-web-lodash-light\",\"phenix-web-logging\",\"phenix-web-event\",\"phenix-web-disposable\",\"phenix-rtc\",\"phenix-web-http\",\"phenix-web-detect-browser\",\"phenix-web-application-activity-detector\"],t);else{var i=\"object\"==typeof exports?t(require(\"phenix-web-assert\"),require(\"phenix-web-lodash-light\"),require(\"phenix-web-logging\"),require(\"phenix-web-event\"),require(\"phenix-web-disposable\"),require(\"phenix-rtc\"),require(\"phenix-web-http\"),require(\"phenix-web-detect-browser\"),require(\"phenix-web-application-activity-detector\")):t(e[\"phenix-web-assert\"],e[\"phenix-web-lodash-light\"],e[\"phenix-web-logging\"],e[\"phenix-web-event\"],e[\"phenix-web-disposable\"],e[\"phenix-rtc\"],e[\"phenix-web-http\"],e[\"phenix-web-detect-browser\"],e[\"phenix-web-application-activity-detector\"]);for(var n in i)(\"object\"==typeof exports?exports:e)[n]=i[n]}}(this,function(e,t,i,n,r,a,s,o,l){return function(e){function t(n){if(i[n])return i[n].exports;var r=i[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var i={};return t.m=e,t.c=i,t.d=function(e,i,n){t.o(e,i)||Object.defineProperty(e,i,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var i=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(i,\"a\",i),i},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=21)}([function(t,i){t.exports=e},function(e,i){e.exports=t},function(e,t){e.exports=i},function(e,t){e.exports=n},function(e,t,i){var n,r;n=[i(1),i(0),i(2),i(3),i(10),i(7),i(22),i(23),i(13),i(14),i(26),i(5)],void 0!==(r=function(e,t,i,n,r,a,s,o,l,u,d,c){\"use strict\";function h(e,r){r&&t.isStringNotEmpty(r,\"playlistUrl\"),this.parsedPlaylist=null,this._logger=e||new i.Logger,this.playlistUrl=r,this.baseUrl=r?r.substring(0,r.lastIndexOf(\"/\")+1):\"\",this._name=r?r.substring(r.lastIndexOf(\"/\"),r.length):\"\",this._trackAddedEvent=new n.Event,this._playlistTracksByMimeType={},this._mimeTypes=[],this._deliveryType=g(this.playlistUrl),this._type=null,this._localToServerTimeOffset=0}function f(i,n){t.isInstanceOf(i,a,\"track\"),n=n||e.noop,t.isFunction(n,\"eventCallback\");var r=i.getMimeType();this._playlistTracksByMimeType[r]||(this._playlistTracksByMimeType[r]=[]),e.includes(this._playlistTracksByMimeType[r],i)||this._playlistTracksByMimeType[r].push(i),e.includes(this._mimeTypes,r)||this._mimeTypes.push(r),this._trackAddedEvent.fireAsync([i],this,n)}function g(e){return/[.]mpd\\??[^\\s]*/i.test(e)?\"Dash\":/[.]m3u8\\??[^\\s]*/i.test(e)?\"Hls\":null}function p(t,i,n){if(this._logger.error(\"Failed to load playlist [%s]. Status code: [%s] (status text: [%s])\",this.playlistUrl,t.code,t.message),i&&i.attempts===y){var r=\"Failed to get playlist with max retries of [\"+y+\" after [\"+e.get(i,[\"stats\",\"totalResponseTimeForAllAttempts\"],0)+\"] ms\";return n(m(c.name.playlistNotFound.name,c.severity.CRITICAL,r))}if(0===t.code){var a=\"Failed to get playlist with timeout after [\"+e.get(i,[\"stats\",\"totalResponseTimeForAllAttempts\"],0)+\"]\";return n(m(c.name.timeout.name,c.severity.RECOVERABLE,a))}return n(m(c.name.error.name,c.severity.CRITICAL,t))}function m(e,t,i){return{category:c.category.PLAYLIST,name:e,severity:t,error:\"Error\"===i.constructor.name?i:new Error(i)}}var y=5,_=0;return h.prototype.toString=function(){return\"Playlist [playlistUrl=\"+this.playlistUrl+\", baseUrl=\"+this.baseUrl+\", mimeTypes=\"+this._mimeTypes+\", trackAddedEvent(size)=\"+this._trackAddedEvent.size()+\", playlistTracks=\"+this.getAllPlaylistTracks()+\"]\"},h.prototype.dispose=function(){e.forOwn(this._playlistTracksByMimeType,function(t){e.forEach(t,function(e){e.dispose()})}),this._playlistTracksByMimeType={},this._trackAddedEvent.dispose()},h.prototype.getPlaylistTracksByMimeType=function(e){return this._playlistTracksByMimeType[e]},h.prototype.fetch=function(t){(function(t){var i=this;r.getWithRetry(i.playlistUrl,{retryOptions:{backoff:1,delay:1e3,maxAttempts:y,additionalRetryErrorCodes:[_]}},function(n,a){if(n)return p.call(i,n,a,t);(function(t,i,n){var a=null,c=[],h=this;switch(h._initTime=e.now(),this._deliveryType){case\"Dash\":a=new l(h._logger,t);var m=new d(h._logger,a.timeSources,i);h.parsedPlaylist=a,h._playbackDurationSinceAvailable=h.parsedPlaylist.publishTime?h.parsedPlaylist.publishTime.getTime()-h.parsedPlaylist.availabilityStartTime.getTime():null,h._suggestedPresentationDelayTotalMillis=e.get(h.parsedPlaylist,[\"suggestedPresentationDelay\",\"totalMillis\"],null),h._totalMediaTimeInMillis=e.get(h.parsedPlaylist,[\"mediaPresentationDuration\",\"totalMillis\"],1/0),h._minBufferTimeTotalMillis=e.get(h.parsedPlaylist,[\"minBufferTime\",\"totalMillis\"],null),h._type=h.parsedPlaylist.type,c=function(t){var i=this;return e.map(t.representations,function(e){return{chunkDuration:e.duration,dataChunkUrlTemplate:e.media,codec:e.mseCodec,bandwidth:e.bandwidth,height:e.height,trackId:e.id,initUrl:e.initialization,mimeType:e.mimeType,totalNumberOfChunks:Math.ceil(i._totalMediaTimeInMillis/e.duration)}})}.call(h,h.parsedPlaylist),e.forEach(c,function(e){f.call(h,new s(h._logger,e))}),m.calculateOffset(function(e){h._localToServerTimeOffset=e,n()});break;case\"Hls\":a=new u(h._logger,h._name,t),h.parsedPlaylist=a,h._playbackDurationSinceAvailable=0,h._minBufferTimeTotalMillis=0,h._suggestedPresentationDelayTotalMillis=0,h._totalMediaTimeInMillis=1/0;var _=0;e.forEach(a.streamVariants,function(e){var t=h.baseUrl+e.name,i=new o(h._logger,{mediaSegmentPlaylistUrl:t,codecs:e.codecs.join(\"|\"),bandwidth:e.bandwidth,trackId:e.name,mimeType:\"application/octet-stream\",height:null});r.getWithRetry(t,{retryOptions:{maxAttempts:y,backoff:1}},function(e,t){if(e)return p.call(h,e,t,n);i.updateMediaSegments(t.data),f.call(h,i),++_===a.streamVariants.length&&(h._type=i.isComplete()?\"static\":\"dynamic\",\"static\"===h._type&&(h._totalMediaTimeInMillis=1e3*i.getPlayableDuration()),n())})});break;default:throw h._logger.error(\"[%s] Unsupported Delivery Type [%s]\",h.playlistUrl,g(h.playlistUrl)),new Error(\"Unsupported Delivery Type \"+g(h.playlistUrl))}}).call(i,a.data,a.stats.successResponseTime,function(){t(n,{raw:a,parsed:i.parsedPlaylist})})})}).call(this,t)},h.prototype.getType=function(){return this._type},h.prototype.getDeliveryType=function(){return this._deliveryType},h.prototype.getPlaylistTracksByBandwidthPerMimeType=function(i,n){t.isObject(n,\"restrictions\");var r=this;return e.map(this._mimeTypes,function(t){var a=function(t,i){return 0===e.keys(i).length?t:e.filter(t,function(t){return function(t,i){var n=t.getHeight()||0,r=t.getBandwidth()||0;return e.reduce(i,function(e,t,i){switch(i){case\"maxHeight\":return n<=t;case\"minHeight\":return n>=t;case\"maxBandwidth\":return r<=t;case\"minBandwidth\":return r>=t;default:throw new Error(\"Unknown restriction \"+i)}},!1)}(t,i)})}(r.getPlaylistTracksByMimeType(t),n),s=e.reduce(a,function(e,t){return t.getBandwidth()>i?e:e&&e.getBandwidth()>t.getBandwidth()?e:t},null)||r.getPlaylistTrackByMimeTypeAndNextHighestBandwidth(0,t);if(s)return s;var o=e.get(e.filter(a,function(e){return!e.getBandwidth()}),\"0\");if(o)return r._logger.debug(\"Unable to get track with bandwidth [%s]. Falling back to track [%s].\",o.getTrackId()),o;r._logger.warn(\"Unable to get track with bandwidth [%s]. No other tracks to fallback on.\")})},h.prototype.getPlaylistTrackByBandwidthAndMimeType=function(t,i){return e.find(this.getPlaylistTracksByBandwidthPerMimeType(t,{}),function(e){return e.getMimeType()===i})},h.prototype.getPlaylistTrackByMimeTypeAndNextHighestBandwidth=function(t,i){return e.reduce(this.getPlaylistTracksByMimeType(i),function(e,i){return i.getBandwidth()<=t?e:e?e.getBandwidth()>i.getBandwidth()?i:e:i},null)},h.prototype.getAllPlaylistTracks=function(){return[].concat.apply([],e.values(this._playlistTracksByMimeType))},h.prototype.getMimeTypes=function(){return this._mimeTypes},h.prototype.getPlaybackDurationSinceAvailable=function(){return e.now()-this._initTime+this._playbackDurationSinceAvailable+this._localToServerTimeOffset},h.prototype.getSuggestedPresentationDelayTotalMillis=function(){return this._suggestedPresentationDelayTotalMillis},h.prototype.getTotalMediaTimeInMillis=function(){return this._totalMediaTimeInMillis},h.prototype.getMinBufferTimeTotalMillis=function(){return this._minBufferTimeTotalMillis},h.prototype.getLocalToServerTimeOffset=function(){return this._localToServerTimeOffset},h.prototype.addEventListener=function(e,i){switch(t.isString(e,\"eventName\"),t.isFunction(i,\"listener\"),e){case\"trackadded\":return this._trackAddedEvent.listen(i);default:throw new Error('Event \"'+e+'\" is unknown.')}},h}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n;void 0!==(n=function(){\"use strict\";return{name:{chunkNotFound:{id:0,name:\"chunk-not-found\"},timeout:{id:1,name:\"timeout\"},error:{id:2,name:\"error\"},playlistNotFound:{id:3,name:\"playlist-not-found\"},progressTimeOut:{id:4,name:\"progress-timeout\"},hlsNativeError:{id:5,name:\"hls-native-error\"}},category:{PLAYLIST:4,STREAMING:5,DRM:6},severity:{RECOVERABLE:1,CRITICAL:2}}}.apply(t,[]))&&(e.exports=n)},function(e,t){e.exports=r},function(e,t,i){var n,r;n=[i(0),i(3),i(2)],void 0!==(r=function(e,t,i){\"use strict\";function n(e,t,i){}return n.prototype.toString=function(){throw new Error(\"Must be implemented\")},n.prototype.dispose=function(){throw new Error(\"Must be implemented\")},n.prototype.getMseCodec=function(){throw new Error(\"Must be implemented\")},n.prototype.getTrackId=function(){throw new Error(\"Must be implemented\")},n.prototype.getChunkDuration=function(){throw new Error(\"Must be implemented\")},n.prototype.getBandwidth=function(){throw new Error(\"Must be implemented\")},n.prototype.getHeight=function(){throw new Error(\"Must be implemented\")},n.prototype.getMimeType=function(){throw new Error(\"Must be implemented\")},n.prototype.getTotalNumberOfChunks=function(){throw new Error(\"Must be implemented\")},n.prototype.getCurrentChunkId=function(){throw new Error(\"Must be implemented\")},n.prototype.setCurrentChunkId=function(e){throw new Error(\"Must be implemented\")},n.prototype.incrementCurrentChunkId=function(){throw new Error(\"Must be implemented\")},n.prototype.addDataChunk=function(e,t,i){throw new Error(\"Must be implemented\")},n.prototype.getChunks=function(){throw new Error(\"Must be implemented\")},n.prototype.addEventListener=function(e,t){throw new Error(\"Must be implemented\")},n}.apply(t,n))&&(e.exports=r)},function(e,t){e.exports=a},function(e,t,i){var n,r;n=[i(1),i(2)],void 0!==(r=function(e,t){\"use strict\";function i(e,i){this._options=i||{},this._logger=e||new t.Logger,this._rateDataPoints={},this._ewmaPeriods=i.ewmaPeriods||null,this._ewmaMultiplier=this._ewmaPeriods?2/(this._ewmaPeriods+1):null}function n(e,t,i,n,r){var a=(i*(e.length-1)+r(t))/e.length;if(n>0)for(;t.added-e[0].added>n;){var s=e.shift();a=(a*(e.length+1)-r(s))/e.length}return a}return i.prototype.toString=function(){var t=this;return\"StatsProvider [rateDataPoints(keys)=\"+e.keys(this._rateDataPoints)+\", rateDataPoints=\"+e.toString(e.map(this._rateDataPoints,function(e,i){return t.getRateAverages(i)}))+\", options=\"+this._options+\"]\"},i.prototype.dispose=function(){delete this._rateDataPoints},i.prototype.addRateDataPoint=function(t,i,r,a){if(!e.isNullOrUndefined(this._rateDataPoints)){this._rateDataPoints[t]||(this._rateDataPoints[t]={tenSecDataPoints:[],thirtySecDataPoints:[],oneMinDataPoints:[],twoMinDataPoints:[],ewmaDataPoints:[],tenSecAverageRate:0,thirtySecAverageRate:0,oneMinAverageRate:0,twoMinAverageRate:0,ewmaRate:0,smaRate:0,tenSecAverageDuration:0,thirtySecAverageDuration:0,oneMinAverageDuration:0,twoMinAverageDuration:0,ewmaDuration:0,smaDuration:0});var s={duration:i,amount:r,durationToSecondsFactor:a,rate:r/(i*a),added:e.now()};(function(e,t){var i=function(e){return e.rate},r=function(e){return e.duration};e.tenSecDataPoints.push(t),e.thirtySecDataPoints.push(t),e.oneMinDataPoints.push(t),e.twoMinDataPoints.push(t),e.tenSecAverageRate=n.call(this,e.tenSecDataPoints,t,e.tenSecAverageRate,1e4,i),e.thirtySecAverageRate=n.call(this,e.thirtySecDataPoints,t,e.thirtySecAverageRate,3e4,i),e.oneMinAverageRate=n.call(this,e.oneMinDataPoints,t,e.oneMinAverageRate,6e4,i),e.twoMinAverageRate=n.call(this,e.twoMinDataPoints,t,e.twoMinAverageRate,12e4,i),e.tenSecAverageDuration=n.call(this,e.tenSecDataPoints,t,e.tenSecAverageDuration,1e4,r),e.thirtySecAverageDuration=n.call(this,e.thirtySecDataPoints,t,e.thirtySecAverageDuration,3e4,r),e.oneMinAverageDuration=n.call(this,e.oneMinDataPoints,t,e.oneMinAverageDuration,6e4,r),e.twoMinAverageDuration=n.call(this,e.twoMinDataPoints,t,e.twoMinAverageDuration,12e4,r),this._ewmaMultiplier&&(e.ewmaDataPoints.push(t),e.smaRate=n.call(this,e.ewmaDataPoints,t,e.smaRate,-1,i),e.smaDuration=n.call(this,e.ewmaDataPoints,t,e.smaDuration,-1,r),e.ewmaDataPoints.length>=this._ewmaPeriods&&(e.ewmaDataPoints.shift(),e.ewmaDataPoints.length===this._ewmaPeriods?(e.ewmaRate=e.smaRate,e.ewmaDuration=e.smaDuration):(e.ewmaRate=this._ewmaMultiplier*(e.smaRate-e.ewmaRate)+e.ewmaRate,e.ewmaDuration=this._ewmaMultiplier*(e.smaDuration-e.ewmaDuration)+e.ewmaDuration)))}).call(this,this._rateDataPoints[t],s)}},i.prototype.getRateAverages=function(t){if(!e.get(this,[\"_rateDataPoints\",t]))return{tenSecAverageRate:0,thirtySecAverageRate:0,oneMinAverageRate:0,twoMinAverageRate:0,ewmaRate:0,tenSecAverageDuration:0,thirtySecAverageDuration:0,oneMinAverageDuration:0,twoMinAverageDuration:0,ewmaDuration:0};var i=this._rateDataPoints[t];return{tenSecAverageRate:i.tenSecAverageRate,thirtySecAverageRate:i.thirtySecAverageRate,oneMinAverageRate:i.oneMinAverageRate,twoMinAverageRate:i.twoMinAverageRate,ewmaRate:i.ewmaRate,tenSecAverageDuration:i.tenSecAverageDuration,thirtySecAverageDuration:i.thirtySecAverageDuration,oneMinAverageDuration:i.oneMinAverageDuration,twoMinAverageDuration:i.twoMinAverageDuration,ewmaDuration:i.ewmaDuration}},i}.apply(t,n))&&(e.exports=r)},function(e,t){e.exports=s},function(e,t){e.exports=o},function(e,t,i){var n;void 0!==(n=function(){\"use strict\";function e(e,t,i,n){}return e.prototype.toString=function(){throw new Error(\"Must be implemented\")},e.prototype.dispose=function(){throw new Error(\"Must be implemented\")},e.prototype.initialize=function(e,t,i,n){throw new Error(\"Must be implemented\")},e.prototype.getStreamDurationBeforeInitialization=function(){throw new Error(\"Must be implemented\")},e.prototype.getLocalToServerTimeOffset=function(){throw new Error(\"Must be implemented\")},e.prototype.setActiveTracks=function(e){throw new Error(\"Must be implemented\")},e.prototype.initializePlaylistTracks=function(e,t,i,n){throw new Error(\"Must be implemented\")},e.prototype.startRequestingDataForActiveTracks=function(){throw new Error(\"Must be implemented\")},e.prototype.isFetchingData=function(){throw new Error(\"Must be implemented\")},e.prototype.seekToChunk=function(e){throw new Error(\"Must be implemented\")},e.prototype.stopRequestingAllData=function(){throw new Error(\"Must be implemented\")},e}.apply(t,[]))&&(e.exports=n)},function(e,t,i){var n,r;n=[i(1),i(0),i(25)],void 0!==(r=function(e,t,i){\"use strict\";function n(n,a){t.isStringNotEmpty(a,\"mpdXml\"),t.isObject(n,\"logger\"),this._mpdXml=a,this._logger=n,this.minBufferTime=0,this.type=null,this.publishTime=null,this.availabilityStartTime=null,this.timeShiftBufferDepth=0,this.suggestedPresentationDelay=0,this.minimumUpdatePeriod=0,this.maxSegmentDuration=0,this.profiles=null,this.moreInfoUrl=null,this.programInfoTitle=null,this.representations=[],function(){t.isStringNotEmpty(this._mpdXml,\"mpdXml\");var n,a=i.parseXml(this._mpdXml),u=a.getElementsByTagName(\"parsererror\");if(u&&u.length>0)throw n=\"Failed to parse MPD Playlist XML: \"+u.item(0).innerText+\" (source xml: \"+this._mpdXml+\")\",this._logger.error(n),new Error(n);if(\"MPD\"!==a.documentElement.nodeName)throw n='Invalid MPD Playlist XML. Does not start with \"MPD\": '+this._mpdXml,this._logger.error(n),new Error(n);this.minBufferTime=r(o(a.documentElement,\"minBufferTime\")),this.type=o(a.documentElement,\"type\"),this.publishTime=s(o(a.documentElement,\"publishTime\")),this.availabilityStartTime=s(o(a.documentElement,\"availabilityStartTime\")),this.timeShiftBufferDepth=r(o(a.documentElement,\"timeShiftBufferDepth\")),this.suggestedPresentationDelay=r(o(a.documentElement,\"suggestedPresentationDelay\")),this.minimumUpdatePeriod=r(o(a.documentElement,\"minimumUpdatePeriod\")),this.maxSegmentDuration=r(o(a.documentElement,\"maxSegmentDuration\")),this.mediaPresentationDuration=r(o(a.documentElement,\"mediaPresentationDuration\")),this.profiles=o(a.documentElement,\"profiles\");var d=a.getElementsByTagName(\"ProgramInformation\"),c=a.getElementsByTagName(\"UTCTiming\");if(d&&d.length>=1){var h=d.item(0);this.programInfoTitle=l(h,\"Title\").childNodes[0].nodeValue,this.moreInfoUrl=o(h,\"moreInformationURL\")}var f=a.getElementsByTagName(\"ContentProtection\");if(this.contentProtectionTags=[],f.length>0)for(var g=0;g<f.length;g++){var p=f.item(g),m=e.reduce(p.attributes,function(e,t){return e[t.name]=t.value,e},{});this.contentProtectionTags.push(m)}for(var y=a.getElementsByTagName(\"Representation\"),_=0;_<y.length;_++){var v=function(e){var t={};if(t.id=o(e,\"id\"),t.mimeType=o(e,\"mimeType\"),t.codecs=o(e,\"codecs\"),t.mseCodec=i.getMSECodec(t.mimeType,t.codecs),t.isAudio=t.mimeType.indexOf(\"audio\")>=0,t.isVideo=t.mimeType.indexOf(\"video\")>=0,!i.isCodecSupported(t.mseCodec))return this._logger.debug(\"MPD representation has unsupported codec. Skipping stream id [%s] (mimeType=[%s], codecs=[%s])\",t.id,t.mimeType,t.codecs),null;var n=o(e,\"bandwidth\");t.bandwidth=n?parseInt(n,10):null;var r=o(e,\"height\");t.height=r?parseInt(r,10):null;var a=l(e,\"SegmentTemplate\");a&&(t.timescale=parseInt(o(a,\"timescale\")),t.media=o(a,\"media\"),t.startNumber=parseInt(o(a,\"startNumber\")),t.duration=parseInt(o(a,\"duration\")),t.initialization=o(a,\"initialization\"));return t}.call(this,y.item(_));v&&this.representations.push(v)}this.timeSources=[];for(var b=0;b<c.length;b++){var k=c.item(b),w=o(k,\"schemeIdUri\"),T=o(k,\"value\"),E=s(T);this.timeSources.push({name:w,value:isNaN(E.getTime())?T:E.getTime()})}}.call(this)}function r(e){if(!e)return null;var t=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/.exec(e);if(t){var i=\"-\"===t[1]?-1:1,n={year:a(t[2],i),month:a(t[3],i),week:a(t[4],i),day:a(t[5],i),hour:a(t[6],i),minute:a(t[7],i),second:a(t[8],i)};return n.totalMillis=1e3*(n.second+60*(n.minute+60*(n.hour+24*n.day))),n}return null}function a(e,t){var i=e&&parseFloat(e.replace(\",\",\".\"));return(isNaN(i)?0:i)*t}function s(e){if(!e)return null;var t=new Date;return t.setTime(Date.parse(e)),t}function o(e,t){var i=e.attributes.getNamedItem(t);return i?i.value:null}function l(e,t){for(var i=0;i<e.childNodes.length;i++){var n=e.childNodes.item(i);if(n.nodeName===t)return n}return null}return n.prototype.toString=function(){return\"Mpd [minBufferTime=\"+this.minBufferTime+\", type=\"+this.type+\", publishTime=\"+this.publishTime+\", availabilityStartTime=\"+this.availabilityStartTime+\", timeShiftBufferDepth=\"+this.timeShiftBufferDepth+\", suggestedPresentationDelay=\"+this.suggestedPresentationDelay+\", minimumUpdatePeriod=\"+this.minimumUpdatePeriod+\", maxSegmentDuration=\"+this.maxSegmentDuration+\", profiles=\"+this.profiles+\", moreInfoUrl=\"+this.moreInfoUrl+\", programInfoTitle=\"+this.programInfoTitle+\", representations=\"+JSON.stringify(this.representations)+\"]\"},n}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0)],void 0!==(r=function(e,t){\"use strict\";function i(i,r,a){t.isStringNotEmpty(a,\"M3u8VariantPlaylistString\"),t.isStringNotEmpty(r,\"name\"),t.isObject(i,\"logger\"),this._rawM3u8VariantPlaylist=a,this._name=r,this._logger=i,function(t){var i=t.match(/[^\\r\\n]+/g),r=this;return e.forEach(i,function(t,a){var s=t.match(/(?!#)EXT.+?(?=[:\\n\\r])/),o=e.get(s,[\"0\"],null),l=t.trim().substring(o?o.length+2:0,t.length);switch(o){case\"EXT-X-STREAM-INF\":r.streamVariants=r.streamVariants||[];var u=[l,i[a+1]];r.streamVariants.push(function(t){var i=(function(t){var i=e.get(t.match(/(?:CODECS=).*?\",/),[\"0\"],\"\"),n=e.get(i.split(\"=\"),[\"1\"],\"\");return n.substring(1,n.length-2)}(t[0])||\"\").split(\",\"),r=(n(t[0],\"FRAME-RATE\")||\"\").trim();return{programId:n(t[0],\"PROGRAM-ID\"),codecs:i,bandwidth:parseInt(n(t[0],\"BANDWIDTH\")),averageBandwidth:parseInt(n(t[0],\"AVERAGE-BANDWIDTH\")),frameRate:parseInt(parseInt(r)||0),name:e.get(t,[\"1\"],\"\").trim()}}(u));break;case\"EXT-X-ALLOW-CACHE\":r.allowCache=\"YES\"===l;break;case\"#EXT-X-COMBINED\":r.combined=\"YES\"===l;break;case\"EXTM3U\":case null:break;default:return r._logger.debug(\"[%s] [Variant] Playlist unsupported key type [%s]\",r._name,o)}}),r}.call(this,this._rawM3u8VariantPlaylist)}function n(t,i){var n=new RegExp(\"(?:\"+i+\"=).*?(?=[,\\n\\r])\"),r=new RegExp(\"(?:\"+i+\"=).*?$\"),a=e.get(t.match(n)||t.match(r),[\"0\"],\"\");return e.get(a.split(\"=\"),[\"1\"])}return i.prototype.toString=function(){return\"M3u8VariantPlaylist[name=\"+this._name+\",numberOfStreamVariants=\"+this.streamVariants.length+\"]\"},i}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0),i(2),i(3),i(16),i(12),i(4),i(7),i(9),i(13),i(5)],void 0!==(r=function(e,t,i,n,r,a,s,o,l,u,d){\"use strict\";function c(a,o,d,c){t.isInstanceOf(o,s,\"playlist\"),t.isInstanceOf(o.parsedPlaylist,u,\"playlist.parsedPlaylist\"),t.isInstanceOf(d,l,\"statsProvider\"),t.isStringNotEmpty(o.playlistUrl,\"playlist.playlistUrl\"),t.isStringNotEmpty(o.baseUrl,\"playlist.baseUrl\"),c&&c.defaultPresentationDelay&&t.isNumber(c.defaultPresentationDelay,\"options.defaultPresentationDelay\"),c&&c.targetBufferSizeInMS&&t.isNumber(c.targetBufferSizeInMS,\"options.targetBufferSizeInMS\"),this._playlist=o,this._baseUrl=this._playlist.baseUrl,this._statsProvider=d,this._logger=a||new i.Logger,this._httpRequestManager=new r(this._logger),this._feederErrorEvent=new n.Event,this._activeTracks=[],this._currentPlaybackTimeInSeconds=0,this._keepFetchingData=!1,this._defaultPresentationDelay=e.get(c,\"defaultPresentationDelay\",w),this._targetBufferSizeInMS=e.get(c,\"targetBufferSizeInMS\",0),this._bufferSize=Math.max(this._playlist.getSuggestedPresentationDelayTotalMillis(),this._playlist.getMinBufferTimeTotalMillis(),this._defaultPresentationDelay),this._streamDurationBeforeInitialization=Math.max(this._playlist.getPlaybackDurationSinceAvailable()-this._bufferSize,0),this._timeOfChunkAvailabilityDelta={average:0,values:[],maxSize:10}}function h(i,n,r,a){r=r||e.noop,t.isArray(i,\"tracks\"),t.isFunction(r,\"done\");var s=0,l=this;e.forEach(i,function(e){t.isInstanceOf(e,o,\"track\"),e.setCurrentChunkId(function(e){var t=Math.max(this._targetBufferSizeInMS?this._targetBufferSizeInMS-e:0,0),i=Math.max(Math.floor((this._streamDurationBeforeInitialization-t)/e),0);return\"static\"===this._playlist.getType()&&(i=0),this._logger.trace(\"Getting chunk index to start: [%s], playbackTimePassed=[%s], duration=[%s]\",i,this._streamDurationBeforeInitialization,e),i}.call(l,e.getChunkDuration())),function(e,t,i){var n=this;(function(e,t){var i=this;i._logger.trace(\"Fetching init chunk for [%s]: [%s], nextChunkId=[%s]\",e.getMseCodec(),i._baseUrl+e.getInitUrl(),e.getCurrentChunkId()),_.call(i,i._baseUrl+e.getInitUrl(),null,500,function(n,r){i._logger.trace(\"DONE Fetching init chunk for [%s]: [%s], nextChunkId=[%s]\",e.getMseCodec(),i._baseUrl+e.getInitUrl(),e.getCurrentChunkId()+(n?\": FAILED: \"+n.code:\": data=\"+r.data.byteLength)),t(n,r.data)})}).call(n,e,function(r,a){if(r){var s=new Error(\"Failed to fetch init chunk of stream for config [%s]\",e);return s.cause=r,n._logger.error(\"[%s] (Cause: [%s])\",s.message,r),i(s)}if(e.setInitChunkData(a),t){var o=Math.min(Math.floor(n._bufferSize/e.getChunkDuration),1);return n._logger.debug(\"Got init chunk: data chunksToFetch=[%s], initBufferSize=[%s], chunkDuration=[%s]\",o,n._bufferSize,e.getChunkDuration()),y.call(n,e,o,null,i)}i()})}.call(l,e,n,function(e){if(e)return a(e);++s===i.length&&r()})})}function f(){var t=this;e.forEach(t._activeTracks,function(e){e.setCurrentChunkId(g.call(t,e.getChunkDuration()))})}function g(e){var t=e/1e3;return Math.floor(this._currentPlaybackTimeInSeconds/t)}function p(t){var i=this,n=i._activeTracks.length;e.forEach(i._activeTracks,function(r,a){!function(r,a){if(e.find(i._activeTracks,function(e){return e.getMimeType()===r.getMimeType()})===r){var s=g.call(i,r.getChunkDuration()),o=s>=r.getTotalNumberOfChunks();if(\"static\"===i._playlist.getType()&&o)return a===n-1&&(i._keepFetchingData=!1),i._logger.info(\"Finished getting chunks for [static] track [%s] [%s]\",r.getTrackId(),r.getMimeType());e.isNullOrUndefined(t)&&\"dynamic\"===i._playlist.getType()&&(t=m.call(i,r)),y.call(i,r,1,t,function(e){if(e&&e.causes&&e.causes.length>0&&\"not yet available\"===e.causes[0].feederReason?i._logger.info(\"Failed to get next chunk (packet not yet available) for [%s]|[%s]. Trying to fetch again in [%s] ms.\",r.getMseCodec(),r.getBandwidth(),k):(e&&i._logger.warn(\"Failed to get next chunk (# of errors=[%s], errors=[%s]). Moving on.\",e.causes?e.causes.length:\"n/a\",e),n--),n<=0&&i._keepFetchingData){if(\"dynamic\"===i._playlist.getType()){var t=m.call(i,r);return i._logger.debug(\"Done fetching chunk with index [%s] for each active track. Waiting for [%s] ms before moving on to next chunk.\",s,t),p.call(i,t)}i._logger.debug(\"Done fetching chunk with index [%s] for each active track. Moving on to next chunk\",s),p.call(i,null)}})}}(r,a)})}function m(e){var t=1e3*this._currentPlaybackTimeInSeconds+2*e.getChunkDuration()-this._playlist.getPlaybackDurationSinceAvailable(),i=Math.max(t,0);return Math.min(e.getChunkDuration(),i)+this._timeOfChunkAvailabilityDelta.average}function y(e,t,i,n){var r=this;(function(e,t,i){var n=this,r=function(e,t){return e.replace(\"$Number%05d$\",(\"00000\"+t).substr(-5))}(n._baseUrl+e.getDataChunkUrlTemplate(),e.getCurrentChunkId()),a=e.getCurrentChunkId();n._logger.trace(\"Fetching data chunk for [%s]: [%s], nextChunkId=[%s]\",e.getMseCodec(),r,e.getCurrentChunkId());var s=e.getMseCodec();_.call(n,r,t,k,function(o,l){if(n._logger.trace(\"DONE Fetching data chunk for [%s] : [%s], nextChunkId=[%s]\",s,r,e.getCurrentChunkId()+(o?\": FAILED: \"+o.code:\": data=\"+l.data.byteLength)),!o){n._statsProvider.addRateDataPoint(s,l.stats.successResponseTime,l.data.byteLength,.001);var u=l.stats.totalResponseTimeForAllAttempts-l.stats.successResponseTime-Math.max(t,0);if(n._timeOfChunkAvailabilityDelta.values.push(u),n._timeOfChunkAvailabilityDelta.average=(n._timeOfChunkAvailabilityDelta.average*(n._timeOfChunkAvailabilityDelta.values.length-1)+u)/n._timeOfChunkAvailabilityDelta.values.length,n._timeOfChunkAvailabilityDelta.values.length>n._timeOfChunkAvailabilityDelta.maxSize){var d=n._timeOfChunkAvailabilityDelta.values.shift();n._timeOfChunkAvailabilityDelta.average=(n._timeOfChunkAvailabilityDelta.average*(n._timeOfChunkAvailabilityDelta.values.length+1)-d)/n._timeOfChunkAvailabilityDelta.values.length}}if(!o&&a===e.getCurrentChunkId())return e.incrementCurrentChunkId(),n._currentPlaybackTimeInSeconds=e.getChunkDuration()*e.getCurrentChunkId()/1e3,e.addDataChunk(l.data,a,function(){i(o)});o?(o.feederReason=404===o.code?\"not yet available\":\"other\",i(o)):i(null,l.data)})}).call(r,e,i,function(a){return a&&r._logger.trace('Failed to fetch data chunk of stream for config [%s]\". Error: [%s]',e,a),!a&&t>1&&y.call(r,e,t,i,n),n(a)})}function _(t,i,n,r){var a=this,s={responseType:\"arraybuffer\",retryOptions:{delay:n,maxAttempts:b},timeout:T};if(e.isNumber(i)&&0!==i)s.delay=i;else if(!e.isNullOrUndefined(i)&&0!==i)throw new Error('\"delay\" must be a positive number greater than or equal to 0 or null or undefined');return this._httpRequestManager.getWithRetry(t,s,function(i,n){if(i){if(a._logger.debug(\"Failed to load next stream data chunk. Status code: [%s] (status text: [%s]) for [%s]\",i.code,i.message,t),n&&n.attempts===b){var s=\"Failed to get chunk with max retries of [\"+b+\" after [\"+e.get(n,[\"stats\",\"totalResponseTimeForAllAttempts\"],0)+\"] ms\";return a._logger.warn(s),a._feederErrorEvent.fire([v(d.name.chunkNotFound.name,d.severity.CRITICAL,s)])}if(0===i.code){var o=\"Failed to get chunk with timeout after [\"+e.get(n,[\"stats\",\"totalResponseTimeForAllAttempts\"],0)+\"] ms with chunk timeout of [\"+T+\"]\";return a._logger.warn(o),a._feederErrorEvent.fire([v(d.name.timeout.name,d.severity.RECOVERABLE,o)])}return a._feederErrorEvent.fire([v(d.name.error.name,d.severity.CRITICAL,i)])}r(i,n)})}function v(e,t,i){return{category:d.category.STREAMING,name:e,severity:t,error:\"Error\"===i.constructor.name?i:new Error(i)}}var b=15,k=150,w=0,T=5e3;return c.prototype=Object.create(a.prototype),c.prototype.constructor=c,c.prototype.toString=function(){return\"MpdPlaylistChunkFeeder [mpdPlaylistUrl=\"+this._playlist.playlistUrl+\", baseUrl=\"+this._baseUrl+\", defaultPresentationDelay=\"+this._defaultPresentationDelay+\"]\"},c.prototype.addEventListener=function(e,i){switch(t.isString(e,\"eventName\"),t.isFunction(i,\"listener\"),e){case\"error\":return this._feederErrorEvent.listen(i);default:throw new Error('Event \"'+e+'\" is unknown.')}},c.prototype.dispose=function(){this.stopRequestingAllData(e.noop),this._httpRequestManager.dispose(),this._playlist.dispose(),this._statsProvider.dispose(),this._feederErrorEvent.dispose(),this._activeTracks=null,this._currentPlaybackTimeInSeconds=0},c.prototype.initialize=function(i,n,r,a,s){var o=this;r=r||e.noop,t.isFunction(r,\"done\"),this._initializedAt=e.now(),h.call(o,i,!0,r,function(e){return o._logger.error(\"Unable to initialize active tracks\",e),s(e)}),h.call(o,n,!1,a,function(e){return o._logger.error(\"Unable to initialize alternate tracks\",e),s(e)})},c.prototype.getStreamDurationBeforeInitialization=function(){return this._streamDurationBeforeInitialization},c.prototype.getLocalToServerTimeOffset=function(){return this._localToServerTimeOffset},c.prototype.setActiveTracks=function(e){this._activeTracks=e},c.prototype.getActiveTracks=function(){return this._activeTracks},c.prototype.startRequestingDataForActiveTracks=function(){if(this.isFetchingData())return this._logger.debug(\"Unable to start requesting data. Feeder is already fetching data.\");this._keepFetchingData=!0,this._logger.debug(\"Starting requesting data at timestamp [%s]\",this._currentPlaybackTimeInSeconds),f.call(this),p.call(this,null)},c.prototype.isFetchingData=function(){return this._keepFetchingData},c.prototype.seekToChunk=function(e){this._currentPlaybackTimeInSeconds=Math.floor(e),this._logger.debug(\"Seeking to timestamp [%s]\",this._currentPlaybackTimeInSeconds),f.call(this)},c.prototype.seekToCurrent=function(){var t=e.reduce(this._activeTracks,function(e,t){return t.getChunkDuration()>e?t.getChunkDuration():e},0),i=(Math.max(this._playlist.getPlaybackDurationSinceAvailable()-this._bufferSize,0)-Math.max(this._targetBufferSizeInMS?this._targetBufferSizeInMS-t:0,t))/1e3;return this._logger.info(\"Seeking to most recent chunk\"),this.seekToChunk(i),i},c.prototype.stopRequestingAllData=function(){this._keepFetchingData&&(this._keepFetchingData=!1,this._logger.debug(\"Pausing requesting of data at timestamp [%s]\",this._currentPlaybackTimeInSeconds),this._httpRequestManager.disposePendingRequests())},c}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0),i(10),i(6)],void 0!==(r=function(e,t,i,n){\"use strict\";function r(e){t.isObject(e,\"logger\"),this._logger=e,this._requestDisposables=new n.DisposableList}return r.prototype.toString=function(){return\"HttpRequestManager\"},r.prototype.disposePendingRequests=function(){this._requestDisposables.dispose(),this._requestDisposables=new n.DisposableList},r.prototype.dispose=function(){this.disposePendingRequests()},r.prototype.getWithRetry=function(n,r,a){t.isStringNotEmpty(n,\"url\"),t.isObject(r,\"options\"),t.isFunction(a,\"callback\");var s=this;r.retryOptions=e.assign({delay:0,backoff:1,maxAttempts:1,additionalRetryErrorCodes:[404,0]},r.retryOptions),this._requestDisposables.add(i.getWithRetry(n,r,function(e,t){return e&&4e3===e.code?s._logger.debug(\"Request handler disposed of before response received for get [%s]\",n):(e&&s._logger.debug(\"Status code: [%s] (status text: [%s]) for get [%s]\",e.code,e.message,n),a(e,t))}))},r}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0),i(2),i(3),i(16),i(12),i(4),i(7),i(9),i(14),i(5)],void 0!==(r=function(e,t,i,n,r,a,s,o,l,u,d){\"use strict\";function c(a,o,l,d){t.isInstanceOf(o,s,\"playlist\"),t.isInstanceOf(o.parsedPlaylist,u,\"playlist.parsedPlaylist\"),t.isStringNotEmpty(o.playlistUrl,\"playlist.playlistUrl\"),t.isStringNotEmpty(o.baseUrl,\"playlist.baseUrl\"),d&&d.targetLatencyInMS&&t.isNumber(d.targetLatencyInMS,\"options.targetLatencyInMS\"),this._playlist=o,this._baseUrl=this._playlist.baseUrl,this._statsProvider=l,this._logger=a||new i.Logger,this._httpRequestManager=new r(this._logger),this._options=d,this._feederErrorEvent=new n.Event,this._activeTracks=[],this._currentPlaybackTimeInSeconds=0,this._keepFetchingData=!1,this._targetLatencyInMS=e.get(d,\"targetLatencyInMS\",0),this._targetBufferSizeInMS=e.get(d,\"targetBufferSizeInMS\",0),this._bufferSize=Math.max(this._playlist.getSuggestedPresentationDelayTotalMillis(),this._playlist.getMinBufferTimeTotalMillis(),this._defaultPresentationDelay),this._streamDurationBeforeInitialization=Math.max(this._playlist.getPlaybackDurationSinceAvailable()-this._bufferSize,0)}function h(){var t=this;e.isNumber(t._mediaSegmentRequestTimeout)||(t._mediaSegmentRequestTimeout=setTimeout(function(){(function(t){var i=this,n=0;e.forEach(this._activeTracks,function(r){var a=r.getMediaSegmentPlaylistUrlInfo(),s=e.assign({version:e.now()},a.queryParameters),o={retryOptions:{delay:v,maxAttempts:b},queryParameters:s};i._httpRequestManager.getWithRetry(a.url,o,function(e,s){if(e)return i._logger.debug(\"Unable to get media segment playlist [%s]\",a.url);s&&r.updateMediaSegments(s),++n===i._activeTracks.length&&t()})},_)}).call(t,function(){e.isNullOrUndefined(t._mediaSegmentRequestTimeout)||(t._mediaSegmentRequestTimeout=null,h.call(t))})},_))}function f(t){var i=this,n=i._activeTracks.length;i._waitingForNextSegment=!1;e.forEach(i._activeTracks,function(r,a){!function(r){e.find(i._activeTracks,function(e){return e.getMimeType()===r.getMimeType()})!==r?i._logger.debug(\"Wrong track type [%s]. Pausing fetching for track [%s]\",r.getMimeType(),r.getTrackId()):r.isLastMediaSegment(i._currentPlaybackTimeInSeconds)?(\"dynamic\"===i._playlist.getType()&&(i._waitingForNextSegment=!0),i._logger.debug(\"No more chunks. Pausing fetching for track [%s]\",r.getMimeType(),r.getTrackId())):g.call(i,r,1,t,function(e){if(e&&e.causes&&e.causes.length>0&&\"not yet available\"===e.causes[0].feederReason?i._logger.info(\"Failed to get next chunk (packet not yet available) for [%s]|[%s]. Trying to fetch again in [%s] ms.\",r.getMseCodec(),r.getBandwidth(),y):(e&&i._logger.warn(\"Failed to get next chunk (# of errors=[%s], errors=[%s]). Moving on.\",e.causes?e.causes.length:\"n/a\",JSON.stringify(e)),n--),n<=0){i._logger.debug(\"Done fetching chunk for timestamp [%s] for each active track. Moving on to next chunk. (keep fetching=[%s])\",i._currentPlaybackTimeInSeconds,i._keepFetchingData);var t=r.isLastMediaSegment(i._currentPlaybackTimeInSeconds);if(\"static\"===i._playlist.getType()&&t)return i._keepFetchingData=!1,i._logger.info(\"Finished getting chunks for [static] track [%s] [%s]\",r.getTrackId(),r.getMimeType());if(t)return i._waitingForNextSegment=!0,i._logger.debug(\"Waiting for new segment on the Segment Playlist for [dynaimic] track [%s] [%s]\",r.getTrackId(),r.getMimeType());i._keepFetchingData&&f.call(i,null)}})}(r)})}function g(t,i,n,r){var a=this;(function(t,i,n){var r=this,a=t.getSegmentByTimestamp(r._currentPlaybackTimeInSeconds),s=r._baseUrl+a.name;r._logger.trace(\"Fetching data chunk for [%s]: [%s], next segment=[%s]\",t.getMseCodec(),s,a.name);var o=t.getMseCodec();(function(t,i,n){var r=this,a={responseType:\"arraybuffer\",retryOptions:{delay:y,maxAttempts:m},timeout:k};if(e.isNumber(i))a.delay=i;else if(!e.isNullOrUndefined(i))throw new Error('\"delay\" must be a number or null or undefined');return this._httpRequestManager.getWithRetry(t,a,function(i,a){if(i){if(r._logger.debug(\"Failed to load next stream data chunk. Status code: [%s] (status text: [%s]) for [%s]\",i.code,i.message,t),a&&a.attempts===m){var s=\"Failed to get chunk with max retries of [\"+m+\" after [\"+e.get(a,[\"stats\",\"totalResponseTimeForAllAttempts\"],0)+\"] ms\";return r._feederErrorEvent.fire([p(d.name.chunkNotFound.name,d.severity.CRITICAL,s)])}if(0===i.code){var o=\"Failed to get chunk with timeout after [\"+e.get(a,[\"stats\",\"totalResponseTimeForAllAttempts\"],0)+\"] ms with chunk timeout of [\"+k+\"]\";return r._feederErrorEvent.fire([p(d.name.timeout.name,d.severity.RECOVERABLE,o)])}return r._feederErrorEvent.fire([p(d.name.error.name,d.severity.CRITICAL,i)])}n(i,a)})}).call(r,s,i,function(e,i){if(r._logger.trace(\"DONE Fetching data chunk for [%s] : [%s], next segment=[%s]\",o,s,a.name+(e?\": FAILED: \"+e.code:\": data=\"+i.data.byteLength)),e||r._statsProvider.addRateDataPoint(o,i.stats.successResponseTime,i.data.byteLength,.001),!e)return r._logger.debug(\"Finished fetching [%s]. Updating timestamp to fetch to [%s]\",a.name,a.timestamp+a.duration),r._currentPlaybackTimeInSeconds=a.timestamp+a.duration,t.addDataChunk(i.data,a.name,function(){n(e)});e?(e.feederReason=404===e.code?\"not yet available\":\"other\",n(e)):n(null,i.data)})}).call(a,t,n,function(e){return e&&a._logger.trace('Failed to fetch data chunk of stream for config [%s]\". Error: [%s]',JSON.stringify(t),e),!e&&i>1&&g.call(a,t,i,n,r),r(e)})}function p(e,t,i){return{category:d.category.STREAMING,name:e,severity:t,error:\"Error\"===i.constructor.name?i:new Error(i)}}var m=15,y=700,_=200,v=10,b=2,k=5e3;return c.prototype=Object.create(a.prototype),c.prototype.constructor=c,c.prototype.toString=function(){return\"M3u8PlaylistChunkFeeder [mpdPlaylistUrl=\"+this._playlist.playlistUrl+\", baseUrl=\"+this._baseUrl+\", defaultPresentationDelay=\"+this._defaultPresentationDelay+\"]\"},c.prototype.addEventListener=function(e,i){switch(t.isString(e,\"eventName\"),t.isFunction(i,\"listener\"),e){case\"error\":return this._feederErrorEvent.listen(i);default:throw new Error('Event \"'+e+'\" is unknown.')}},c.prototype.dispose=function(){this.stopRequestingAllData(e.noop),this._httpRequestManager.dispose(),this._playlist.dispose(),this._statsProvider.dispose(),this._activeTracks=null,this._currentPlaybackTimeInSeconds=0,this._segmentsReadyDisposable&&(this._segmentsReadyDisposable.dispose(),this._segmentsReadyDisposable=null)},c.prototype.initialize=function(i,n,r,a,s){r=r||e.noop,t.isFunction(r,\"done\"),this.setActiveTracks(i),\"dynamic\"===this._playlist.getType()&&h.call(this);var o=this,l=0,u=function(t){g.call(o,t,1,null,function(t){if(t)return s(t);++l===i.length&&(o._initializedAt=e.now(),r(),a())})};e.forEach(i,function(e){return o._segmentsReadyDisposable=e.addEventListener(\"segmentsready\",function(){if(o._waitingForNextSegment){if(o._logger.debug(\"Continuing fetching of track [%s] segments after wait\",e.getTrackId()),!o._initializedAt)return o.seekToCurrent(),u(e);f.call(o,null)}}),e.hasSegments()?u(e):o._waitingForNextSegment=!0})},c.prototype.getStreamDurationBeforeInitialization=function(){return this._streamDurationBeforeInitialization},c.prototype.getLocalToServerTimeOffset=function(){return this._localToServerTimeOffset},c.prototype.setActiveTracks=function(t){this._activeTracks=t;var i=e.map(t,function(e){return e.getTrackId()});this._logger.debug(\"Setting active tracks [%s]\",i)},c.prototype.getActiveTracks=function(){return this._activeTracks},c.prototype.startRequestingDataForActiveTracks=function(){if(this.isFetchingData())return this._logger.debug(\"Unable to start requesting data. Feeder is already fetching data.\");this._keepFetchingData=!0,this._logger.debug(\"Starting requesting data at timestamp [%s]\",this._currentPlaybackTimeInSeconds),\"dynamic\"===this._playlist.getType()&&h.call(this),f.call(this,null)},c.prototype.isFetchingData=function(){return this._keepFetchingData},c.prototype.seekToChunk=function(t){var i=e.get(this._activeTracks,[\"0\"]),n=i.getClosestSegmentNotGreaterThanTimestamp(t),r=e.get(n,[\"timestamp\"]);e.isUndefined(r)?i||(this._currentPlaybackTimeInSeconds=t):this._currentPlaybackTimeInSeconds=Math.floor(n.timestamp),this._logger.debug(\"Seeking to timestamp [%s]\",this._currentPlaybackTimeInSeconds)},c.prototype.seekToCurrent=function(){var t=e.reduce(this._activeTracks,function(t,i){var n=e.get(i.getLastSegment(),[\"duration\"],0);return n>t?n:t},0),i=(e.reduce(this._activeTracks,function(e,t){var i=t.getLastSegment().timestamp;return i<e?i:e},0)-Math.max(this._targetBufferSizeInMS?this._targetBufferSizeInMS-t:0,t))/1e3;return this._logger.info(\"Seeking to most recent chunk\"),this.seekToChunk(i),i},c.prototype.stopRequestingAllData=function(){this._keepFetchingData&&(this._keepFetchingData=!1,this._waitingForNextSegment=!1,this._logger.debug(\"Pausing requesting of data at timestamp [%s]\",this._currentPlaybackTimeInSeconds),this._httpRequestManager.disposePendingRequests(),clearTimeout(this._mediaSegmentRequestTimeout),this._mediaSegmentRequestTimeout=null)},c}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0),i(2),i(3),i(10),i(6),i(11),i(8),i(5)],void 0!==(r=function(e,t,i,n,r,a,s,o,l){\"use strict\";function u(r,s,u,c){t.isObject(s,\"videoElement\");var C=this;this._videoElement=s,this._logger=r||new i.Logger,this._mediaKeys=null,this._licenseRequestRetryTimeout=null,this._certificateRequestRetryTimeout=null,this._disposables=new a.DisposableList;var D=e.bind(S,this);\"Safari\"===p.browser&&(D=e.bind(function(t,i){var n=this;if(i=i||1,!this._fairplayServerCertificate){if(i<=w)return n._logger.debug(\"Attempt [%s] for checking if the certificate have been set\",i),void(n._certificateRequestRetryTimeout=setTimeout(function(){S.call(n,t,i+1)},k));var r=\"Unable to find fairplay certificate after \"+(i-1)+\" attempts\";return n._logger.warn(r),n._drmErrorEvent.fire([g(\"NoCertificate\",l.severity.RECOVERABLE,r)])}this._logger.info(\"Key requested by Webkit browser\"),n._fallbackLicenseUri=function(e){return\"https://\"+function(e){return String.fromCharCode.apply(null,new o.global.Uint16Array(e.buffer))}(e).split(\"skd://\")[1]}(t.initData);var s=\"phenix-fairplay-\"+e.now(),u=function(e,t,i){var n=function(e){for(var t=new o.global.ArrayBuffer(2*e.length),i=new o.global.Uint16Array(t),n=0,r=e.length;n<r;n++)i[n]=e.charCodeAt(n);return i}(t),r=0,a=new o.global.ArrayBuffer(e.byteLength+4+n.byteLength+4+i.byteLength),s=new o.global.DataView(a);new Uint8Array(a,r,e.byteLength).set(e),r+=e.byteLength,s.setUint32(r,n.byteLength,!0),r+=4;var l=new o.global.Uint16Array(a,r,n.length);return l.set(n),r+=l.byteLength,s.setUint32(r,i.byteLength,!0),r+=4,new Uint8Array(a,r,i.byteLength).set(i),new Uint8Array(a,0,a.byteLength)}(t.initData,s,n._fairplayServerCertificate);n._videoElement.webkitKeys||n._videoElement.webkitSetMediaKeys(new o.global.WebKitMediaKeys(v));if(!n._videoElement.webkitKeys)return n._drmErrorEvent.fire([g(\"webkitKeys\",l.severity.RECOVERABLE,new Error(\"Could not create MediaKeys\"))]);var c=n._videoElement.webkitKeys.createSession(\"video/mp4\",u);if(!c)return n._drmErrorEvent.fire([g(\"webkitKeySession\",l.severity.RECOVERABLE,new Error(\"Could not create key session\"))]);var h=e.bind(d,n);c.addEventListener(\"webkitkeymessage\",h,!1),n._disposables.add(new a.Disposable(function(){c.removeEventListener(\"webkitkeymessage\",h,!1)}));var f=function(){n._logger.info(\"Decryption key was added\")};c.addEventListener(\"webkitkeyadded\",f,!1),n._disposables.add(new a.Disposable(function(){c.removeEventListener(\"webkitkeyadded\",f,!1)}));var p=function(e){n._drmErrorEvent.fire([g(\"webkitkeyerror\",l.severity.RECOVERABLE,e)])};c.addEventListener(\"webkitkeyerror\",p,!1),n._disposables.add(new a.Disposable(function(){c.removeEventListener(\"webkitkeyerror\",p,!1)}))},this)),this._videoElement.addEventListener(E,D,!1),this._disposables.add(new a.Disposable(function(){C._videoElement.removeEventListener(E,D,!1)})),this._disposables.add(new a.Disposable(function(){null!==C._licenseRequestRetryTimeout&&o.global.clearTimeout(C._licenseRequestRetryTimeout)})),this._disposables.add(new a.Disposable(function(){null!==C._certificateRequestRetryTimeout&&o.global.clearTimeout(C._certificateRequestRetryTimeout)})),this._defaultMediaKeySystemConfig={initDataTypes:[\"cenc\"],videoCapabilities:[{contentType:'video/mp4; codecs=\"avc1.42c01f\"'}],audioCapabilities:[{contentType:'audio/mp4; codecs=\"mp4a.40.2\"'}],persistentState:\"optional\",distinctiveIdentifier:\"optional\"},this._config={},\"Edge\"===p.browser||\"IE\"===p.browser?this._selectedKeySystem=y:\"Safari\"===p.browser?this._selectedKeySystem=v:this._selectedKeySystem=m,function(t,i){var n=this,r=function(t){return e.keys(e.reduce(t,function(e,t){return e[t]=1,e},{}))}(e.keys(t).concat(e.keys(i)));e.forEach(r,function(r){e.set(n._config,[r],e.assign({},e.get(t,[r],{}),e.get(i,[r],{}))),e.set(n._config,[r,\"mediaKeySystemConfiguration\"],e.assign({},n._defaultMediaKeySystemConfig,e.get(t,[r,\"mediaKeySystemConfiguration\"],{}),e.get(i,[r,\"mediaKeySystemConfiguration\"],{})))})}.call(this,function(t){return e.reduce(t,function(t,i){var n=\"com.phenixp2p.widevine\"===i.schemeIdUri||\"com.phenixrts.widevine\"===i.schemeIdUri?m:i.schemeIdUri===_?y:i.schemeIdUri;return t[n]={licenseServerUrl:\"com.phenixp2p.widevine\"===i.schemeIdUri||\"com.phenixrts.widevine\"===i.schemeIdUri?decodeURIComponent(i.widevineLicenseServerUrl):i.licenseServerUrl,serverCertificateUrl:i.serverCertificateUrl},e.forOwn(i,function(i,r){e.startsWith(r,\"mediaKeySystemConfiguration.\")&&e.set(t[n],r,i)}),t},{})}(u),c||{}),function(){t.isObject(this._config,\"this._config\");var i=this;e.forOwn(this._config,function(e,n){t.isValidType(n,b,n),n===i._selectedKeySystem&&(n!==m&&n!==v||t.isStringNotEmpty(e.serverCertificateUrl,n+\"[serverCertificateUrl]\"),t.isObject(e.mediaKeySystemConfiguration,n+\"[mediaKeySystemConfiguration]\"),t.isArrayOfString(e.mediaKeySystemConfiguration.initDataTypes,n+\"[mediaKeySystemConfiguration][initDataTypes]\"),t.isArray(e.mediaKeySystemConfiguration.videoCapabilities,n+\"[mediaKeySystemConfiguration][videoCapabilities]\"),t.isArray(e.mediaKeySystemConfiguration.audioCapabilities,n+\"[mediaKeySystemConfiguration][audioCapabilities]\"),t.isStringNotEmpty(e.mediaKeySystemConfiguration.persistentState,n+\"[mediaKeySystemConfiguration][persistentState]\"),t.isStringNotEmpty(e.mediaKeySystemConfiguration.distinctiveIdentifier,n+\"[mediaKeySystemConfiguration][distinctiveIdentifier]\"))})}.call(this),this._drmErrorEvent=new n.Event,this._drmTrackEventRestrictionsAvailableEvent=new n.Event,this._disposables.add(this._drmErrorEvent),this._disposables.add(this._drmTrackEventRestrictionsAvailableEvent),T&&function(){var t=this;if(!this._videoElement.mediaKeys){var i=e.get(this._config,[this._selectedKeySystem,\"mediaKeySystemConfiguration\"]);o.global.navigator.requestMediaKeySystemAccess(this._selectedKeySystem,[i]).then(function(i){i.createMediaKeys().catch(function(e){t._drmErrorEvent.fire([g(\"CreateMediaKeys\",l.severity.CRITICAL,e)]),t._logger.error(\"Unable to create MediaKeys\",e)}).then(function(e){return t._mediaKeys=e,t._videoElement.setMediaKeys(e)}).catch(function(e){t._drmErrorEvent.fire([g(\"SetMediaKeys\",l.severity.CRITICAL,e)]),t._logger.error(\"Unable to set MediaKeys\",e)}).then(function(){return new o.global.Promise(function(i){var n=e.get(t._config,[t._selectedKeySystem,\"serverCertificateUrl\"]);if(!n)return t._logger.info(\"Not fetching server certificate because [%s] -> [serverCertificateUrl] is not set\",t._selectedKeySystem),i();h(n,function(e,n){if(e)return t._logger.warn(\"Failed to get service certificate\",e),i();var r=f(n.data);return t._mediaKeys.setServerCertificate(r).then(i).catch(function(e){t._logger.warn(\"Failed to set service certificate\",e)})})})})}).catch(function(e){t._drmErrorEvent.fire([g(\"RequestMediaKeySystemAccess\",l.severity.CRITICAL,e)]),t._logger.error(\"Unable to request MediaKeySystemAccess with error [%s]\",e)})}}.call(this),\"Safari\"===p.browser&&(o.global.WebKitMediaKeys.isTypeSupported(\"com.apple.fps.1_0\",\"video/mp4\")||C._drmErrorEvent.fire([g(\"isTypeSupported\",l.severity.CRITICAL,new Error(\"com.apple.fps.1_0 Key System not supported\"))]),h(e.get(C._config,[C._selectedKeySystem,\"serverCertificateUrl\"]),function(e,t){e&&(C._drmErrorEvent.fire([g(\"getServerCertificateFairplay\",l.severity.CRITICAL,e)]),C._logger.error(\"[Fairplay] Failed to get service certificate\",e)),C._fairplayServerCertificate=f(t.data)}))}function d(t){var i=this,n=t.target;c.call(this,t.message,function(t,r){if(t)return i._drmErrorEvent.fire([g(\"LicenseRetrieval\",l.severity.RECOVERABLE,t)]);try{var a=n.update(r)}catch(e){return i._drmErrorEvent.fire([g(\"KeySessionUpdate\",l.severity.CRITICAL,e)])}e.isFunction(e.get(a,[\"catch\"]))&&a.catch(function(e){i._drmErrorEvent.fire([g(\"KeySessionUpdate\",l.severity.CRITICAL,e)]),i._logger.error(\"Update of keySession with license failed [%s]\",e)})})}function c(i,n){var a,s=this,l=e.get(this._config,[this._selectedKeySystem,\"licenseServerUrl\"],this._fallbackLicenseUri),u={};if(t.isStringNotEmpty(l,\"licenseServerUrl\"),this._selectedKeySystem===y){var d=(new DOMParser).parseFromString(String.fromCharCode.apply(null,new o.global.Uint16Array(i)),\"application/xml\");if(!d.getElementsByTagName(\"Challenge\")[0])return n(new Error(\"[Playready] Cannot find `challenge` in key message\"));a=atob(d.getElementsByTagName(\"Challenge\")[0].childNodes[0].nodeValue);var c=d.getElementsByTagName(\"name\"),h=d.getElementsByTagName(\"value\");if(c.length!==h.length)return n(new Error(\"[Playready] Mismatched header name/value pair in key message\"));u.headers={};for(var f=0;f<c.length;f++){var g=e.get(c,[f,\"childNodes\",0,\"nodeValue\"]),p=e.get(h,[f,\"childNodes\",0,\"nodeValue\"]);g&&p&&(u.headers[g]=p)}u.responseType=\"arraybuffer\"}else u.contentType=\"application/octet-stream\",a=i;r.post(l,a,u,function(e,t){if(e)return s._logger.error(\"Failed to get license with [%s] [%s]\",e,t),n(e);if(s._selectedKeySystem===y)return n(null,t.data);var i=t.data,r=null,a=null;try{s._logger.debug(\"Attempting to unwrap license response\"),r=(i=JSON.parse(i)).license||i.ckc,i.trackRestrictions&&s._drmTrackEventRestrictionsAvailableEvent.fire([i.trackRestrictions])}catch(e){if(!(e instanceof SyntaxError))return s._logger.error(\"Unexpected error [%s]\",e),n(e);s._logger.debug(\"Unwrapping of license failed. Assuming that license response is already unwrapped\"),r=i}\"<ckc>\"===r.substr(0,5)&&\"</ckc>\"===r.substr(-6)&&(r=r.slice(5,-6));try{a=function(e){for(var t=o.global.atob(e),i=new Uint8Array(t.length),n=0;n<t.length;++n)i[n]=t.charCodeAt(n);return i}(r)}catch(e){s._logger.error(\"Failed to convert base64 license string [%s] to binary\",r),n(e)}n(null,a)})}function h(e,t){r.get(e,{mimeType:\"text/plain; charset=x-user-defined\"},t)}function f(e){for(var t=e.length,i=new o.global.Uint8Array(t),n=0;n<t;n++)i[n]=e.charCodeAt(n);return i}function g(e,t,i){return{category:l.category.DRM,name:e,severity:t,error:\"Error\"===i.constructor.name?i:new Error(i)}}var p=new s(o.global.navigator.userAgent).detect(),m=\"com.widevine.alpha\",y=\"com.microsoft.playready\",_=\"urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95\",v=\"com.apple.fps.1_0\",b=e.freeze([{id:1,name:\"org.w3.clearkey\"},{id:2,name:m},{id:3,name:y},{id:4,name:_},{id:5,name:v}]),k=200,w=20,T=!!o.global.navigator.requestMediaKeySystemAccess,E=\"encrypted\";T||\"Edge\"!==p.browser&&\"IE\"!==p.browser||(E=\"msneedkey\"),\"Safari\"===p.browser&&(E=\"webkitneedkey\"),u.isSupported=function(){return\"IE\"===p.browser&&11===p.version||(\"Safari\"===p.browser?!(e.isNullOrUndefined(o.global.WebKitMediaKeys)||e.isNullOrUndefined(o.global.Uint16Array)||e.isNullOrUndefined(o.global.Uint8Array)||e.isNullOrUndefined(o.global.ArrayBuffer)||e.isNullOrUndefined(o.global.DataView)):!(e.isNullOrUndefined(o.global.navigator.requestMediaKeySystemAccess)||e.isNullOrUndefined(o.global.Promise)||e.isNullOrUndefined(o.global.Uint8Array)||e.isNullOrUndefined(o.global.atob)))},u.prototype.addEventListener=function(e,i){switch(t.isString(e,\"eventName\"),t.isFunction(i,\"listener\"),e){case\"trackRestrictionsAvailable\":return this._drmTrackEventRestrictionsAvailableEvent.listen(i);case\"error\":return this._drmErrorEvent.listen(i);default:throw new Error('Event \"'+e+'\" is unknown.')}},u.prototype.toString=function(){return\"EncryptedMediaHandler [config=\"+JSON.stringify(this._config)+\"]\"},u.prototype.dispose=function(){this._disposables.dispose(),delete this._mediaKeys};var S=function(t,i){var n=this;if(i=i||1,!T)try{this._videoElement.msSetMediaKeys(new o.global.MSMediaKeys(this._selectedKeySystem))}catch(r){return n._drmErrorEvent.fire([g(\"RequestMediaKeySystemAccess\",l.severity.CRITICAL,new Error('Unable to create MediaKeys (\"'+this._selectedKeySystem+'\"). Error: '+r.message))])}if(!this._mediaKeys&&!n._videoElement.msKeys){if(i<=20)return n._logger.debug(\"Attempt [%s] for checking if the media keys have been set\",i),void(n._licenseRequestRetryTimeout=setTimeout(function(){S.call(n,t,i+1)},k));var r=\"Unable to find media keys after \"+(i-1)+\" attempts\";return n._logger.warn(r),n._drmErrorEvent.fire([g(\"NoMediaKeys\",l.severity.RECOVERABLE,r)])}if(n._videoElement.msKeys){var s=n._videoElement.msKeys.createSession(\"video/mp4\",t.initData);s||n._drmErrorEvent.fire([g(\"NoKeySession\",l.severity.CRITICAL,new Error(\"Could not create key session\"))]);var u=function(e){c.call(n,e.message.buffer,function(e,t){if(e)return n._drmErrorEvent.fire([g(\"getLicense\",l.severity.RECOVERABLE,e)]);s.update(new Uint8Array(t))})};s.addEventListener(\"mskeymessage\",u,!1),n._disposables.add(new a.Disposable(function(){s.removeEventListener(\"mskeymessage\",u,!1)}));var h=function(){n._drmErrorEvent.fire([g(\"MicrosoftKeyError\",l.severity.CRITICAL,new Error(\"Unexpected `keyerror` event from key session. Code: \"+s.error.code+\", systemCode: \"+s.error.systemCode))])};return s.addEventListener(\"mskeyerror\",h,!1),void n._disposables.add(new a.Disposable(function(){s.removeEventListener(\"mskeyerror\",h,!1)}))}var f=n._mediaKeys.createSession(),p=e.bind(d,n);return f.addEventListener(\"message\",p,!1),n._disposables.add(new a.Disposable(function(){f.removeEventListener(\"message\",p,!1)})),f.generateRequest(t.initDataType,t.initData).then(function(){n._logger.info(\"passing the media data to CDM\")}).catch(function(e){n._drmErrorEvent.fire([g(\"InitKeySessionFailure\",l.severity.CRITICAL,e)]),n._logger.error(\"Unable to create or initialize key session [%s]\",e)})};return u}.apply(t,n))&&(e.exports=r)},function(e,t){e.exports=l},function(e,t,i){var n,r;n=[i(1),i(0),i(2),i(6),i(19),i(4),i(9)],void 0!==(r=function(e,t,i,n,r,a,s){\"use strict\";function o(o,h,m,y){t.isInstanceOf(h,a,\"playlist\"),t.isNotUndefined(m,\"webPlayer\"),t.isInstanceOf(y,s,\"statsProvider\"),this._playlist=h,this._webPlayer=m,this._statsProvider=y,this._logger=o||new i.Logger,this._bandwidthChangeDetails={nextSwitchCheckTime:e.now()+5e3,oldBandwidth:-1},this._disposables=new n.DisposableList,this._webPlayer.addEventListener(\"started\",e.bind(function(){var t=this;this._bandwidthLimits=e.reduce(this._playlist.getMimeTypes(),function(i,n){var r=t._playlist.getPlaylistTracksByMimeType(n)||[],a=e.filter(r,function(t){return e.isNumber(t.getBandwidth())}),s=e.map(a,function(e){return e.getBandwidth()});return r.length>a.length&&t._logger.info(\"Excluding [%s] tracks without Bandwidth from ABR switching.\",r.length-a.length),i[n]={max:Math.max.apply(null,s),min:Math.min.apply(null,s)},i},{}),this._logger.debug(\"Listening for bandwidth changes with max and min bandwidths of [%s]\",this._bandwidthLimits),this._webPlayer.addEventListener(\"playbacktimeleft\",e.bind(function(t,i){if(this._bandwidthChangeDetails.isInProgress||!r.isForeground())return;var n=this._bandwidthLimits[i.getMimeType()],a=this;if(this._bandwidthChangeDetails.nextSwitchCheckTime>0){if(this._bandwidthChangeDetails.nextSwitchCheckTime>e.now())return;this._bandwidthChangeDetails.nextSwitchCheckTime=0,this._bandwidthChangeDetails.oldBandwidth=-1}var s=e.bind(function(){this._bandwidthChangeDetails.isInProgress=!1},this);if(l.call(a,i,t)&&i.getBandwidth()<n.max){this._bandwidthChangeDetails.isInProgress=!0;var o=this._playlist.getPlaylistTrackByMimeTypeAndNextHighestBandwidth(i.getBandwidth(),i.getMimeType());this._playbackTimeout=setTimeout(function(){l.call(a,i,a._webPlayer.getTimeLeft())?(a._logger.info(\"Switching to higher quality track with [%s] time left in buffer and ewma of [%s].\",a._webPlayer.getTimeLeft(),d.call(a,i)),a._bandwidthChangeDetails.nextSwitchCheckTime=e.now()+1e3*t+f,a._bandwidthChangeDetails.oldBandwidth=i.getBandwidth(),a._webPlayer.changeBandwidthLimit(o.getBandwidth(),s)):a._bandwidthChangeDetails.isInProgress=!1},p)}else if(u.call(a,i,t)&&i.getBandwidth()>n.min){this._bandwidthChangeDetails.isInProgress=!0;var c=this._playlist.getPlaylistTrackByBandwidthAndMimeType(i.getBandwidth()-1,i.getMimeType());this._playbackTimeout=setTimeout(function(){u.call(a,i,a._webPlayer.getTimeLeft())?(a._logger.info(\"Switching to lower quality track with [%s] time left in buffer and ewma of [%s].\",a._webPlayer.getTimeLeft(),d.call(a,i)),a._bandwidthChangeDetails.nextSwitchCheckTime=e.now()+1e3*t+g,a._bandwidthChangeDetails.oldBandwidth=i.getBandwidth(),a._webPlayer.changeBandwidthLimit(c.getBandwidth(),s)):a._bandwidthChangeDetails.isInProgress=!1},p)}},this))},this)),this._disposables.add(r.onBackground(e.bind(c,this,!1))),this._disposables.add(r.onForeground(e.bind(c,this,!0))),this._backgroundTimeout=null,this._foregroundBandwidth=null}function l(e,t){var i=this._statsProvider.getRateAverages(e.getMseCodec()).ewmaDuration,n=e.getChunkDuration();return t>3.5||i>0&&i<=3*n/4&&t/(n/1e3)>2}function u(e,t){var i=this._statsProvider.getRateAverages(e.getMseCodec()).ewmaDuration,n=e.getChunkDuration();return t<.7||i>0&&i>=7*n/8&&t/(n/1e3)<=1.5}function d(e){return this._statsProvider.getRateAverages(e.getMseCodec()).ewmaDuration}function c(t){null!==this._playbackTimeout&&(clearTimeout(this._playbackTimeout),this._playbackTimeout=null);var i=this._webPlayer.getVideoElement();if(t){if(clearTimeout(this._backgroundTimeout),this._backgroundTimeout=null,null===this._foregroundBandwidth)return;var n=this._foregroundBandwidth;return this._foregroundBandwidth=null,n!==this._webPlayer.getBandwidthLimit()&&(this._bandwidthChangeDetails.nextSwitchCheckTime=e.now()+f,this._logger.info(\"Detected change to [foreground] for tab. Reverting to [%s] previous bandwidth limit from [%s]\",n,this._webPlayer.getBandwidthLimit()),this._webPlayer.changeBandwidthLimit(n)),void(h(i)||\"dynamic\"!==this._playlist.getType()||(this._logger.info(\"Detecting application [foreground] with muted video. Resuming playback at most recent available chunk.\"),this._webPlayer.play()))}var a=this;this._backgroundTimeout=setTimeout(function(){r.isForeground()||(a._foregroundBandwidth=a._webPlayer.getBandwidthLimit(),h(i)||\"dynamic\"!==a._playlist.getType()||(a._logger.info(\"Detecting application [background] with muted video. Pausing playback until application focused again.\"),a._webPlayer.pause()))},m)}function h(t){return!t.muted&&0!==t.volume&&(e.get(t,[\"webkitAudioDecodedByteCount\"],0)>0||e.get(t,[\"audioTracks\",\"length\"],0)>0||t.mozHasAudio||t.hasAudio||t.webkitHasAudio)}var f=15e3,g=5e3,p=500,m=3e3;return o.prototype.dispose=function(){null!==this._playbackTimeout&&clearTimeout(this._playbackTimeout),null!==this._backgroundTimeout&&clearTimeout(this._backgroundTimeout),this._disposables.dispose(),this._backgroundTimeout=null,this._playbackTimeout=null},o}.apply(t,n))&&(e.exports=r)},function(e,t,i){\"use strict\";var n,r;n=[i(4),i(15),i(17),i(27),i(9),i(20),i(5)],void 0!==(r=function(e,t,i,n,r,a,s){return{Playlist:e,MpdPlaylistChunkFeeder:t,M3u8PlaylistChunkFeeder:i,WebPlayer:n,StatsProvider:r,AdaptiveStreamingManager:a,isSupported:n.isSupported,errors:s}}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(0),i(3),i(2),i(7)],void 0!==(r=function(e,t,i,n){\"use strict\";function r(n,r,o){if(e.isObject(n,\"logger\"),e.isObject(r,\"playlistTrackConfig\"),e.isStringNotEmpty(r.codec,\"playlistTrackConfig.codec\"),e.isStringNotEmpty(r.mimeType,\"playlistTrackConfig.mimeType\"),e.isNumber(r.bandwidth,\"playlistTrackConfig.bandwidth\"),e.isNumber(r.chunkDuration,\"playlistTrackConfig.chunkDuration\"),e.isStringNotEmpty(r.trackId,\"playlistTrackConfig.trackId\"),e.isStringNotEmpty(r.initUrl,\"playlistTrackConfig.initUrl\"),e.isStringNotEmpty(r.dataChunkUrlTemplate,\"playlistTrackConfig.dataChunkUrlTemplate\"),e.isNumber(r.chunkDuration,\"playlistTrackConfig.chunkDuration\"),o=o||{},this._logger=n||new i.Logger,this._mseCodec=r.codec,this._chunkDuration=r.chunkDuration,this._bandwidth=r.bandwidth,this._height=r.height,this._trackId=r.trackId,this._mimeType=r.mimeType,this._initUrl=r.initUrl,this._dataChunkUrlTemplate=r.dataChunkUrlTemplate,this._totalNumberOfChunks=r.totalNumberOfChunks,this._currentChunkId=null,this._maxChunksToCache=o.maxChunksToCache||a,this._lowWaterMaxChunks=o.lowWaterMaxChunks||s,e.isNumber(this._maxChunksToCache,\"options.maxChunksToCache\"),e.isNumber(this._lowWaterMaxChunks,\"options.lowWaterMaxChunks\"),this._lowWaterMaxChunks>=this._maxChunksToCache)throw new Error('The \"maxChunksToCache\" cannot be less than or equal to the \"lowWaterMaxChunks\"');this._initChunk=null,this._dataChunks=[],this._chunkAddedEvent=new t.Event}var a=20,s=15;return r.prototype=Object.create(n.prototype),r.prototype.constructor=r,r.prototype.toString=function(){return\"MpdPlaylistTrack [mseCodec=\"+this._mseCodec+\", maxChunksToCache=\"+this._maxChunksToCache+\", lowWaterMaxChunks=\"+this._lowWaterMaxChunks+\", initChunk=\"+this._initChunk+\", dataChunks(size)=\"+this._dataChunks.length+\", chunkAddedEvent(size)=\"+this._chunkAddedEvent.size()+\", trackId=\"+(this._trackId?this._trackId:\"n/a\")+\", bandwidth=\"+(this.bandwidth?this.bandwidth:\"n/a\")+\"]\"},r.prototype.dispose=function(){this._dataChunks=[],this._chunkAddedEvent.dispose()},r.prototype.getMseCodec=function(){return this._mseCodec},r.prototype.getTrackId=function(){return this._trackId},r.prototype.getChunkDuration=function(){return this._chunkDuration},r.prototype.getBandwidth=function(){return this._bandwidth},r.prototype.getHeight=function(){return this._height},r.prototype.getMimeType=function(){return this._mimeType},r.prototype.getTotalNumberOfChunks=function(){return this._totalNumberOfChunks},r.prototype.getInitChunkData=function(){return this._initChunk},r.prototype.setInitChunkData=function(e){this._initChunk=e},r.prototype.getCurrentChunkId=function(){return this._currentChunkId},r.prototype.setCurrentChunkId=function(e){this._currentChunkId=e},r.prototype.incrementCurrentChunkId=function(){null===this._currentChunkId&&this._logger.error(\"[%s] Attempting to increment `CurrentChunkId` that is not initialized\",this._trackId),this._currentChunkId++},r.prototype.getInitUrl=function(){return this._initUrl},r.prototype.getDataChunkUrlTemplate=function(){return this._dataChunkUrlTemplate},r.prototype.addDataChunk=function(t,i,n){e.isNotUndefined(t,\"dataChunk\"),n=n||function(){},e.isFunction(n,\"eventCallback\");var r={data:t,chunkId:i,timestamp:i*this._chunkDuration/1e3};if(this._dataChunks.push(r),this._dataChunks.length>this._maxChunksToCache)for(;this._dataChunks.length>this._lowWaterMaxChunks;)this._dataChunks.shift();this._chunkAddedEvent.fireAsync([r],this,n)},r.prototype.getChunks=function(){return this._dataChunks},r.prototype.addEventListener=function(t,i){if(e.isString(t,\"eventName\"),e.isFunction(i,\"listener\"),\"chunkadded\"!==t)throw new Error('Event \"'+t+'\" is unknown.');return this._chunkAddedEvent.listen(i)},r}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0),i(3),i(2),i(7),i(24)],void 0!==(r=function(e,t,i,n,r,a){\"use strict\";function s(r,a,s){if(t.isObject(r,\"logger\"),t.isObject(a,\"playlistTrackConfig\"),t.isStringNotEmpty(a.codecs,\"playlistTrackConfig.codecs\"),t.isNumber(a.bandwidth,\"playlistTrackConfig.bandwidth\"),t.isStringNotEmpty(a.trackId,\"playlistTrackConfig.trackId\"),s=s||{},this._logger=r||new n.Logger,this._mseCodec=function(e){if(e.split(\"|\").length>1)return\"video/mp4\";return\"audio/mp4\"}(a.codecs),this._bandwidth=a.bandwidth,this._height=a.height,this._trackId=a.trackId,this._mimeType=a.mimeType,this._totalNumberOfChunks=a.totalNumberOfChunks,this._mediaSegments=[],this._isComplete=!1,this._playableDuration=0,this._chunkDuration=0,this._mediaSegmentPlaylistUrlInfo=function(t){var i=t.split(\"?\")[0],n=e.get(t.split(\"?\"),[1],\"\"),r=e.reduce(n.split(\"&\"),function(e,t){var i=t.split(\"=\")[0];return i&&(e[i]=t.split(\"=\")[1]),e},{});return{url:i,queryParameters:r}}(a.mediaSegmentPlaylistUrl),this._currentChunkId=null,this._maxChunksToCache=s.maxChunksToCache||o,this._lowWaterMaxChunks=s.lowWaterMaxChunks||l,t.isNumber(this._maxChunksToCache,\"options.maxChunksToCache\"),t.isNumber(this._lowWaterMaxChunks,\"options.lowWaterMaxChunks\"),this._lowWaterMaxChunks>=this._maxChunksToCache)throw new Error('The \"maxChunksToCache\" cannot be less than or equal to the \"lowWaterMaxChunks\"');this._initChunk=null,this._dataChunks=[],this._chunkAddedEvent=new i.Event,this._segmentsReadyEvent=new i.Event}var o=20,l=15;return s.prototype=Object.create(r.prototype),s.prototype.constructor=s,s.prototype.toString=function(){return\"M3u8PlaylistTrack\"},s.prototype.dispose=function(){this._dataChunks=[],this._chunkAddedEvent.dispose()},s.prototype.getMseCodec=function(){return this._mseCodec},s.prototype.getTrackId=function(){return this._trackId},s.prototype.getChunkDuration=function(){return this._chunkDuration},s.prototype.getBandwidth=function(){return this._bandwidth},s.prototype.getHeight=function(){return this._height},s.prototype.getMimeType=function(){return this._mimeType},s.prototype.getTotalNumberOfChunks=function(){return this._totalNumberOfChunks},s.prototype.getPlayableDuration=function(){return this._playableDuration},s.prototype.isComplete=function(){return this._isComplete},s.prototype.hasSegments=function(){return this._mediaSegments.length>0},s.prototype.getSegmentByTimestamp=function(t){return e.find(this._mediaSegments,function(e){return e.timestamp<=t&&t<e.timestamp+e.duration})},s.prototype.getLastSegment=function(){return e.get(this._mediaSegments,[this._mediaSegments.length-1],null)},s.prototype.getMediaSegmentPlaylistUrlInfo=function(){return this._mediaSegmentPlaylistUrlInfo},s.prototype.getClosestSegmentNotGreaterThanTimestamp=function(e){return e>this._playableDuration?this._mediaSegments[this._mediaSegments.length-1]:this.getSegmentByTimestamp(e)},s.prototype.isLastMediaSegment=function(t){var i=this.getSegmentByTimestamp(t),n=!this._isComplete&&e.get(i,[\"timestamp\"],0)+e.get(i,[\"duration\"],0)===this._playableDuration,r=!this._isComplete&&t>this._playableDuration;return this._playableDuration===t||n||r},s.prototype.updateMediaSegments=function(t){var i=new a(this._logger,this._trackId,t),n=this._totalNumberOfChunks||0,r=e.map(this._mediaSegments,function(e){return e.name}),s=this,o=e.get(this._mediaSegments,[this._mediaSegments.length-1]),l=e.get(o,[\"timestamp\"])+e.get(o,[\"duration\"])||void 0;e.forEach(i.mediaSegments,function(t){e.includes(r,t.name)||(t.timestamp=e.isUndefined(l)?0:l,s._mediaSegments.push(t),s._playableDuration+=t.duration,l=t.timestamp+t.duration,t.duration>s._chunkDuration&&(s._chunkDuration=t.duration),s._logger.trace(\"[%s]:[%s]:[%s] Got new segment from playlist [%s]\",(new Date).getHours(),(new Date).getMinutes(),(new Date).getSeconds(),t.name))}),n!==this._mediaSegments.length&&(this._isComplete=i.isComplete,this._totalNumberOfChunks=this._mediaSegments.length,this._segmentsReadyEvent.fireAsync([this._mediaSegments],null,e.noop))},s.prototype.addDataChunk=function(e,i,n){t.isNotUndefined(e,\"dataChunk\"),n=n||function(){},t.isFunction(n,\"eventCallback\");var r={data:e,chunkId:i,timestamp:i*this._chunkDuration/1e3};if(this._dataChunks.push(r),this._dataChunks.length>this._maxChunksToCache)for(;this._dataChunks.length>this._lowWaterMaxChunks;)this._dataChunks.shift();this._chunkAddedEvent.fireAsync([r],this,n)},s.prototype.getChunks=function(){return this._dataChunks},s.prototype.addEventListener=function(e,i){switch(t.isString(e,\"eventName\"),t.isFunction(i,\"listener\"),e){case\"chunkadded\":return this._chunkAddedEvent.listen(i);case\"segmentsready\":return this._segmentsReadyEvent.listen(i);default:throw new Error('Event \"'+e+'\" is unknown.')}},s}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0)],void 0!==(r=function(e,t){\"use strict\";function i(i,r,a){t.isStringNotEmpty(a,\"m3u8String\"),t.isObject(i,\"logger\"),this._rawM3U8=a,this._logger=i,this._name=r,this.mediaSegments=[],function(t){var i=t.match(/[^\\r\\n]+/g),r=this;return e.forEach(i,function(t,a){var s=t.match(/(?!#)EXT.+?(?=[:\\n\\r])/),o=e.get(s,[\"0\"],null),l=t.trim().substring(o?o.length+2:0,t.length);switch(\"#EXT-X-ENDLIST\"===t&&(o=\"EXT-X-ENDLIST\"),o){case\"EXT-X-VERSION\":r.version=parseFloat(l);break;case\"EXT-X-PROGRAM-DATE-TIME\":r.programDateTime=function(e){return e?new Date(e.trim()):null}(l);break;case\"EXT-X-TARGETDURATION\":r.targetDuration=1e3*parseFloat(l)||0;break;case\"EXT-X-MEDIA-SEQUENCE\":r.mediaSequence=parseInt(l);break;case\"EXTINF\":var u=[l,i[a+1]];r.mediaSegments.push(n(u,r.mediaSegments+1));break;case\"EXT-X-ENDLIST\":r.isComplete=!0;break;case\"EXTM3U\":case null:break;default:return r._logger.debug(\"[%s] [Segment] Playlist unsupported key type [%s]\",r._name,o)}}),r}.call(this,this._rawM3U8);var s=0;e.forEach(this.mediaSegments,function(e){e.timestamp=s,s+=e.duration}),this.playableDuration=s,this.isComplete=!!this.isComplete}i.prototype.toString=function(){return\"vod\"};var n=function(t){var i=e.get(t,[\"0\"],\"\").split(\",\"),n=e.get(i,[\"0\"],0),r=e.get(i,[\"1\"],\"\").trim(),a=e.get(t,[\"1\"],\"\").trim();return{duration:parseFloat(n),title:r,name:a}};return i}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(0),i(8)],void 0!==(r=function(e,t){\"use strict\";function i(){}return i.prototype.isCodecSupported=function(i){return e.isStringNotEmpty(i,\"codec\"),t.global.MediaSource&&\"function\"==typeof t.global.MediaSource.isTypeSupported&&t.global.MediaSource.isTypeSupported(i)},i.prototype.parseXml=function(i){if(e.isStringNotEmpty(i,\"xmlString\"),void 0!==t.global.DOMParser)return(new t.global.DOMParser).parseFromString(i,\"text/xml\");if(void 0!==t.global.ActiveXObject&&new t.global.ActiveXObject(\"Microsoft.XMLDOM\")){var n=new t.global.ActiveXObject(\"Microsoft.XMLDOM\");return n.async=\"false\",n.loadXML(i),n}throw new Error(\"No XML parser found\")},i.prototype.getMSECodec=function(t,i){return e.isStringNotEmpty(t,\"mpdMimeType\"),e.isStringNotEmpty(i,\"mpdCodecs\"),t+'; codecs=\"'+i+'\"'},new i}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0),i(10)],void 0!==(r=function(e,t,i){\"use strict\";function n(e,i,n){t.isObject(e,\"logger\"),this._logger=e,this._timeSources=function(e){return e.sort(function(e,t){return a[e.name]-a[t.name]})}(i),this._directSourceOffset=n}function r(t,n){n=n||0;var a=this,s=e.get(this._timeSources,[n],{});(function(t,n){var r=this;switch(t.name){case\"urn:mpeg:dash:utc:http-head:2014\":return i.get(t.value,{contentType:\"text/plain\"},function(i,a){var s=e.get(a,[\"headers\",\"date\"],\"\"),o=new Date(s).getTime();if(i||isNaN(o))return r._logger.warn(\"Unable to resolve dash timing via [%s]\",t.value),n();var l=e.now()-o-a.stats.successResponseTime/2;return r._logger.info(\"Resolved [%s] local to server timestamp offset [%s]\",t.name,l),n(l)});case\"urn:mpeg:dash:utc:direct:2014\":var a=e.now()-t.value-this._directSourceOffset/2;return r._logger.info(\"Resolved [%s] local to server timestamp offset [%s]\",t.name,a),n(a);default:return r._logger.info(\"Unable to resolve mpd Timing Sources. Defaulting to local time\"),n(0)}}).call(this,s,function(i){if(!e.isNumber(i))return r.call(a,t,n+1);t(i)})}var a={\"urn:mpeg:dash:utc:http-head:2014\":0,\"urn:mpeg:dash:utc:direct:2014\":1};return n.prototype.calculateOffset=function(e){r.call(this,e)},n.prototype.toString=function(){return\"MpdTimeSync [Time Source Number: \"+this._timeSources.length+\", Direct Source Offset: \"+this._directSourceOffset+\"]\"},n}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0),i(2),i(3),i(6),i(11),i(8),i(28),i(29),i(4),i(9),i(20),i(15),i(17)],void 0!==(r=function(e,t,i,n,r,a,s,o,l,u,d,c,h,f){\"use strict\";function g(e,o,l){t.isNotUndefined(o,\"videoElement\"),t.isNotUndefined(o.videoWidth,\"videoElement.videoWidth\"),this._logger=e||new i.Logger,this._options=l,this._videoElement=o,this._disposables=new r.DisposableList,this._browserDetails=new a(s.global.navigator.userAgent).detect(),this._preferNative=this._options.preferNative||!1,this._player=null,this._playbackStarted=!1,this._isWaiting=!1,this._playbackStarted=!1,this._playbackTimeLeftEvent=new n.Event,this._playerStartedEvent=new n.Event,this._playerErrorEvent=new n.Event,this._disposables.add(this._playbackTimeLeftEvent),this._disposables.add(this._playerStartedEvent),this._disposables.add(this._playerErrorEvent)}function p(){var e=this;\"Edge\"===e._browserDetails.browser||\"IE\"===e._browserDetails.browser?(e._videoElement.play(),e._playbackStarted=!0,e._playerStartedEvent.fireAsync([],e),e._logger.debug(\"Playback Started\")):e._videoElement.play().then(function(){e._playbackStarted=!0,e._playerStartedEvent.fireAsync([],e),e._logger.debug(\"Playback Started\")}).catch(function(t){e._logger.error(\"Playback Failed [%s]\",t)})}return g.prototype.toString=function(){return e.toString(this)},g.prototype.start=function(e){if(t.isStringNotEmpty(e,\"uri\"),this._player)return this._logger.warn(\"Already started Phenix Web Player\");var i=this;if(this._preferNative||!o.isSupported)return this._player=new l(this._logger,this._videoElement,this._options),this._player.addEventListener(\"error\",function(e){i._playerErrorEvent.fire([e])}),this._disposables.add(this._player),this._player.start(e,function(){p.call(i)});var n=new u(this._logger,e);i._disposables.add(n),n.fetch(function(e){if(e)return i._playerErrorEvent.fire([e]);var t,r=new d(i._logger,{ewmaPeriods:30});\"Dash\"===n.getDeliveryType()?t=new h(i._logger,n,r,i._options):\"Hls\"===n.getDeliveryType()&&(t=new f(i._logger,n,r,i._options));var a=new o(i._logger,n,i._videoElement,t,i._options),s=new c(i._logger,n,i,r);a.start(),p.call(i),i._player=a,i._player.addEventListener(\"playbacktimeleft\",function(e,t){i._playbackTimeLeftEvent.fire([e,t])}),i._player.addEventListener(\"error\",function(e){i._playerErrorEvent.fire([e])}),i._disposables.add(i._player),i._disposables.add(r),i._disposables.add(s)})},g.prototype.play=function(){p.call(this),this._player&&this._player.play()},g.prototype.pause=function(){this._logger.info(\"Pausing web player\"),this._player&&this._player.pause()},g.prototype.getVideoElement=function(){return this._videoElement},g.prototype.dispose=function(){this._disposables.dispose(),this._videoElement&&(this._videoElement.load(),this._videoElement.src=\"\",this._videoElement.mediaKeys&&this._videoElement.setMediaKeys(null)),this._player=null,this._videoElement=null},g.prototype.getBandwidthLimit=function(){this._player.getBandwidthLimit()},g.prototype.getTimeLeft=function(){return this._videoElement?function(t){var i=this._videoElement.currentTime,n=this._videoElement.duration,r=function(e,t){for(var i=0;i<e.buffered.length;i++){var n=e.buffered.start(i),r=e.buffered.end(i);if(n<=t&&t<=r)return i}}(t,i),a=e.isNumber(r)?t.buffered.end(r):0,s=0===a?0:a-i;return{bufferedLength:t.buffered.length,current:i,bufferEnd:a,timeBufferedButNotPlayed:s,duration:n,timestampOffset:t.timestampOffset}}.call(this,this._videoElement).timeBufferedButNotPlayed:0},g.prototype.changeBandwidthLimit=function(e,t){this._player.changeBandwidthLimit(e,t)},g.prototype.addEventListener=function(i,n){switch(t.isString(i,\"eventName\"),t.isFunction(n,\"listener\"),i){case\"playbacktimeleft\":return this._playbackTimeLeftEvent.listen(n);case\"started\":var r=this._playerStartedEvent.listen(n);return this._playbackStarted&&setTimeout(e.bind(n,this),0),r;case\"error\":return this._playerErrorEvent.listen(n);default:throw new Error('Event \"'+i+'\" is unknown.')}},g.prototype.getStats=function(){return this._player?this._player.getStats():{}},g.isSupported=l.isSupported||o.isSupported,g}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0),i(2),i(3),i(6),i(11),i(8),i(4),i(12),i(18)],void 0!==(r=function(e,t,i,n,r,a,s,o,l,u){\"use strict\";function d(d,h,f,g,p){t.isInstanceOf(h,o,\"playlist\"),t.isNotUndefined(f,\"videoElement\"),t.isNotUndefined(f.videoWidth,\"videoElement.videoWidth\"),t.isNotUndefined(g,\"playlistChunkFeeder\"),t.isInstanceOf(g,l,\"playlistChunkFeeder\"),e.isUndefined(e.get(p,\"bandwidthToStartAt\"))||t.isNumber(p.bandwidthToStartAt,\"options.bandwidthToStartAt\"),e.isUndefined(e.get(p,\"trackRestrictions\"))||t.isObject(p.trackRestrictions,\"options.trackRestrictions\"),e.isUndefined(e.get(p,\"bufferSizeToPauseFetch\"))||t.isNumber(p.bufferSizeToPauseFetch,\"options.bufferSizeToPauseFetch\"),e.isUndefined(e.get(p,\"bufferSizeToResumeFetch\"))||t.isNumber(p.bufferSizeToResumeFetch,\"options.bufferSizeToResumeFetch\"),e.isUndefined(e.get(p,\"maximumFrequencyForAlteringPlaybackRate\"))||t.isNumber(p.maximumFrequencyForAlteringPlaybackRate,\"options.maximumFrequencyForAlteringPlaybackRate\"),e.isUndefined(e.get(p,\"playbackRateToRecover\"))||t.isNumber(p.playbackRateToRecover,\"options.playbackRateToRecover\"),e.isUndefined(e.get(p,\"targetMinBufferSize\"))||t.isNumber(p.targetMinBufferSize,\"options.targetMinBufferSize\");var m=this;this._options=p,this._videoElement=f,this._feeder=g,this._playlist=h,this._disposables=new r.DisposableList,this._logger=d||new i.Logger,this._bandwidthLimit=e.get(p,\"bandwidthToStartAt\",w),this._trackRestrictions=e.get(p,\"trackRestrictions\",{}),this._bufferSizeToPauseFetch=e.get(p,\"bufferSizeToPauseFetch\",T),this._bufferSizeToResumeFetch=e.get(p,\"bufferSizeToResumeFetch\",E),this._maximumFrequencyForAlteringPlaybackRate=e.get(p,\"maximumFrequencyForAlteringPlaybackRate\",M),this._targetMinBufferSize=e.get(p,\"targetMinBufferSize\",A),this._playbackRateToDecreaseBuffer=e.get(p,\"playbackRateToDecreaseBuffer\",C),this._playbackRateToIncreaseBuffer=e.get(p,\"playbackRateToIncreaseBuffer\",D),this._targetBufferSizeToStartFastForward=this._targetMinBufferSize+3.5,this._maxBufferSizeWhileRecoveringBufferWithSlowMotion=this._targetMinBufferSize+2,this._playbackStarted=!1,this._isWaiting=!1,this._bufferStats=[],this._browserDetails=new a(s.global.navigator.userAgent).detect(),function(){var t=this,i=e.get(this._playlist,[\"parsedPlaylist\",\"contentProtectionTags\"],[]);if(0===i.length)return;if(!u.isSupported())return this._logger.error(\"DRM not supported by the browser\");this._encryptedMediaHandler=new u(this._logger,this._videoElement,i,e.get(this._options,\"drm\")),this._encryptedMediaHandler.addEventListener(\"error\",function(e){t._playerErrorEvent.fire([e])}),this._encryptedMediaHandler.addEventListener(\"trackRestrictionsAvailable\",function(i){e.keys(i).length>0&&(t._trackRestrictions=i,c.call(t),t._videoElement.play())}),this._disposables.add(this._encryptedMediaHandler)}.call(this),this._playbackStarted=!1,this._mediaSourceBuffers={},this._bufferDetails={},this._playbackTimeLeftEvent=new n.Event,this._playerErrorEvent=new n.Event,this._feeder.addEventListener(\"error\",function(e){m._playerErrorEvent.fire([e])}),this._disposables.add(this._feeder),this._disposables.add(this._playbackTimeLeftEvent),this._disposables.add(this._playerErrorEvent),this._disposables.add(new r.Disposable(function(){null!==m._switchTrackDisposable&&s.global.clearTimeout(m._switchTrackDisposable)}))}function c(){var e=this._playlist.getPlaylistTracksByBandwidthPerMimeType(this._bandwidthLimit,this._trackRestrictions);return this._feeder.setActiveTracks(e),e}function h(e,t,i){this._logger.debug(\"VIDEO EVENT: [%s]\",e),t&&t.call(this,i)}function f(t,i){var n=e.bind(h,this,\"durationchange\",function(){var r=this;if(\"dynamic\"!==r._playlist.getType())return r._videoElement.removeEventListener(\"durationchange\",n,!1),r._ready=!0;0!==e.get(r,[\"_videoElement\",\"buffered\",\"length\"],0)&&function(t,i){var n=this;t=e.isNumber(t)?t:n._playlist.getPlaybackDurationSinceAvailable()/1e3-1,\"Firefox\"===this._browserDetails.browser&&(t-=1),setTimeout(function(){var e=n._videoElement.buffered.start(n._videoElement.buffered.length-1),r=n._videoElement.buffered.end(n._videoElement.buffered.length-1),a=n._videoElement.currentTime<t||n._videoElement.currentTime>t+1,s=e<=t&&t<=r,o=n._durationChangeCount>=I;s||o||!n._initialized?(!a||n._setTimeoutOnce||!s&&!o&&n._initialized||(n._initialized||s?n._videoElement.currentTime=o?(r-e)/2+e:e:n._videoElement.currentTime=e,n._setTimeoutOnce=!0,n._initialized||(n._initialized=!0)),e<=n._videoElement.currentTime&&n._videoElement.currentTime<=r&&(s||o)&&(n._ready=!0,n._setTimeoutOnce=!1,i())):n._durationChangeCount++},10)}.call(r,t,function(){r._videoElement.removeEventListener(\"durationchange\",n,!1),i&&i()})});return this._durationChangeCount=0,n}function g(t){var i=this._videoElement.currentTime,n=this._videoElement.duration,r=p(t,i),a=e.isNumber(r)?t.buffered.end(r):0,s=0===a?0:a-i;return{bufferedLength:t.buffered.length,current:i,bufferEnd:a,timeBufferedButNotPlayed:s,duration:n,timestampOffset:t.timestampOffset}}function p(e,t){for(var i=0;i<e.buffered.length;i++){var n=e.buffered.start(i),r=e.buffered.end(i);if(n<=t&&t<=r)return i}}function m(){var t=!0,i=!1;e.forOwn(this._mediaSourceBuffers,e.bind(function(e){var n=g.call(this,e.buffer),r=parseFloat(n.timeBufferedButNotPlayed);r<this._bufferSizeToPauseFetch&&(t=!1),r<this._bufferSizeToResumeFetch&&(i=!0)},this)),t&&this._feeder.isFetchingData()&&(this._logger.debug(\"Pausing feeder due to excess buffer\"),L.call(this)),!i||this._feeder.isFetchingData()||this._pausedAt||(this._logger.debug(\"Starting feeder due to limited buffer\"),x.call(this))}function y(t,i){var n=this._mediaSourceBuffers[b(t)],r=this._bufferDetails[k(t)];if(!r)return this._logger.warn(\"Unable to add chunk for non existent buffer\");if(\"dynamic\"===this._playlist.getType()&&this._pausedAt&&!this._reset&&n.buffer.buffered.length>0)n.buffer.remove(0,n.buffer.buffered.end(n.buffer.buffered.length-1)),n.cleared=!0,e.reduce(this._mediaSourceBuffers,function(e,t){return e?t.cleared:e},!0)&&(this._initialized=!1,this._ready=!1,this._setTimeoutOnce=!1,this._reset=!0);else if(r.chunks.length>0){if(this._videoElement.error)return this._logger.error(\"Unable to continue appending to buffer. Video element error code [%s] and message [%s]\",this._videoElement.error.code,this._videoElement.error.message),L.call(this),this._playerErrorEvent.fire([this._videoElement.error]);var a=r.chunks.shift();n.cleared=!1,this._logger.debug(\"Appending chunk to buffer for track [%s]\",t.getTrackId()),n.buffer.appendBuffer(new Uint8Array(a))}else i&&(m.call(this),r.chunkAddRequested=!0)}function _(t){var i=this._mediaSourceBuffers[b(t)],n=e.bind(function(e){this._logger.warn(\"Buffer Error [%s]\",e)},this),r=!!i.track;if(i.track!==t){var a=this._bufferDetails[k(t)];if(i.track&&i.track!==t&&r&&(i.buffer.removeEventListener(\"updateend\",i.updateEndListener),i.buffer.removeEventListener(\"error\",n),a&&(a.addInitChunkFirst=!0,a.chunkAddRequested=!0,a.chunks=[])),i.track=t,i.updateEndListener=e.bind(i.updateEnd,this,t),i.buffer.addEventListener(\"updateend\",i.updateEndListener),i.buffer.addEventListener(\"error\",n),i.buffer.onerror=n,!r){var s=\"Dash\"===this._playlist.getDeliveryType()?[t.getInitChunkData()]:[];a.chunks=[].concat(s,e.map(t.getChunks(),function(e){return e.data})),\"static\"===this._playlist.getType()&&\"Edge\"!==this._browserDetails.browser&&\"IE\"!==this._browserDetails.browser&&this._mediaSource.setLiveSeekableRange(0,this._playlist.getTotalMediaTimeInMillis()/1e3),y.call(this,t,!1)}}}function v(t){this._logger.debug(\"Creating MSE buffers for all tracks.\"),e.forEach(t,e.bind(function(t){(function(t){var i=this,n={track:t,chunks:[],chunkAddRequested:!1},a=b(t),s=!e.includes(e.keys(i._mediaSourceBuffers),a),o=s?i._mediaSource.addSourceBuffer(t.getMseCodec()):i._mediaSourceBuffers[a].buffer,l=k(t);i._bufferDetails[l]=n,s&&(o.mode=\"segments\",\"static\"===i._playlist.getType()&&(o.appendWindowEnd=i._playlist.getTotalMediaTimeInMillis()/1e3),i._logger.debug(\"Creating MSE Buffer for [%s] with mode [%s]\",i._playlist.getType(),o.mode),i._mediaSourceBuffers[a]={buffer:o,updateEnd:function(e){o.updating||y.call(this,e,!0)}},i._disposables.add(new r.Disposable(function(){i._logger.debug(\"Cleaning up sourceBuffer [%s]\",a),i._mediaSource.removeSourceBuffer(o)})));var u=t.addEventListener(\"chunkadded\",e.bind(function(t,r){n.addInitChunkFirst&&\"Dash\"===i._playlist.getDeliveryType()&&(n.addInitChunkFirst=!1,this._logger.debug(\"Pushing track [%s] chunk [%s] into buffer\",t.getTrackId(),\"Init\"),n.chunks.push(t.getInitChunkData())),this._logger.debug(\"Pushing track [%s] chunk [%s] into buffer\",t.getTrackId(),r.chunkId),n.chunks.push(r.data),n.chunkAddRequested&&(n.chunkAddRequested=!1,o.updating||y.call(this,t,!1));var a=e.now()-this._lastUpdate>=S,s=e.now()-this._lastPlayAttempt>=500;this._isWaiting&&a&&s&&!this._videoElement.paused&&!this._pausedAt&&(this._logger.trace(\"Starting after wait [%s]\",e.now()-this._lastUpdate),this._lastPlayAttempt=e.now(),this._videoElement.play())},i,t));i._disposables.add(u)}).call(this,t)},this))}function b(e){return e.getMseCodec().indexOf(\"video\")>=0?\"video\":e.getMseCodec().indexOf(\"audio\")>=0?\"audio\":\"other\"}function k(e){return e.getTrackId()+\"_\"+e.getMseCodec()}var w=2e6,T=60,E=30,S=1e3,C=1.03,D=.97,M=300,P=300,A=2,R=3e5,I=2;d.prototype.toString=function(){return e.toString(this)},d.prototype.play=function(){if(\"dynamic\"===this._playlist.getType()){var e=this._feeder.seekToCurrent();x.call(this);var t=this,i=f.call(this,e,function(){t._pausedAt=0,t._videoElement&&t._videoElement.play()});return setTimeout(function(){t._videoElement.addEventListener(\"durationchange\",i,!1)},300),this._disposables.add(new r.Disposable(function(){t._videoElement.removeEventListener(\"durationchange\",i,!1)}))}x.call(this),this._videoElement&&this._videoElement.play()},d.prototype.pause=function(){this._logger.info(\"Pausing web player\"),L.call(this);var t=this;this._videoElement&&(this._videoElement.pause(),this._pausedAt=e.now(),this._reset=!1,e.forOwn(this._feeder.getActiveTracks(),function(e){t._mediaSourceBuffers[b(e)].buffer.updating||y.call(t,e,!1)}))},d.prototype.dispose=function(){this._disposables.dispose(),this._playbackStarted=!1,this._mediaSourceBuffers={},this._bufferDetails={},this._bufferStats=[],this._mediaSource=null,this._playlist=null,this._videoElement=null},d.prototype.start=function(t){(function(t){var i=this;i._mediaSource=new MediaSource;var n=function(){(function(t){var i=this,n=c.call(this),a=i._playlist.getAllPlaylistTracks().sort(function(e,t){return-1*(e.getBandwidth()-t.getBandwidth())}),s=e.filter(a,function(t){return!e.includes(n,t)});if(this._logger.info(\"Initializing feeder with [%s] [%s] playlist of duration [%s]\",i._playlist.getType(),i._playlist.getDeliveryType(),i._playlist.getTotalMediaTimeInMillis()/1e3),\"static\"===i._playlist.getType())i._mediaSource.duration=i._playlist.getTotalMediaTimeInMillis()/1e3;else if(\"Hls\"===i._playlist.getDeliveryType()){i._mediaSource.duration=1/0;var o=e.reduce(n,function(t,i){var n=e.get(i.getLastSegment(),[\"timestamp\"],0);return e.isNullOrUndefined(t)?n:n<t?n:t})||0;i._feeder.seekToChunk(o)}this._logger.debug(\"Loading tracks: numberOfTracksToInitialize=[%s], all tracks: [%s]\",n.length,a),this._feeder.initialize(n,s,function(){v.call(i,n);var a=c.call(i);e.forEach(a,function(e){_.call(i,e)}),function(t){var i=this,n=e.bind(function(){this._isWaiting=!1,this._lastUpdate=e.now();var t;e.forOwn(this._mediaSourceBuffers,e.bind(function(e){var i=g.call(this,e.buffer);(!t||t>i.timeBufferedButNotPlayed)&&(t=i.timeBufferedButNotPlayed),this._playbackTimeLeftEvent.fire([i.timeBufferedButNotPlayed,e.track],this)},this)),m.call(this),function(t){this._bufferStats.push({size:t,timestamp:e.now()});for(var i=e.get(this._bufferStats,[0,\"timestamp\"],e.now());e.now()-i>R;)this._bufferStats.shift(),i=e.get(this._bufferStats,[0,\"timestamp\"],e.now());this._bufferStatsMin=Math.min.apply(null,e.map(this._bufferStats,function(e){return e.size}))}.call(this,t),function(t){if(\"Dash\"===this._playlist.getDeliveryType()||\"dynamic\"===this._playlist.getType()){var i=this._targetBufferSizeToStartFastForward,n=this._lastPlaybackRateChange,r=e.now()-this._startTime>P,a=!n||e.now()-n>1e3*this._maximumFrequencyForAlteringPlaybackRate,s=this._bufferStatsMin>this._targetMinBufferSize,o=this._bufferStatsMin<=this._targetMinBufferSize+.1&&this._bufferStatsMin>=this._targetMinBufferSize-.1,l=t>=this._maxBufferSizeWhileRecoveringBufferWithSlowMotion&&this._videoElement.playbackRate===this._playbackRateToIncreaseBuffer;t>=i&&s&&this._videoElement.playbackRate<=1&&r&&a?(this._logger.info(\"Adjusting playback rate to [%s] to reduce buffer size from [%s] with minimum buffer size of [%s]\",this._playbackRateToDecreaseBuffer,t,this._bufferStatsMin),this._videoElement.playbackRate=this._playbackRateToDecreaseBuffer):!s&&!o&&this._videoElement.playbackRate>=1&&a?(this._logger.info(\"Adjusting playback rate to [%s] to increase buffer size from [%s] with minimum buffer size of [%s]\",this._playbackRateToIncreaseBuffer,t,this._bufferStatsMin),this._videoElement.playbackRate=this._playbackRateToIncreaseBuffer):(l||o)&&1!==this._videoElement.playbackRate&&(this._logger.info(\"Resuming normal playback rate with buffer size of [%s] and minimum buffer size of [%s]\",t,this._bufferStatsMin),this._videoElement.playbackRate=1,this._lastPlaybackRateChange=e.now())}}.call(this,t||0)},i),a=e.bind(h,i,\"stalled\",null),s=e.bind(h,i,\"suspend\",null),o=e.bind(h,i,\"ended\",null),l=e.bind(h,i,\"error\",null),u=e.bind(h,i,\"pause\",null),d=e.bind(h,i,\"play\",function(){this._pausedAt&&this._videoElement.pause()}),c=e.bind(h,i,\"waiting\",function(){this._playbackStarted&&(this._logger.debug(\"Waiting for new chunk or end of track\"),this._isWaiting=!0)}),y=e.bind(h,i,\"seeking\",function(t){var i=e.keys(this._mediaSourceBuffers),n=e.get(i,\"0\",null),r=this._mediaSourceBuffers[n],a=this;if(r&&this._ready&&\"Hls\"!==this._playlist.getDeliveryType()){var s=p(r.buffer,t.timeStamp/1e3),o=p(r.buffer,this._videoElement.currentTime),l=e.reduce(this._mediaSourceBuffers,function(t,i){var n=p(i.buffer,a._videoElement.currentTime),r=e.isNumber(n)?i.buffer.buffered.end(n):0;return t?r<t?r:t:r})||this._videoElement.currentTime;if(this._feeder.stopRequestingAllData(),this._logger.debug(\"Pausing of feeder completed.\"),this._feeder.seekToChunk(\"dynamic\"===this._playlist.getType()?this._videoElement.currentTime:l),s!==o||e.isNullOrUndefined(o)){if(this._feeder.isFetchingData())return;this._feeder.startRequestingDataForActiveTracks(this._bandwidthLimit)}}}),_=f.call(i);i._videoElement.addEventListener(\"timeupdate\",n,!1),i._videoElement.addEventListener(\"ended\",o,!1),i._videoElement.addEventListener(\"error\",l,!1),i._videoElement.addEventListener(\"pause\",u,!1),i._videoElement.addEventListener(\"stalled\",a,!1),i._videoElement.addEventListener(\"suspend\",s,!1),i._videoElement.addEventListener(\"play\",d,!1),i._videoElement.addEventListener(\"waiting\",c,!1),i._videoElement.addEventListener(\"seeking\",y,!1),i._videoElement.addEventListener(\"durationchange\",_,!1),i._disposables.add(new r.Disposable(function(){i._logger.debug(\"Cleaning up videoElement listeners\"),i._videoElement.removeEventListener(\"timeupdate\",n,!1),i._videoElement.removeEventListener(\"ended\",o,!1),i._videoElement.removeEventListener(\"error\",l,!1),i._videoElement.removeEventListener(\"pause\",u,!1),i._videoElement.removeEventListener(\"stalled\",a,!1),i._videoElement.removeEventListener(\"suspend\",s,!1),i._videoElement.removeEventListener(\"play\",d,!1),i._videoElement.removeEventListener(\"waiting\",c,!1),i._videoElement.removeEventListener(\"seeking\",y,!1),i._videoElement.removeEventListener(\"durationchange\",_,!1)})),x.call(i),i._lastPlayAttempt=e.now(),e.isFunction(t)&&t()}.call(i,t)},function(){\"Hls\"!==i._playlist.getDeliveryType()&&v.call(i,s)},function(e){return i._logger.error(\"Unable to initialize playlist chunk feeder\",e),i._playerErrorEvent.fire([e])})}).call(i,t)};i._mediaSource.addEventListener(\"sourceopen\",n),i._disposables.add(new r.Disposable(function(){i._logger.debug(\"Cleaning up sourceopen listener\"),i._mediaSource.removeEventListener(\"sourceopen\",n)})),i._videoElement.src=s.global.URL.createObjectURL(i._mediaSource)}).call(this,t),this._startTime=e.now()},d.prototype.getBandwidthLimit=function(){return this._bandwidthLimit},d.prototype.changeBandwidthLimit=function(t,i){this._logger.debug(\"Changing playback bandwidth limit: [%s], current limit: [%s]\",t,this._bandwidthLimit),this._bandwidthLimit=t,this._switchTrackDisposable=setTimeout(e.bind(function(t){var i=this,n=this._feeder.getActiveTracks(),r=c.call(this),a=e.filter(r,function(t){return!e.find(n,function(e){return e.getTrackId()===t.getTrackId()})});e.forEach(a,function(e){_.call(i,e),i._logger.info(\"Switched [%s] to track [%s] with [%s] bandwidth limit\",b(e),e.getTrackId(),i._bandwidthLimit)});var s=e.reduce(r,function(t,n){var r=i._mediaSourceBuffers[b(n)],a=p(r.buffer,i._videoElement.currentTime),s=n.getChunkDuration()/1e3;if(!e.isNumber(a))return!e.isNumber(t)||t>i._videoElement.currentTime?i._videoElement.currentTime:t;var o=Math.round(r.buffer.buffered.end(a)/s)*s;return!e.isNumber(t)||t>o?o:t});e.isNumber(s)||(s=i._videoElement.currentTime),this._feeder.stopRequestingAllData(),this._feeder.seekToChunk(s),this._logger.debug(\"Pausing of feeder completed.\"),this._feeder.isFetchingData()||(this._feeder.startRequestingDataForActiveTracks(this._bandwidthLimit),t())},this,i||e.noop),250)},d.prototype.addEventListener=function(e,i){switch(t.isString(e,\"eventName\"),t.isFunction(i,\"listener\"),e){case\"playbacktimeleft\":return this._playbackTimeLeftEvent.listen(i);case\"error\":return this._playerErrorEvent.listen(i);default:throw new Error('Event \"'+e+'\" is unknown.')}},d.prototype.getStats=function(){return{currentTime:e.get(this._element,[\"currentTime\"],0),width:e.get(this._element,[\"videoWidth\"],0)||e.get(this._element,[\"width\"],0),height:e.get(this._element,[\"videoHeight\"],0)||e.get(this._element,[\"height\"],0),lag:0,deliveryType:this._playlist.getDeliveryType(),isNative:!1}},d.isSupported=!!s.global.MediaSource;var L=function(){this._feeder.stopRequestingAllData(),this._logger.debug(\"Pausing of feeder completed.\")},x=function(){if(this._feeder.isFetchingData())return this._logger.debug(\"Unable to start requesting data. Feeder is already fetching data.\");this._feeder.startRequestingDataForActiveTracks()};return d}.apply(t,n))&&(e.exports=r)},function(e,t,i){var n,r;n=[i(1),i(0),i(2),i(3),i(6),i(11),i(19),i(8),i(4),i(18),i(5)],void 0!==(r=function(e,t,i,n,r,a,s,o,l,u,d){\"use strict\";function c(s,c,m){t.isNotUndefined(c,\"videoElement\"),t.isNotUndefined(c.videoWidth,\"videoElement.videoWidth\"),this._options=m,this._videoElement=c,this._disposables=new r.DisposableList,this._logger=s||new i.Logger,this._browserDetails=new a(o.global.navigator.userAgent).detect(),this._playerErrorEvent=new n.Event,this._disposables.add(this._playerErrorEvent),this._onStalled=e.bind(function(){var e=this,t=this._element.currentTime,i=function(){return 1.5*this._lastProgress.averageLength<2e3?2e3:1.5*this._lastProgress.averageLength}.call(e);setTimeout(function(){if(0===e._lastProgress.count){var t=\"Stream has not started within [\"+i/1e3+\"] seconds\";e._logger.warn(t),g.call(e,d.name.progressTimeOut.name,t)}},i),setTimeout(function(){if(e._element&&e._element.currentTime===t&&!e._element.paused&&h.call(e)){var i=\"Stream has been stalled for [\"+_/1e3+\"] seconds\";e._logger.warn(i),f.call(e,d.name.progressTimeOut.name,i)}},_)},this),this._onProgress=e.bind(function(){if(this._lastProgress.time=e.now(),0===this._element.buffered.length)return this._logger.debug(\"[%s] Hls stream progress event fired without any buffered content\",this._uri);var t=this._element.buffered.end(this._element.buffered.length-1);if(this._lastProgress.buffered===t)return;if(null!==this._lastProgress.buffered){var i=this._lastProgress.averageLength*this._lastProgress.count+(t-this._lastProgress.buffered);if(this._lastProgress.count+=1,this._lastProgress.averageLength=i/this._lastProgress.count,this._lastProgress.lastCurrentTime!==this._element.currentTime&&(this._lastProgress.lastCurrentTimeOccurrenceTimestamp=e.now()),this._lastProgress.lastCurrentTimeOccurrenceTimestamp&&e.now()-this._lastProgress.lastCurrentTimeOccurrenceTimestamp>_&&this._element&&!this._element.paused&&h.call(this)){var n=\"Reloading stream after current time has not changed for [\"+_/1e3+\"] seconds due to unregistered stall.\";this._logger.warn(n),f.call(this,d.name.progressTimeOut.name,n)}}this._lastProgress.buffered=t,this._lastProgress.lastCurrentTime=this._element.currentTime},this),this._onEnded=e.bind(function(){this._logger.info(\"[%s] Hls stream ended\",this._streamId),this.stop(\"ended\")},this),this._onError=e.bind(function(t){var i=this,n=0===i._lastProgress.count;4===e.get(this._element,[\"error\",\"code\"])&&n&&g.call(i,d.name.hlsNativeError.name,t);p.call(this,d.name.hlsNativeError.name,t)},this),this._lastProgress={time:0,buffered:null,averageLength:0,count:0,lastCurrentTime:0,lastCurrentTimeOccurrenceTimestamp:0},this._bufferSizeHistory=[],function(){var t=this;if(!u.isSupported())return this._logger.error(\"DRM not supported by the browser\");this._encryptedMediaHandler=new u(this._logger,this._videoElement,[],e.get(this._options,\"drm\")),this._encryptedMediaHandler.addEventListener(\"error\",function(e){t._playerErrorEvent.fire([e])}),this._encryptedMediaHandler.addEventListener(\"trackRestrictionsAvailable\",function(i){e.keys(i).length>0&&(t._trackRestrictions=i)}),this._disposables.add(this._encryptedMediaHandler)}.call(this),setTimeout(e.bind(function(){this._playlist=new l(this._logger,this._uri),this._disposables.add(this._playlist),this._playlist.fetch(e.noop)},this),b)}function h(){return this._element&&0!==this._element.buffered.length}function f(e,t){if(!h.call(this))return p.call(this,e,t);g.call(this,e,t)}function g(e,t){this._playerErrorEvent.fire([y(e,d.severity.RECOVERABLE,t)])}function p(e,t){this._playerErrorEvent.fire([y(e,d.severity.CRITICAL,t)])}function m(t){if(t){if(clearTimeout(this._backgroundTimeout),this._backgroundTimeout=null,!this._backgroundThrottled)return;return this._backgroundThrottled=!1,void this.start(this._element)}var i=this;this._backgroundTimeout=setTimeout(function(){s.isForeground()||function(t){if(t.muted)return!1;return e.get(t,[\"webkitAudioDecodedByteCount\"],0)>0||e.get(t,[\"audioTracks\",\"length\"],0)>0||t.webkitHasAudio}(i._element)||(i._logger.info(\"Detecting application [background] with muted video. Pausing playback until application focused again.\"),i._element.pause(),i._backgroundThrottled=!0)},v)}function y(e,t,i){return{category:d.category.STREAMING,name:e,severity:t,error:\"Error\"===i.constructor.name?i:new Error(i)}}var _=6e3,v=3e3,b=2e3;return c.prototype.toString=function(){return e.toString(this)},c.prototype.play=function(){this._videoElement.play()},c.prototype.pause=function(){this._videoElement.pause()},c.prototype.dispose=function(){this._disposables.dispose()},c.prototype.start=function(t){if(this._uri)return this._logger.warn(\"Already started player\");this._uri=t,this._disposables.add(s.onBackground(e.bind(m,this,!1))),this._disposables.add(s.onForeground(e.bind(m,this,!0))),function(t){o.attachUriStream(t,this._uri),!1===this._options.receiveAudio&&(t.muted=!0),e.addEventListener(t,\"error\",this._onError,!0),e.addEventListener(t,\"stalled\",this._onStalled,!1),e.addEventListener(t,\"pause\",this._onStalled,!1),e.addEventListener(t,\"suspend\",this._onStalled,!1),e.addEventListener(t,\"progress\",this._onProgress,!1),e.addEventListener(t,\"ended\",this._onEnded,!1),this._element=t}.call(this,this._videoElement)},c.prototype.getBandwidthLimit=function(){return this._logger.warn(\"getBandwidthLimit not supported for HLS Native\")},c.prototype.changeBandwidthLimit=function(){return this._logger.warn(\"changeBandwidthLimit not supported for HLS Native\")},c.prototype.addEventListener=function(e,i){switch(t.isString(e,\"eventName\"),t.isFunction(i,\"listener\"),e){case\"error\":return this._playerErrorEvent.listen(i);default:throw new Error('Event \"'+e+'\" is unknown.')}},c.prototype.getStats=function(){if(!this._videoElement)return{width:0,height:0,currentTime:0,lag:0,deliveryType:\"Hls\",isNative:!0};var t=e.get(this._element,[\"currentTime\"],0),i=this._element&&this._element.buffered&&this._element.buffered.length>0?this._element.buffered.end(this._element.buffered.length-1):0,n=Math.max(0,i-t);this._bufferSizeHistory.push(n),this._bufferSizeHistory.length>15&&this._bufferSizeHistory.shift();for(var r=0,a=0,s=this._bufferSizeHistory.length;a<s;a++)r=Math.max(r,this._bufferSizeHistory[a]);var o=2;this._playlist&&this._playlist.getAllPlaylistTracks().length>0&&(o=this._playlist.getAllPlaylistTracks()[0].getChunkDuration());var l=2*o+r;return{width:this._element.videoWidth||this._element.width,height:this._element.videoHeight||this._element.height,currentTime:t,lag:l,deliveryType:\"Hls\",isNative:!0}},c.isSupported=\"object\"==typeof document&&\"maybe\"===document.createElement(\"video\").canPlayType(\"application/vnd.apple.mpegURL\"),c}.apply(t,n))&&(e.exports=r)}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-player/dist/phenix-web-player.min.js\n// module id = 29\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'protobufjs',\n    './mqProto.json'\n], function (_, ProtoBuf, mqProto) {\n    'use strict';\n\n    function MQProtocol(protocols, apiVersion) {\n        var builder = ProtoBuf.loadJson(mqProto);\n\n        _.forEach(protocols, function (protocol) {\n            builder = ProtoBuf.loadJson(protocol, builder);\n        });\n\n        this._builders = builder.build();\n        this._apiVersion = apiVersion || 3;\n    }\n\n    MQProtocol.prototype.getApiVersion = function () {\n        return this._apiVersion;\n    };\n\n    MQProtocol.prototype.encode = function (type, data) {\n        if (typeof type !== 'string') {\n            throw new Error(\"'type' must be a string\");\n        }\n\n        if (typeof data !== 'object') {\n            throw new Error(\"'data' must be an object\");\n        }\n\n        var builder = getBuilder.call(this, type);\n\n        return builder.encode(data);\n    };\n\n    MQProtocol.prototype.decode = function (type, value) {\n        if (typeof type !== 'string') {\n            throw new Error(\"'type' must be a string\");\n        }\n\n        var builder = getBuilder.call(this, type);\n\n        return convertTypes(builder.decode(value));\n    };\n\n    function getBuilder(type) {\n        var fragments = type.split('.');\n        var builder = this._builders;\n\n        for (var i = 0; i < fragments.length - 1; i++) {\n            builder = builder[fragments[i]];\n\n            if (!builder) {\n                throw new Error('Unsupported type \"' + type + '\"');\n            }\n        }\n\n        builder = builder[fragments[fragments.length - 1]];\n\n        if (typeof builder !== 'function') {\n            throw new Error('Unsupported type \"' + type + '\"');\n        }\n\n        return builder;\n    }\n\n    function convertTypes(message) {\n        if (message && message.$type && message.$type.children) {\n            _.forOwn(message.$type.children, function (child) {\n                var value = message[child.name];\n                var type = child && child.element ? child.element.resolvedType : null;\n\n                if (_.isArray(value)) {\n                    message[child.name] = [];\n\n                    _.forEach(value, function (item) {\n                        message[child.name].push(convertTypes(item));\n                    });\n                } else if (type && type.className === 'Message' && type.children) {\n                    message[child.name] = convertTypes(value);\n                } else if (type && type.className === 'Enum' && type.children) {\n                    var enumStringValue = _.getEnumName(type.children, value);\n\n                    if (enumStringValue) {\n                        message[child.name] = enumStringValue;\n                    }\n                } else if (value && _.isFunction(value.toNumber)) {\n                    // Convert long to numbers\n                    message[child.name] = value.toNumber();\n                }\n            });\n        } else if (message && _.isFunction(message.toNumber)) {\n            return message.toNumber();\n        }\n\n        return message;\n    }\n\n    return MQProtocol;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-proto/src/MQProtocol.js\n// module id = 30\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-disposable',\n    './MQProtocol',\n    'bytebuffer'\n], function (_, assert, event, disposable, MQProtocol, ByteBuffer) {\n    'use strict';\n\n    var clientRequestIdPrefix = 'C';\n    var continuationStatus = 'continuation';\n    var continuationPollInterval = 2000;\n    var continuationTimeout = 300000;\n    var defaultRequestTimeout = 18000;\n\n    function MQService(logger, sendCallback, receiveCallback, protocols, apiVersion) {\n        assert.isObject(logger, 'logger');\n        assert.isFunction(sendCallback, 'sendCallback');\n        assert.isFunction(receiveCallback, 'receiveCallback');\n\n        this._logger = logger;\n        this._mqProtocol = new MQProtocol(protocols, apiVersion);\n\n        this._nextRequestId = 0;\n        this._namedEvents = new event.NamedEvents();\n        this._requests = {};\n        this._responses = {};\n        this._requestListeners = {};\n        this._requestTimeouts = {};\n        this._requestTimestamps = {};\n        this._continuationTimeouts = {};\n\n        this._receiveCallback = receiveCallback;\n        this._sendCallback = sendCallback;\n\n        receiveCallback(_.bind(onMessage, this));\n    }\n\n    MQService.prototype.onEvent = function (eventName, handler) {\n        if (this._disposed) {\n            return this._logger.warn('Proto already disposed of. Unable to listen for event');\n        }\n\n        assert.isStringNotEmpty(eventName, 'eventName');\n        assert.isFunction(handler, 'handler');\n\n        return this._namedEvents.listen(eventName, handler);\n    };\n\n    MQService.prototype.onRequest = function (requestName, handler) {\n        if (this._disposed) {\n            return this._logger.warn('Proto already disposed of. Unable to listen for request');\n        }\n\n        assert.isStringNotEmpty(requestName, 'requestName');\n        assert.isFunction(handler, 'handler');\n\n        if (this._requestListeners[requestName]) {\n            this._logger.warn('May not set multiple handlers for the same request. Overriding existing handlers for request [%s]', requestName);\n        }\n\n        this._requestListeners[requestName] = handler;\n\n        var that = this;\n\n        return new disposable.Disposable(function() {\n            that._requestListeners[requestName] = null;\n        });\n    };\n\n    MQService.prototype.sendRequest = function sendRequest(type, message, callback, settings) {\n        if (this._disposed) {\n            this._logger.warn('Proto already disposed of. Unable to send request');\n\n            return callback(null, {status: 'proto-disposed'});\n        }\n\n        settings = settings || {};\n\n        assert.isStringNotEmpty(type, 'type');\n        assert.isObject(message, 'message');\n        assert.isObject(settings, 'settings');\n\n        if (callback) {\n            assert.isFunction(callback, 'callback');\n        }\n\n        if (settings.timeout) {\n            assert.isNumber(settings.timeout, 'settings.timeout');\n        }\n\n        var requestId = clientRequestIdPrefix + (this._nextRequestId++).toString();\n        var request = {\n            requestId: requestId,\n            type: type,\n            payload: this._mqProtocol.encode(type, message),\n            messageType: 'Request'\n        };\n\n        this._requests[requestId] = _.bind(handleResponseAndContinuations, this, requestId, type, message, settings.timeout, callback);\n\n        return sendRequestWithTimeout.call(this, requestId, request, message, settings.timeout, callback);\n    };\n\n    MQService.prototype.sendResponse = function sendResponse(requestId, type, message, callback) {\n        if (this._disposed) {\n            this._logger.warn('Proto already disposed of. Unable to send response');\n\n            return callback(null, {status: 'proto-disposed'});\n        }\n\n        assert.isStringNotEmpty(requestId, 'requestId');\n        assert.isStringNotEmpty(type, 'type');\n        assert.isObject(message, 'message');\n\n        var start = this._responses[requestId];\n\n        if (!start) {\n            this._logger.error('Already responded to request [%s]', requestId);\n\n            callback(new Error('no-response-handler'));\n        }\n\n        var response = {\n            requestId: requestId,\n            type: type,\n            payload: this._mqProtocol.encode(type, message),\n            messageType: 'Response',\n            wallTime: [_.now() - start]\n        };\n\n        encodeAndSendMessage.call(this, response, message);\n\n        delete this._responses[requestId];\n\n        return callback(null, {status: 'ok'});\n    };\n\n    MQService.prototype.disposeOfRequests = function () {\n        _.forOwn(this._requestTimeouts, function(timeout) {\n            clearTimeout(timeout);\n        });\n\n        _.forOwn(this._continuationTimeouts, function(timeout) {\n            clearTimeout(timeout);\n        });\n\n        this._requests = {};\n        this._responses = {};\n        this._requestListeners = {};\n        this._requestTimeouts = {};\n        this._requestTimestamps = {};\n        this._continuationTimeouts = {};\n    };\n\n    MQService.prototype.dispose = function () {\n        this._disposed = true;\n        this._receiveCallback = null;\n        this._sendCallback = null;\n\n        this.disposeOfRequests();\n\n        this._namedEvents.dispose();\n    };\n\n    MQService.prototype.getApiVersion = function getApiVersion() {\n        return this._mqProtocol.getApiVersion();\n    };\n\n    MQService.prototype.toString = function () {\n        return 'Proto[' + this._webSocket.toString() + ']';\n    };\n\n    function triggerEvent(eventName, args) {\n        this._namedEvents.fire(eventName, args, this);\n    }\n\n    function onMessage(evt) {\n        if (this._disposed) {\n            return this._logger.warn('Proto already disposed of. Unable process message');\n        }\n\n        var message;\n        var messageBody;\n        var callback;\n\n        try {\n            message = this._mqProtocol.decode('mq.Message', ByteBuffer.wrap(evt.data, 'base64'));\n            callback = this._requests[message.requestId];\n\n            this._logger.info('>> [%s] [%s]', message.messageType, message.type);\n\n            messageBody = this._mqProtocol.decode(message.type, message.payload);\n        } catch (e) {\n            this._logger.error(e);\n\n            if (callback) {\n                return callback(e);\n            }\n\n            throw e;\n        }\n\n        triggerReceivedEvent.call(this, message, messageBody, evt.data.length);\n\n        switch (message.messageType) {\n        case 'Response':\n            if (messageBody.status !== continuationStatus) {\n                delete this._requests[message.requestId];\n            }\n\n            clearTimeout(this._requestTimeouts[message.requestId]);\n\n            delete this._requestTimeouts[message.requestId];\n\n            if (!callback) {\n                return;\n            }\n\n            if (message.type === 'mq.Error') {\n                var error = messageBody;\n\n                return callback(error, null);\n            }\n\n            return callback(null, messageBody);\n        case 'Request':\n            var sendResponse = _.bind(this.sendResponse, this, message.requestId, message.type + 'Response');\n            var requestListener = this._requestListeners[message.type];\n\n            this._responses[message.requestId] = _.now();\n\n            if (requestListener) {\n                requestListener(messageBody, sendResponse);\n            } else {\n                this._logger.info('Received request without a subscribed listener');\n            }\n\n            break;\n        case 'Event':\n            return triggerEvent.call(this, message.type, [messageBody]);\n        default:\n            return this._logger.warn('>> Unsupported message type [%s]', message.messageType);\n        }\n    }\n\n    function handleResponseAndContinuations(requestId, type, message, timeout, callback, error, response) {\n        if (response && response.status === continuationStatus) {\n            if (!this._continuationTimeouts[requestId] && this._requests[requestId]) {\n                this._continuationTimeouts[requestId] = listenForContinuationTimeout.call(this, requestId, callback);\n            }\n\n            return sendRequestWithContinuation.call(this, requestId, type, message, response, timeout, callback);\n        }\n\n        clearTimeout(this._continuationTimeouts[requestId]);\n\n        delete this._continuationTimeouts[requestId];\n\n        return callback(error, response);\n    }\n\n    function sendRequestWithContinuation(requestId, type, message, response, timeout, callback) {\n        if (!response || (!response.continuationId && !response.routeKey)) {\n            this._logger.warn('Received request for continuation without a continuationId or routeKey');\n\n            return callback();\n        }\n\n        var messageWithContinuation = _.assign({}, message, {\n            continuationId: response.continuationId,\n            routeKey: response.routeKey\n        });\n        var request = {\n            requestId: requestId,\n            type: type,\n            payload: this._mqProtocol.encode(type, messageWithContinuation),\n            messageType: 'Request'\n        };\n        var that = this;\n\n        return setTimeout(function() {\n            if (!that._requests[requestId]) {\n                return;\n            }\n\n            return sendRequestWithTimeout.call(that, requestId, request, messageWithContinuation, timeout, callback);\n        }, continuationPollInterval);\n    }\n\n    function sendRequestWithTimeout(requestId, request, payload, timeout, callback) {\n        if (this._requestTimeouts[requestId]) {\n            clearTimeout(this._requestTimeouts[requestId]);\n        }\n\n        var requestTimeout = timeout || defaultRequestTimeout;\n\n        this._requestTimeouts[requestId] = setTimeout(_.bind(handleRequestTimeout, this, requestId, requestTimeout, callback), requestTimeout);\n\n        return encodeAndSendMessage.call(this, request, payload);\n    }\n\n    function encodeAndSendMessage(message, payload) {\n        var encodedMessage = this._mqProtocol.encode('mq.Message', message).toString('base64');\n\n        triggerSentEvent.call(this, message, payload, encodedMessage.length);\n\n        return this._sendCallback(encodedMessage);\n    }\n\n    function listenForContinuationTimeout(requestId, callback) {\n        return setTimeout(_.bind(handleRequestTimeout, this, requestId, continuationTimeout, callback), continuationTimeout);\n    }\n\n    function handleRequestTimeout(requestId, timeout, callback) {\n        if (!this._requests[requestId]) {\n            return;\n        }\n\n        triggerTimeoutEvent.call(this, requestId, timeout);\n\n        this._logger.warn('Request [%s] has not completed in [%s] ms. Dropping request.', requestId, timeout);\n\n        delete this._requests[requestId];\n\n        return callback(null, {status: 'timeout'});\n    }\n\n    function triggerReceivedEvent(message, payload, bytes) {\n        var now = _.now();\n        var sentTimestamp = this._requestTimestamps[message.requestId];\n\n        if (_.isNumber(sentTimestamp)) {\n            var totalRequestTime = now - sentTimestamp;\n\n            message.wallTime = [totalRequestTime].concat(message.wallTime);\n        }\n\n        this._namedEvents.fireAsync('received', [{\n            key: message.requestId,\n            messageType: message.messageType,\n            type: message.type,\n            wallTime: message.wallTime,\n            received: now,\n            bytes: bytes,\n            payload: payload\n        }]);\n\n        delete this._requestTimestamps[message.requestId];\n    }\n\n    function triggerSentEvent(message, payload, bytes) {\n        var now = _.now();\n\n        this._requestTimestamps[message.requestId] = now;\n\n        this._namedEvents.fireAsync('sent', [{\n            key: message.requestId,\n            messageType: message.messageType,\n            type: message.type,\n            received: now,\n            bytes: bytes,\n            payload: payload\n        }]);\n    }\n\n    function triggerTimeoutEvent(requestId, timeout) {\n        this._namedEvents.fireAsync('timeout', [{\n            key: requestId,\n            timeout: timeout\n        }]);\n\n        delete this._requestTimestamps[requestId];\n    }\n\n    return MQService;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-proto/src/MQService.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-http',\n    'phenix-web-disposable'\n], function(_, assert, http, disposable) {\n    'use strict';\n\n    var networkUnavailableCode = 0;\n    var requestMaxTimeout = 20000;\n    var defaultRequestOptions = {\n        timeout: requestMaxTimeout,\n        retryOptions: {\n            backoff: 1.5,\n            delay: 1000,\n            maxAttempts: 3,\n            additionalRetryErrorCodes: [networkUnavailableCode]\n        }\n    };\n\n    function AdminAPI(backendUri, authenticationData) {\n        assert.isStringNotEmpty(backendUri, 'backendUri');\n        assert.isObject(authenticationData, 'authenticationData');\n\n        this._backendUri = backendUri;\n        this._authenticationData = authenticationData;\n        this._disposables = new disposable.DisposableList();\n    }\n\n    AdminAPI.prototype.dispose = function() {\n        return this._disposables.dispose();\n    };\n\n    AdminAPI.prototype.createAuthenticationToken = function createAuthenticationToken(callback) {\n        var data = appendAuthDataTo.call(this, {});\n        var requestWithoutCallback = _.bind(http.postWithRetry, http, this._backendUri + '/auth', JSON.stringify(data), defaultRequestOptions);\n\n        return requestWithTimeout.call(this, requestWithoutCallback, callback);\n    };\n\n    AdminAPI.prototype.createStreamTokenForPublishing = function createStreamTokenForPublishing(sessionId, capabilities, callback) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n        assert.isObject(capabilities, 'capabilities');\n\n        var data = appendAuthDataTo.call(this, {\n            sessionId: sessionId,\n            capabilities: capabilities\n        });\n        var requestWithoutCallback = _.bind(http.postWithRetry, http, this._backendUri + '/stream', JSON.stringify(data), defaultRequestOptions);\n\n        return requestWithTimeout.call(this, requestWithoutCallback, callback);\n    };\n\n    AdminAPI.prototype.createStreamTokenForSubscribing = function createStreamTokenForSubscribing(sessionId, capabilities, streamId, alternateStreamIds, callback) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n        assert.isObject(capabilities, 'capabilities');\n\n        if (!_.isNullOrUndefined(alternateStreamIds)) {\n            assert.isArray(alternateStreamIds, 'additionalStreamIds');\n\n            _.forEach(alternateStreamIds, function(alternateOriginStreamId) {\n                assert.isStringNotEmpty(alternateOriginStreamId, 'alternateOriginStreamId');\n            });\n        }\n\n        var data = appendAuthDataTo.call(this, {\n            sessionId: sessionId,\n            capabilities: capabilities,\n            originStreamId: streamId\n        });\n\n        if (alternateStreamIds && alternateStreamIds.length > 0) {\n            data.alternateOriginStreamIds = alternateStreamIds;\n        }\n\n        var requestWithoutCallback = _.bind(http.postWithRetry, http, this._backendUri + '/stream', JSON.stringify(data), defaultRequestOptions);\n\n        return requestWithTimeout.call(this, requestWithoutCallback, callback);\n    };\n\n    AdminAPI.prototype.getStreams = function getStreams(callback) {\n        var requestWithoutCallback = _.bind(http.getWithRetry, http, this._backendUri + '/streams', defaultRequestOptions);\n\n        return requestWithTimeout.call(this, requestWithoutCallback, callback);\n    };\n\n    function requestWithTimeout(requestWithoutCallback, callback) {\n        var requestTimeoutId = null;\n        var requestDisposable = requestWithoutCallback(_.bind(handleResponse, this, function(error, response) {\n            clearTimeout(requestTimeoutId);\n\n            callback(error, response);\n        }));\n\n        requestTimeoutId = setTimeout(function() {\n            requestDisposable.dispose();\n            callback(new Error('timeout'));\n        }, requestMaxTimeout);\n\n        this._disposables.add(requestDisposable);\n        this._disposables.add(new disposable.Disposable(function() {\n            clearTimeout(requestTimeoutId);\n        }));\n    }\n\n    function appendAuthDataTo(data) {\n        return _.assign({}, data, this._authenticationData);\n    }\n\n    function handleResponse(callback, error, response) {\n        if (error) {\n            return callback(error, {});\n        }\n\n        var res = JSON.parse(response.data);\n\n        if (res.status !== 'ok') {\n            return callback(null, {status: res.status});\n        }\n\n        return callback(null, res);\n    }\n\n    return AdminAPI;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/AdminAPI.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-rtc'\n], function(rtc) {\n    'use strict';\n\n    function AudioContext() {\n        this.init();\n    }\n\n    AudioContext.prototype.init = function init() {\n        if (!rtc.global.AudioContext && !rtc.global.webkitAudioContext) {\n            throw new Error('Browser does not support AudioContext');\n        }\n\n        this._audioContext = new (rtc.global.AudioContext || rtc.global.webkitAudioContext)();\n    };\n\n    AudioContext.prototype.getNativeAudioContext = function getNativeAudioContext() {\n        return this._audioContext;\n    };\n\n    AudioContext.prototype.toString = function toString() {\n        return 'AudioContext';\n    };\n\n    return AudioContext;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/audio/AudioContext.js\n// module id = 33\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    function AuthenticationService(pcast) {\n        assert.isObject(pcast, 'pcast');\n        assert.isFunction(pcast.getObservableStatus, 'pcast.getObservableStatus');\n        assert.isFunction(pcast.getLogger, 'pcast.getLogger');\n        assert.isFunction(pcast.getProtocol, 'pcast.getProtocol');\n\n        if (this._pcast === pcast) {\n            return;\n        }\n\n        this._pcast = pcast;\n        this._logger = pcast.getLogger();\n        this._protocol = pcast.getProtocol();\n\n        assert.isObject(this._logger, 'this._logger');\n        assert.isObject(this._protocol, 'this._protocol');\n        assert.isFunction(this._protocol.getObservableSessionId, 'this._protocol.getObservableSessionId');\n        assert.isFunction(this._pcast.getObservableStatus, 'this._pcast.getObservableStatus');\n\n        this._sessionId = this._protocol.getObservableSessionId();\n        this._status = this._pcast.getObservableStatus();\n    }\n\n    AuthenticationService.prototype.assertAuthorized = function assertAuthorized() {\n        if (!validPCastStatus(this.getPCastStatus())) {\n            throw new Error('Unable to perform action. Status [%s]. Please wait to reconnect.', this.getPCastStatus());\n        }\n\n        if (!validPCastSessionId(this.getPCastSessionId())) {\n            throw new Error('Unable to perform action. Invalid sessionId [%s]', this.getPCastSessionId());\n        }\n    };\n\n    AuthenticationService.prototype.getObservableSessionId = function getObservableSessionId() {\n        return this._sessionId;\n    };\n\n    AuthenticationService.prototype.getObservableStatus = function getObservableStatus() {\n        return this._status;\n    };\n\n    AuthenticationService.prototype.getPCastSessionId = function getPCastSessionId() {\n        return this._sessionId.getValue();\n    };\n\n    AuthenticationService.prototype.getPCastStatus = function getPCastStatus() {\n        return this._status.getValue();\n    };\n\n    function validPCastSessionId(sessionId) {\n        return sessionId !== null && sessionId !== undefined && sessionId !== '';\n    }\n\n    function validPCastStatus(status) {\n        return status !== null && status !== undefined && status !== '' && status.toLowerCase() !== 'offline';\n    }\n\n    return AuthenticationService;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/authentication/AuthenticationService.js\n// module id = 34\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light'\n], function(_) {\n    'use strict';\n\n    var environment = {};\n\n    environment.parseEnvFromPcastBaseUri = function(uri) {\n        uri = uri.toLowerCase();\n\n        if (_.includes(uri, 'local')) {\n            return 'local';\n        } else if (_.includes(uri, 'stg')) {\n            return 'staging';\n        }\n\n        return 'production';\n    };\n\n    return environment;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/environment.js\n// module id = 35\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    var mostRecentStrategy = 'most-recent';\n    var highAvailabilityStrategy = 'high-availability';\n    var blacklistedTimeoutInterval = 3 * 60 * 1000;\n\n    function MemberSelector(selectionStrategy, logger) {\n        if (selectionStrategy) {\n            assert.isStringNotEmpty(selectionStrategy, 'selectionStrategy');\n        }\n\n        assert.isObject(logger, 'logger');\n\n        this._selectionStrategy = selectionStrategy || mostRecentStrategy;\n        this._logger = logger;\n        this._lastSelectedMember = null;\n        this._blackListedMembers = [];\n    }\n\n    MemberSelector.prototype.getNext = function getNext(members, forceNewSelection) {\n        var newSelectedMember = getNextMember.call(this, members, forceNewSelection);\n\n        if (this.getNumberOfBlackListedMembers() > 0 && hasExceededBlacklistedTimeoutInterval.call(this) && !newSelectedMember) {\n            this._logger.info('Unable to select new member. Clearing [%s] black-listed members and trying again', this.getNumberOfBlackListedMembers());\n\n            this.clearBlackListedMembers();\n\n            return this.getNext(members, forceNewSelection);\n        }\n\n        if (this._lastSelectedMember !== newSelectedMember) {\n            if (!newSelectedMember) {\n                this._logger.info('Unable to select new member');\n            } else {\n                this._logger.info('Selecting new Member [%s]/[%s]', newSelectedMember.getSessionId(), newSelectedMember.getObservableScreenName().getValue());\n            }\n\n            if (this._lastSelectedMember && !isBlackListed.call(this, this._lastSelectedMember)) {\n                addBlacklistedMember.call(this, this._lastSelectedMember);\n            }\n        }\n\n        this._lastSelectedMember = newSelectedMember;\n\n        return newSelectedMember;\n    };\n\n    MemberSelector.prototype.getStrategy = function() {\n        return this._selectionStrategy;\n    };\n\n    MemberSelector.prototype.clearBlackListedMembers = function() {\n        this._blackListedMembers = [];\n    };\n\n    MemberSelector.prototype.getNumberOfBlackListedMembers = function() {\n        return this._blackListedMembers.length;\n    };\n\n    MemberSelector.prototype.dispose = function dispose() {\n        this._lastSelectedMember = null;\n        this._blackListedMembers = [];\n    };\n\n    MemberSelector.getSimilarMembers = function(screenName, members) {\n        var otherMembers = _.filter(members, function(member) {\n            return member.getObservableScreenName().getValue() !== screenName;\n        });\n        var primaryMembers = _.filter(otherMembers, isPrimary);\n        var alternateMembers = _.filter(otherMembers, isAlternate);\n\n        if (isPrimaryName(screenName)) {\n            return primaryMembers || alternateMembers || otherMembers;\n        }\n\n        if (isAlternateName(screenName)) {\n            return alternateMembers || primaryMembers || otherMembers;\n        }\n\n        return otherMembers || primaryMembers || alternateMembers;\n    };\n\n    function isBlackListed(member) {\n        return !!_.find(this._blackListedMembers, function(blackListedMember) {\n            return blackListedMember.key === getMemberKey(member);\n        });\n    }\n\n    function addBlacklistedMember(member) {\n        if (!member) {\n            return;\n        }\n\n        this._blackListedMembers.push({\n            key: getMemberKey(member),\n            timestamp: _.now()\n        });\n    }\n\n    function hasExceededBlacklistedTimeoutInterval() {\n        var totalTime = _.reduce(this._blackListedMembers, function(total, blackListedMember) {\n            return total + _.now() - blackListedMember.timestamp;\n        }, 0);\n\n        return totalTime > blacklistedTimeoutInterval;\n    }\n\n    function getMemberKey(member) {\n        if (!member) {\n            return '';\n        }\n\n        return member.getSessionId() + member.getObservableScreenName().getValue();\n    }\n\n    function getNextMember(members, forceNewSelection) {\n        switch (this._selectionStrategy) {\n        case mostRecentStrategy:\n            return getMostRecentMember(members);\n        case highAvailabilityStrategy:\n            if (this._lastSelectedMember && !forceNewSelection) {\n                return this._lastSelectedMember;\n            }\n\n            var allowedMembers = getAllowedMembers.call(this, members);\n\n            if (forceNewSelection) {\n                allowedMembers = removeMember(allowedMembers, this._lastSelectedMember);\n            }\n\n            var candidates = _.filter(allowedMembers, isPrimary);\n\n            if (candidates.length === 0) {\n                candidates = _.filter(allowedMembers, isAlternate);\n            }\n\n            if (candidates.length === 0) {\n                candidates = allowedMembers;\n            }\n\n            return _.sample(candidates);\n        default:\n            throw new Error('Invalid Selection Strategy');\n        }\n    }\n\n    function getMostRecentMember(members) {\n        return _.reduce(members, function(memberA, memberB) {\n            if (!memberA) {\n                return memberB;\n            }\n\n            return memberA.getLastUpdate() > memberB.getLastUpdate() ? memberA : memberB;\n        });\n    }\n\n    function isPrimary(member) {\n        var screenName = member.getObservableScreenName().getValue();\n\n        return isPrimaryName(screenName);\n    }\n\n    function isAlternate(member) {\n        var screenName = member.getObservableScreenName().getValue();\n\n        return isAlternateName(screenName);\n    }\n\n    function isPrimaryName(name) {\n        var primary = /primary/i;\n\n        return primary.test(name);\n    }\n\n    function isAlternateName(name) {\n        var alternate = /alternate/i;\n\n        return alternate.test(name);\n    }\n\n    function getAllowedMembers(members) {\n        var that = this;\n\n        return _.filter(members, function(member) {\n            return !isBlackListed.call(that, member);\n        });\n    }\n\n    function removeMember(members, memberToRemove) {\n        return _.filter(members, function(member) {\n            return getMemberKey(member) !== getMemberKey(memberToRemove);\n        });\n    }\n\n    return MemberSelector;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/express/MemberSelector.js\n// module id = 36\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var telemetryProto = {\n        \"package\": \"telemetry\",\n        \"messages\": [\n            {\n                \"name\": \"LogData\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"LogLevel\",\n                        \"name\": \"level\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"timestamp\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"category\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"message\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"source\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"fullQualifiedName\",\n                        \"id\": 11\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"userId\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"environment\",\n                        \"id\": 8\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"version\",\n                        \"id\": 9\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"float\",\n                        \"name\": \"runtime\",\n                        \"id\": 10\n                    }\n                ]\n            },\n            {\n                \"name\": \"StoreLogRecords\",\n                \"fields\": [\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"LogData\",\n                        \"name\": \"records\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"StoreLogRecordsResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"storedRecords\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"MetricValue\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"string\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"float\",\n                        \"name\": \"float\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"uint64\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"int64\",\n                        \"name\": \"int64\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"bool\",\n                        \"name\": \"boolean\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"timestamp\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"MetricData\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"timestamp\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"source\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"resource\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"kind\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Metric\",\n                        \"name\": \"metric\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MetricValue\",\n                        \"name\": \"value\",\n                        \"id\": 8\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MetricValue\",\n                        \"name\": \"previousValue\",\n                        \"id\": 9\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"elapsed\",\n                        \"id\": 10\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"fullQualifiedName\",\n                        \"id\": 11\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"environment\",\n                        \"id\": 12\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"version\",\n                        \"id\": 13\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"tool\",\n                        \"id\": 14\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"toolVersion\",\n                        \"id\": 15\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"float\",\n                        \"name\": \"runtime\",\n                        \"id\": 16\n                    }\n                ]\n            },\n            {\n                \"name\": \"SubmitMetricRecords\",\n                \"fields\": [\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"MetricData\",\n                        \"name\": \"records\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"SubmitMetricRecordsResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"storedRecords\",\n                        \"id\": 2\n                    }\n                ]\n            }\n        ],\n        \"enums\": [\n            {\n                \"name\": \"LogLevel\",\n                \"values\": [\n                    {\n                        \"name\": \"Trace\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"Debug\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"Info\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"Warn\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"Error\",\n                        \"id\": 4\n                    },\n                    {\n                        \"name\": \"Fatal\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"Metric\",\n                \"values\": [\n                    {\n                        \"name\": \"RoundTripTime\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"DownlinkThroughputCapacity\",\n                        \"id\": 26\n                    },\n                    {\n                        \"name\": \"Initialized\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"Provisioned\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"SetupCompleted\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"Offset\",\n                        \"id\": 4\n                    },\n                    {\n                        \"name\": \"TimeToFirstFrame\",\n                        \"id\": 5\n                    },\n                    {\n                        \"name\": \"Playing\",\n                        \"id\": 6\n                    },\n                    {\n                        \"name\": \"Stalled\",\n                        \"id\": 7\n                    },\n                    {\n                        \"name\": \"Buffering\",\n                        \"id\": 8\n                    },\n                    {\n                        \"name\": \"Seeking\",\n                        \"id\": 22\n                    },\n                    {\n                        \"name\": \"Stopped\",\n                        \"id\": 9\n                    },\n                    {\n                        \"name\": \"BitRateAdaptation\",\n                        \"id\": 10\n                    },\n                    {\n                        \"name\": \"ResolutionChanged\",\n                        \"id\": 11\n                    },\n                    {\n                        \"name\": \"DisplayResolutionChanged\",\n                        \"id\": 23\n                    },\n                    {\n                        \"name\": \"VideoBitRate\",\n                        \"id\": 28\n                    },\n                    {\n                        \"name\": \"AudioBitRate\",\n                        \"id\": 29\n                    },\n                    {\n                        \"name\": \"FrameRateChanged\",\n                        \"id\": 12\n                    },\n                    {\n                        \"name\": \"FramesDropped\",\n                        \"id\": 13\n                    },\n                    {\n                        \"name\": \"PacketsLost\",\n                        \"id\": 14\n                    },\n                    {\n                        \"name\": \"PictureLost\",\n                        \"id\": 15\n                    },\n                    {\n                        \"name\": \"PlayoutDelayChanged\",\n                        \"id\": 16\n                    },\n                    {\n                        \"name\": \"CodecChanged\",\n                        \"id\": 17\n                    },\n                    {\n                        \"name\": \"PlayerEvent\",\n                        \"id\": 21\n                    },\n                    {\n                        \"name\": \"MetricDropped\",\n                        \"id\": 18\n                    },\n                    {\n                        \"name\": \"NetworkOffline\",\n                        \"id\": 19\n                    },\n                    {\n                        \"name\": \"NetworkOnline\",\n                        \"id\": 20\n                    },\n                    {\n                        \"name\": \"NetworkType\",\n                        \"id\": 27\n                    },\n                    {\n                        \"name\": \"ApplicationForeground\",\n                        \"id\": 24\n                    },\n                    {\n                        \"name\": \"ApplicationBackground\",\n                        \"id\": 25\n                    }\n                ]\n            }\n        ]\n    };\n\n    return telemetryProto;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/protocol/telemetryProto.json.js\n// module id = 37\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    function Channel(room) {\n        assert.isObject(room, 'room');\n\n        this._room = room;\n    }\n\n    Channel.prototype.getChannelId = function getChannelId() {\n        return this._room.getRoomId.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableAlias = function getObservableAlias() {\n        return this._room.getObservableAlias.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableName = function getObservableName() {\n        return this._room.getObservableName.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableDescription = function getObservableDescription() {\n        return this._room.getObservableDescription.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableType = function getObservableType() {\n        return this._room.getObservableType.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableMembers = function getObservableMembers() {\n        return this._room.getObservableMembers.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservableBridgeId = function getObservableBridgeId() {\n        return this._room.getObservableBridgeId.apply(this._room, arguments);\n    };\n\n    Channel.prototype.getObservablePin = function getObservablePin() {\n        return this._room.getObservablePin.apply(this._room, arguments);\n    };\n\n    Channel.prototype.toString = function toString() {\n        return this._room.toString.apply(this._room, arguments);\n    };\n\n    Channel.prototype.toJson = function toJson() {\n        return {\n            channelId: this._room.getRoomId(),\n            alias: this._room.getObservableAlias().getValue(),\n            name: this._room.getObservableName().getValue(),\n            description: this._room.getObservableDescription().getValue(),\n            type: this._room.getObservableType().getValue(),\n            pin: this._room.getObservablePin().getValue(),\n            bridgeId: this._room.getObservableBridgeId().getValue()\n        };\n    };\n\n    Channel.prototype.commitChanges = function commitChanges() {\n        return this._room.commitChanges.apply(this._room, arguments);\n    };\n\n    Channel.prototype.reload = function reload() {\n        return this._room.reload.apply(this._room, arguments);\n    };\n\n    Channel.prototype._update = function update() {\n        return this._room._update.apply(this._room, arguments);\n    };\n\n    Channel.prototype._addMembers = function addMembers() {\n        return this._room._addMembers.apply(this._room, arguments);\n    };\n\n    Channel.prototype._removeMembers = function removeMembers() {\n        return this._room._removeMembers.apply(this._room, arguments);\n    };\n\n    Channel.prototype._updateMembers = function updateMembers() {\n        return this._room._updateMembers.apply(this._room, arguments);\n    };\n\n    return Channel;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/Channel.js\n// module id = 38\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    './Stream',\n    './member.json'\n], function(_, assert, observable, Stream, member) {\n    'use strict';\n    var memberRoles = member.roles;\n    var memberStates = member.states;\n\n    function Member(roomService, state, sessionId, screenName, role, streams, lastUpdate) {\n        this.init(roomService, state, sessionId, screenName, role, streams, lastUpdate);\n    }\n\n    Member.prototype.init = function init(roomService, state, sessionId, screenName, role, streams, lastUpdate) {\n        assert.isString(sessionId, 'sessionId');\n        assert.isString(screenName, 'screenName');\n        assert.isArray(streams, 'streams');\n        assert.isNumber(_.utc(lastUpdate), 'lastUpdate');\n\n        if (roomService) {\n            assert.isObject(roomService, 'roomService');\n        }\n\n        this._sessionId = new observable.Observable(sessionId);\n        this._screenName = new observable.Observable(screenName);\n        this._streams = new observable.ObservableArray([]);\n\n        this._state = new observable.Observable(state, assertIsValidMemberState).extend({rateLimit: 500});\n        this._role = new observable.Observable(role, assertIsValidMemberRole);\n        this._lastUpdate = new observable.Observable(lastUpdate, _.utc);\n        this._roomService = roomService;\n\n        this.setStreams(streams);\n    };\n\n    Member.prototype.getObservableState = function getObservableState() {\n        return this._state;\n    };\n\n    Member.prototype.getSessionId = function getSessionId() {\n        return this._sessionId.getValue();\n    };\n\n    Member.prototype.getObservableScreenName = function getObservableScreenName() {\n        return this._screenName;\n    };\n\n    Member.prototype.getObservableRole = function getObservableRole() {\n        return this._role;\n    };\n\n    Member.prototype.getObservableStreams = function getObservableStreams() {\n        return this._streams;\n    };\n\n    Member.prototype.getObservableLastUpdate = function getObservableLastUpdate() {\n        return this._lastUpdate;\n    };\n\n    Member.prototype.getLastUpdate = function getLastUpdate() {\n        return this._lastUpdate.getValue();\n    };\n\n    Member.prototype.getStreams = function getStreams() {\n        return _.map(this._streams.getValue(), function mapToJson(stream) {\n            return stream.toJson();\n        });\n    };\n\n    Member.prototype.commitChanges = function commitChanges(callback) {\n        assert.isObject(this._roomService, 'this._roomService');\n\n        this._roomService.updateMember(this, callback);\n    };\n\n    Member.prototype.reload = function reload() {\n        assert.isObject(this._roomService, 'this._roomService');\n\n        this._roomService.revertMemberChanges(this);\n    };\n\n    Member.prototype.setStreams = function setStreams(streams) {\n        var newStreams = _.map(streams, function(stream) {\n            return createNewObservableStream(stream);\n        });\n\n        this._streams.setValue(newStreams);\n    };\n\n    Member.prototype.toString = function toString() {\n        return this.getObservableRole().getValue() + '[' + this.getObservableScreenName().getValue() + ',' + this.getSessionId() + ']';\n    };\n\n    Member.prototype.toJson = function toJson() {\n        var member = {\n            sessionId: this._sessionId.getValue(),\n            screenName: this._screenName.getValue(),\n            role: this._role.getValue(),\n            state: this._state.getValue(),\n            streams: [],\n            lastUpdate: this._lastUpdate.getValue()\n        };\n\n        _.forEach(this._streams.getValue(), function(stream) {\n            member.streams.push(stream.toJson());\n        });\n\n        return member;\n    };\n\n    Member.prototype._update = function update(member) {\n        if (!_.isObject(member)) {\n            return;\n        }\n\n        if (member.hasOwnProperty('state')) {\n            this._state.setValue(member.state);\n        }\n\n        if (member.hasOwnProperty('screenName')) {\n            this._screenName.setValue(member.screenName);\n        }\n\n        if (member.hasOwnProperty('role')) {\n            this._role.setValue(member.role);\n        }\n\n        if (member.hasOwnProperty('lastUpdate')) {\n            this._lastUpdate.setValue(member.lastUpdate);\n        }\n\n        if (member.hasOwnProperty('streams')) {\n            updateStreams.call(this, member.streams);\n        }\n    };\n\n    function createNewObservableStream(stream) {\n        return new Stream(stream.uri, stream.type, stream.audioState, stream.videoState);\n    }\n\n    function updateStreams(streams) {\n        // Iterate through new streams object, update those that have changed, push new ones, remove old ones\n        var oldObservableStreams = this._streams.getValue();\n        var newObservableStreams = [];\n\n        _.forEach(streams, function(stream) {\n            var pcastStreamId = Stream.parsePCastStreamIdFromStreamUri(stream.uri);\n            var streamToUpdate = _.find(oldObservableStreams, function(observableStream) {\n                var hasSameUri = observableStream.getUri() === stream.uri;\n                var hasSamePCastStreamId = observableStream.isPCastStream() && observableStream.getPCastStreamId() === pcastStreamId;\n                var hasSameIdentifier = hasSameUri || hasSamePCastStreamId;\n\n                return observableStream.getType() === stream.type && hasSameIdentifier;\n            });\n\n            if (streamToUpdate) {\n                streamToUpdate._update(stream);\n            } else {\n                streamToUpdate = createNewObservableStream(stream);\n            }\n\n            newObservableStreams.push(streamToUpdate);\n        });\n\n        this._streams.setValue(newObservableStreams);\n    }\n\n    function assertIsValidMemberRole(role) {\n        role = _.getEnumName(memberRoles, role);\n\n        if (!role) {\n            throw new Error('\"role\" must be a valid member role');\n        }\n\n        return role;\n    }\n\n    function assertIsValidMemberState(state) {\n        state = _.getEnumName(memberStates, state);\n\n        if (!state) {\n            throw new Error('\"state\" must be a valid member state');\n        }\n\n        return state;\n    }\n\n    return Member;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/Member.js\n// module id = 39\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    './Member',\n    './room.json'\n], function(_, assert, observable, Member, room) {\n    'use strict';\n    var roomTypes = room.types;\n\n    function Room(roomService, id, alias, name, description, type, members, bridgeId, pin) {\n        this.init(roomService, id, alias, name, description, type, members, bridgeId, pin);\n    }\n\n    Room.prototype.init = function init(roomService, id, alias, name, description, type, members, bridgeId, pin) {\n        assert.isStringNotEmpty(name, 'name');\n        assert.isStringNotEmpty(description, 'description');\n        assert.isArray(members, 'members');\n\n        if (id) {\n            assert.isStringNotEmpty(id, 'id');\n        }\n\n        if (alias) {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        if (bridgeId) {\n            assert.isStringNotEmpty(bridgeId, 'bridgeId');\n        }\n\n        if (pin) {\n            assert.isStringNotEmpty(pin, 'pin');\n        }\n\n        if (roomService) {\n            assert.isObject(roomService, 'roomService');\n        }\n\n        this._roomId = new observable.Observable(id);\n        this._alias = new observable.Observable(alias);\n        this._name = new observable.Observable(name);\n        this._description = new observable.Observable(description);\n        this._type = new observable.Observable(type, assertIsValidRoomType);\n        this._members = new observable.ObservableArray([]).extend({\n            method: \"notifyWhenChangesStop\",\n            timeout: 400\n        });\n        this._options = new observable.ObservableArray();\n        this._bridgeId = new observable.Observable(bridgeId);\n        this._pin = new observable.Observable(pin);\n        this._roomService = roomService;\n\n        setMembers.call(this, members);\n    };\n\n    Room.prototype.getRoomId = function getRoomId() {\n        return this._roomId.getValue();\n    };\n\n    Room.prototype.getObservableAlias = function getObservableAlias() {\n        return this._alias;\n    };\n\n    Room.prototype.getObservableName = function getObservableName() {\n        return this._name;\n    };\n\n    Room.prototype.getObservableDescription = function getObservableDescription() {\n        return this._description;\n    };\n\n    Room.prototype.getObservableType = function getObservableType() {\n        return this._type;\n    };\n\n    Room.prototype.getObservableMembers = function getObservableMembers() {\n        return this._members;\n    };\n\n    Room.prototype.getObservableBridgeId = function getObservableBridgeId() {\n        return this._bridgeId;\n    };\n\n    Room.prototype.getObservablePin = function getObservablePin() {\n        return this._pin;\n    };\n\n    Room.prototype.toString = function toString() {\n        return this._type.getValue() + '[' + this._roomId.getValue() + ']';\n    };\n\n    Room.prototype.toJson = function toJson() {\n        return {\n            roomId: this._roomId.getValue(),\n            alias: this._alias.getValue(),\n            name: this._name.getValue(),\n            description: this._description.getValue(),\n            type: this._type.getValue(),\n            pin: this._pin.getValue(),\n            bridgeId: this._bridgeId.getValue()\n        };\n    };\n\n    Room.prototype.commitChanges = function commitChanges(callback) {\n        assert.isObject(this._roomService, 'this._roomService');\n\n        this._roomService.updateRoom(this, callback);\n    };\n\n    Room.prototype.reload = function reload() {\n        assert.isObject(this._roomService, 'this._roomService');\n\n        this._roomService.revertRoomChanges(this);\n    };\n\n    Room.prototype._update = function update(room) {\n        if (!_.isObject(room)) {\n            return;\n        }\n\n        if (room.roomId) {\n            this._roomId.setValue(room.roomId);\n        }\n\n        if (room.alias) {\n            this._alias.setValue(room.alias);\n        }\n\n        if (room.name) {\n            this._name.setValue(room.name);\n        }\n\n        if (room.description) {\n            this._description.setValue(room.description);\n        }\n\n        if (room.type) {\n            this._type.setValue(room.type);\n        }\n\n        if (room.options) {\n            this._options.setValue(room.options);\n        }\n\n        if (room.bridgeId) {\n            this._bridgeId.setValue(room.bridgeId);\n        }\n\n        if (room.pin) {\n            this._pin.setValue(room.pin);\n        }\n\n        if (room.members) {\n            // DO NOTHING -- members updated by member events\n        }\n    };\n\n    Room.prototype._addMembers = function addMembers(members) {\n        var that = this;\n\n        var newMembers = mapMembers(members);\n\n        _.forEach(newMembers, function(member) {\n            that._members.push(member);\n        });\n    };\n\n    Room.prototype._removeMembers = function removeMembers(members) {\n        var that = this;\n\n        _.forEach(members, function(member) {\n            that._members.remove(function(observableMember) {\n                return member.sessionId === observableMember.getSessionId()\n                    && member.lastUpdate >= observableMember.getObservableLastUpdate().getValue();\n            });\n        });\n    };\n\n    Room.prototype._updateMembers = function updateMembers(members) {\n        _.forEach(this._members.getValue(), function(observableMember) {\n            var memberToUpdate = _.find(members, function(member) {\n                return observableMember.getSessionId() === member.sessionId && member.lastUpdate > observableMember.getObservableLastUpdate().getValue();\n            });\n\n            if (memberToUpdate) {\n                observableMember._update(memberToUpdate);\n            }\n        });\n    };\n\n    function setMembers(members) {\n        var newMembers = mapMembers(members, this._roomService);\n\n        this._members.setValue(newMembers);\n    }\n\n    function mapMembers(members, roomService) {\n        return _.map(members, function(member) {\n            return new Member(roomService, member.state, member.sessionId, member.screenName, member.role, member.streams, member.lastUpdate);\n        });\n    }\n\n    function assertIsValidRoomType(type) {\n        type = _.getEnumName(roomTypes, type);\n\n        if (!type) {\n            throw new Error('\"type\" must be a valid room type');\n        }\n\n        return type;\n    }\n\n    return Room;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/Room.js\n// module id = 40\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var trackEnums = {\n        states: {\n            trackEnabled: {\n                id: 0,\n                name: 'TrackEnabled'\n            },\n            trackDisabled: {\n                id: 1,\n                name: 'TrackDisabled'\n            },\n            trackEnded: {\n                id: 2,\n                name: 'TrackEnded'\n            }\n        }\n    };\n\n    return trackEnums;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/track.json.js\n// module id = 41\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine(['phenix-web-lodash-light'], function(_) {\n    'use strict';\n\n    // TODO(dy) wrap PC in this class\n    function PeerConnection() {\n\n    }\n\n    PeerConnection.convertPeerConnectionStats = function(stats, lastStats) {\n        return convertPeerConnectionStats(stats, lastStats);\n    };\n\n    function convertPeerConnectionStats(stats, lastStats) {\n        if (!stats) {\n            return null;\n        }\n\n        var newStats = [];\n\n        var convertStats = function convertStats(ssrc, mediaType, timestamp, bytesSent, bytesReceived, direction) {\n            if (ssrc) {\n                if (!_.hasIndexOrKey(lastStats, ssrc)) {\n                    lastStats[ssrc] = {timestamp: 0};\n                }\n\n                var timeDelta = parseFloat(timestamp) - lastStats[ssrc].timestamp;\n                var up = calculateUploadRate(parseFloat(bytesSent), lastStats[ssrc].bytesSent, timeDelta);\n                var down = calculateDownloadRate(parseFloat(bytesReceived), lastStats[ssrc].bytesReceived, timeDelta);\n\n                lastStats[ssrc].bytesSent = parseFloat(bytesSent);\n                lastStats[ssrc].bytesReceived = parseFloat(bytesReceived);\n                lastStats[ssrc].timestamp = parseFloat(timestamp);\n\n                newStats.push({\n                    uploadRate: up,\n                    downloadRate: down,\n                    mediaType: mediaType,\n                    ssrc: ssrc,\n                    direction: direction\n                });\n            }\n        };\n\n        if (_.isFunction(stats.result)) {\n            _.forEach(stats.result(), function(statsReport) {\n                if (statsReport.type === 'ssrc') {\n                    var ssrc = statsReport.stat('ssrc');\n                    var bytesSent = statsReport.stat('bytesSent');\n                    var bytesReceived = statsReport.stat('bytesReceived');\n                    var mediaType = statsReport.stat('mediaType');\n                    var timestamp = statsReport.timestamp.getTime();\n                    var direction = statsReport.id.indexOf('send') > -1 ? 'upload' : 'download';\n\n                    convertStats(ssrc, mediaType, timestamp, bytesSent, bytesReceived, direction);\n                }\n            });\n        } else if (_.isFunction(stats.values)) {\n            _.forEach(Array.from(stats.values()), function(statsReport) {\n                if (_.hasIndexOrKey(statsReport, 'ssrc')) {\n                    if (!statsReport.ssrc || _.includes(statsReport.id, 'rtcp')) {\n                        return;\n                    }\n\n                    var direction = statsReport.type.indexOf('outbound') > -1 ? 'upload' : 'download';\n\n                    convertStats(statsReport.ssrc, statsReport.mediaType, statsReport.timestamp, statsReport.bytesSent, statsReport.bytesReceived, direction);\n                }\n            });\n        } else {\n            _.forEach(stats, function(statsReport) {\n                if (_.hasIndexOrKey(statsReport, 'ssrc')) {\n                    if (!statsReport.ssrc || _.includes(statsReport.id, 'rtcp')) {\n                        return;\n                    }\n\n                    var direction = statsReport.type.indexOf('outbound') > -1 ? 'upload' : 'download';\n\n                    convertStats(statsReport.ssrc, statsReport.mediaType, statsReport.timestamp, statsReport.bytesSent, statsReport.bytesReceived, direction);\n                }\n            });\n        }\n\n        return newStats;\n    }\n\n    function calculateUploadRate(bytesSent, prevBytesSent, timeDelta) {\n        if (bytesSent) {\n            var bytesSentBefore = prevBytesSent || 0;\n            var bps = 8 * 1000 * (bytesSent - bytesSentBefore) / timeDelta;\n\n            return Math.round(bps / 1000);\n        }\n\n        return 0;\n    }\n\n    function calculateDownloadRate(bytesReceived, prevBytesReceived, timeDelta) {\n        if (bytesReceived) {\n            var bytesReceivedBefore = prevBytesReceived || 0;\n            var bps = 8 * 1000 * (bytesReceived - bytesReceivedBefore) / timeDelta;\n\n            return Math.round(bps / 1000);\n        }\n\n        return 0;\n    }\n\n    return PeerConnection;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/PeerConnection.js\n// module id = 42\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-rtc'\n], function(_, assert, phenixRTC) {\n    'use strict';\n\n    var defaultMonitoringInterval = 4000;\n    var defaultConditionMonitoringInterval = 1500;\n    var defaultFrameRateThreshold = 2;\n    var defaultAudioBitRateThreshold = 5000;\n    var defaultVideoBitRateThreshold = 6000;\n    var defaultConditionCountForNotificationThreshold = 3;\n    var defaultTimeoutForNoData = 5000;\n    var minEdgeMonitoringInterval = 6000;\n    var minEdgeConditionCountForNotification = 2;\n\n    function PeerConnectionMonitor(name, peerConnection, logger) {\n        assert.isString(name, 'name');\n        assert.isObject(peerConnection, 'peerConnection');\n        assert.isObject(logger, 'logger');\n\n        this._name = name;\n        this._peerConnection = peerConnection;\n        this._logger = logger;\n    }\n\n    PeerConnectionMonitor.prototype.start = function(options, activeCallback, monitorCallback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(activeCallback, 'activeCallback');\n        assert.isFunction(monitorCallback, 'monitorCallback');\n\n        if (options.direction !== 'inbound' && options.direction !== 'outbound') {\n            throw new Error('Invalid monitoring direction');\n        }\n\n        this._frameRateFailureThreshold = options.frameRateThreshold || defaultFrameRateThreshold;\n        this._videoBitRateFailureThreshold = options.videoBitRateThreshold || defaultVideoBitRateThreshold;\n        this._audioBitRateFailureThreshold = options.audioBitRateThreshold || defaultAudioBitRateThreshold;\n        this._conditionCountForNotificationThreshold = options.conditionCountForNotificationThreshold || defaultConditionCountForNotificationThreshold;\n        this._monitoringInterval = options.monitoringInterval || defaultMonitoringInterval;\n        this._conditionMonitoringInterval = options.monitoringInterval || defaultConditionMonitoringInterval;\n        this._monitorFrameRate = options.hasOwnProperty('monitorFrameRate') ? options.monitorFrameRate : true;\n        this._monitorBitRate = options.hasOwnProperty('monitorBitRate') ? options.monitorBitRate : true;\n        this._monitorState = options.hasOwnProperty('monitorState') ? options.monitorState : true;\n        this._pausedTracks = [];\n\n        if (phenixRTC.browser === 'Edge') {\n            var conditionMaxDuration = this._conditionMonitoringInterval * this._conditionCountForNotificationThreshold;\n\n            this._monitoringInterval = Math.max(this._monitoringInterval, minEdgeMonitoringInterval);\n            this._conditionMonitoringInterval = Math.max(this._conditionMonitoringInterval, minEdgeMonitoringInterval);\n            this._conditionCountForNotificationThreshold = Math.max(Math.ceil(conditionMaxDuration / this._monitoringInterval), minEdgeConditionCountForNotification);\n\n            this._logger.info('Using modified options for optimal monitoring of PeerConnection on [Edge]. Monitor Interval [%s], Condition Monitor Interval [%s], Condition Count For Notification [%s]',\n                this._monitoringInterval, this._conditionMonitoringInterval, this._conditionCountForNotificationThreshold);\n        }\n\n        return monitorPeerConnection.call(this, this._name, this._peerConnection, options, activeCallback, monitorCallback);\n    };\n\n    PeerConnectionMonitor.prototype.setMonitorTrackState = function(track, state) {\n        assert.isObject(track, 'track');\n        assert.isBoolean(state, 'state');\n\n        var peerConnectionTracks = getAllTracks(this._peerConnection);\n        var foundTrack = !!_.find(peerConnectionTracks, function(pcTrack) {\n            return pcTrack.id === track.id;\n        });\n\n        if (!foundTrack) {\n            return this._logger.warn('[%s] Unable to find track [%s] [%s] in peer connection', this._name, track.kind, track.id);\n        }\n\n        if (!state) {\n            this._logger.info('[%s] Pausing monitoring of track [%s] [%s]', this._name, track.kind, track.id);\n\n            return this._pausedTracks.push(track);\n        }\n\n        var pausedTrackLength = this._pausedTracks.length;\n\n        this._pausedTracks = _.filter(this._pausedTracks, function(pausedTrack) {\n            return pausedTrack.id !== track.id;\n        });\n\n        if (pausedTrackLength !== this._pausedTracks.length) {\n            this._logger.info('[%s] Starting monitoring of track [%s] [%s] after it was paused', this._name, track.kind, track.id);\n        }\n    };\n\n    PeerConnectionMonitor.prototype.toString = function() {\n        return 'PeerConnectionMonitor[' + this._name + ']';\n    };\n\n    function monitorPeerConnection(name, peerConnection, options, activeCallback, monitorCallback) {\n        var that = this;\n        var conditionCount = 0;\n        var frameRate = undefined;\n        var videoBitRate = undefined;\n        var audioBitRate = undefined;\n        var lastAudioBytes = {};\n        var lastVideoBytes = {};\n        var lastFramesEncoded = {};\n        var checkForNoDataTimeout = null;\n\n        function nextCheck(checkForNoData) {\n            var selector = null;\n\n            getStats.call(that, peerConnection, selector, activeCallback, function successCallback(report) {\n                var hasFrameRate = false;\n                var hasVideoBitRate = false;\n                var hasAudioBitRate = false;\n                var readable = false;\n                var writable = false;\n\n                if (!activeCallback()) {\n                    return that._logger.info('[%s] Finished monitoring of peer connection', name);\n                }\n\n                function eachStats(stats, reportId) { // eslint-disable-line no-unused-vars\n                    var trackId = stats.id || stats.ssrc;\n                    var currentBytes = null;\n\n                    if (stats.framesEncoded) {\n                        var framesEncoded = new Stats(stats.framesEncoded);\n\n                        stats.framerateMean = calculateFrameRate(framesEncoded, lastFramesEncoded[trackId], that._frameRateFailureThreshold * 2);\n                        lastFramesEncoded[trackId] = framesEncoded;\n                    }\n\n                    switch (phenixRTC.browser) {\n                    case 'Safari':\n                    case 'Firefox':\n                    case 'Edge':\n                    case 'IE':\n                        writable = readable |= stats.selected &&\n                            stats.state === 'succeeded' ||\n                            phenixRTC.browser === 'IE' ||\n                            phenixRTC.browser === 'Edge' ||\n                            phenixRTC.browser === 'Safari';\n\n                        if (options.direction === 'outbound' && (stats.type === 'outboundrtp' || stats.type === 'outbound-rtp' || stats.type === 'kOutboundRtp')) {\n                            currentBytes = new Stats(stats.bytesSent);\n\n                            switch (stats.mediaType) {\n                            case 'video':\n                                that._logger.debug('[%s] Outbound [%s] [%s] with bitrate [%s], droppedFrames [%s] and frame rate [%s]',\n                                    name, stats.mediaType, stats.ssrc, stats.bitrateMean, stats.droppedFrames, stats.framerateMean);\n                                hasFrameRate = true;\n                                frameRate = stats.framerateMean || 0;\n                                hasVideoBitRate = true;\n                                videoBitRate = calculateBitRate(currentBytes, lastVideoBytes[trackId], that._videoBitRateFailureThreshold * 2);\n                                lastVideoBytes[trackId] = currentBytes;\n\n                                if (phenixRTC.browser === 'Edge') {\n                                    hasFrameRate = false;\n                                }\n\n                                break;\n                            case 'audio':\n                                that._logger.debug('[%s] Outbound [%s] [%s]',\n                                    name, stats.mediaType, stats.ssrc);\n                                hasAudioBitRate = true;\n                                audioBitRate = calculateBitRate(currentBytes, lastAudioBytes[trackId], that._audioBitRateFailureThreshold * 2);\n                                lastAudioBytes[trackId] = currentBytes;\n\n                                break;\n                            default:\n                                break;\n                            }\n                        }\n\n                        if (options.direction === 'inbound' && (stats.type === 'inboundrtp' || stats.type === 'inbound-rtp' || stats.type === 'kInboundRtp')) {\n                            currentBytes = new Stats(stats.bytesReceived);\n\n                            switch (stats.mediaType) {\n                            case 'video':\n                                that._logger.debug('[%s] Inbound [%s] [%s] with framerate [%s] and jitter [%s]',\n                                    name, stats.mediaType, stats.ssrc, stats.framerateMean, stats.jitter);\n\n                                // Inbound frame rate is not calculated correctly\n                                // hasFrameRate = true;\n                                // frameRate = stats.framerateMean || 0;\n                                hasVideoBitRate = true;\n                                videoBitRate = calculateBitRate(currentBytes, lastVideoBytes[trackId], that._videoBitRateFailureThreshold * 2);\n                                lastVideoBytes[trackId] = currentBytes;\n\n                                break;\n                            case 'audio':\n                                that._logger.debug('[%s] Inbound [%s] [%s] with jitter [%s]',\n                                    name, stats.mediaType, stats.ssrc, stats.jitter);\n                                hasAudioBitRate = true;\n                                audioBitRate = calculateBitRate(currentBytes, lastAudioBytes[trackId], that._audioBitRateFailureThreshold * 2);\n                                lastAudioBytes[trackId] = currentBytes;\n\n                                break;\n                            default:\n                                break;\n                            }\n                        }\n\n                        break;\n                    case 'Chrome':\n                    default:\n                        if (stats.googWritable === 'true') {\n                            writable = true;\n                        }\n\n                        if (stats.googReadable === 'true') {\n                            readable = true;\n                        }\n\n                        if (stats.type !== 'ssrc') {\n                            return;\n                        }\n\n                        if (options.direction === 'outbound') {\n                            currentBytes = new Stats(stats.bytesSent);\n\n                            switch (stats.mediaType) {\n                            case 'video':\n                                that._logger.debug('[%s] Outbound [%s] [%s] with average encoding time [%s] ms (CPU limited=[%s]) and RTT [%s]',\n                                    name, stats.mediaType, stats.ssrc, stats.googAvgEncodeMs, stats.googCpuLimitedResolution, stats.googRtt);\n                                hasFrameRate = true;\n                                frameRate = stats.googFrameRateSent || 0;\n                                hasVideoBitRate = true;\n                                videoBitRate = calculateBitRate(currentBytes, lastVideoBytes[trackId], that._videoBitRateFailureThreshold * 2);\n                                lastVideoBytes[trackId] = currentBytes;\n\n                                break;\n                            case 'audio':\n                                that._logger.debug('[%s] Outbound [%s] [%s] with audio input level [%s] and RTT [%s] and jitter [%s]',\n                                    name, stats.mediaType, stats.ssrc, stats.audioInputLevel, stats.googRtt, stats.googJitterReceived);\n                                hasAudioBitRate = true;\n                                audioBitRate = calculateBitRate(currentBytes, lastAudioBytes[trackId], that._audioBitRateFailureThreshold * 2);\n                                lastAudioBytes[trackId] = currentBytes;\n\n                                break;\n                            default:\n                                break;\n                            }\n                        } else if (options.direction === 'inbound') {\n                            currentBytes = new Stats(stats.bytesReceived);\n\n                            switch (stats.mediaType) {\n                            case 'video':\n                                that._logger.debug('[%s] Inbound [%s] [%s] with current delay [%s] ms and target delay [%s] ms',\n                                    name, stats.mediaType, stats.ssrc, stats.googCurrentDelayMs, stats.googTargetDelayMs);\n                                hasFrameRate = true;\n                                frameRate = stats.googFrameRateReceived || 0;\n                                hasVideoBitRate = true;\n                                videoBitRate = calculateBitRate(currentBytes, lastVideoBytes[trackId], that._videoBitRateFailureThreshold * 2);\n                                lastVideoBytes[trackId] = currentBytes;\n\n                                break;\n                            case 'audio':\n                                that._logger.debug('[%s] Inbound [%s] [%s] with output level [%s] and jitter [%s] and jitter buffer [%s] ms',\n                                    name, stats.mediaType, stats.ssrc, stats.audioOutputLevel, stats.googJitterReceived, stats.googJitterBufferMs);\n                                hasAudioBitRate = true;\n                                audioBitRate = calculateBitRate(currentBytes, lastAudioBytes[trackId], that._audioBitRateFailureThreshold * 2);\n                                lastAudioBytes[trackId] = currentBytes;\n\n                                break;\n                            default:\n                                break;\n                            }\n                        }\n\n                        break;\n                    }\n                }\n\n                if (!report) {\n                    throw new Error('Report must be a valid PeerConnection.getStats Report');\n                }\n\n                if (report.forEach) {\n                    report.forEach(eachStats);\n                } else {\n                    _.forOwn(report, function(stats, reportId) {\n                        eachStats(stats, reportId);\n                    });\n                }\n\n                var hasActiveAudio = hasActiveAudioInSdp(peerConnection);\n                var hasActiveVideo = hasActiveVideoInSdp(peerConnection);\n\n                if (hasVideoBitRate && videoBitRate === 0 || hasAudioBitRate && audioBitRate === 0 || hasFrameRate && frameRate === 0) {\n                    hasVideoBitRate = hasVideoBitRate && hasActiveVideo;\n                    hasAudioBitRate = hasAudioBitRate && hasActiveAudio;\n                    hasFrameRate = hasFrameRate && hasActiveVideo;\n\n                    readable = readable || !(hasActiveVideo || hasActiveAudio);\n                    writable = writable || !(hasActiveVideo || hasActiveAudio);\n                }\n\n                if (hasAudioBitRate || hasVideoBitRate || hasFrameRate) {\n                    that._logger.debug('[%s] Current bit rate is [%s] bps for audio and [%s] bps for video with [%s] FPS',\n                        name, Math.ceil(audioBitRate || 0), Math.ceil(videoBitRate || 0), frameRate || '?');\n                }\n\n                if (that._monitorState\n                    && (peerConnection.connectionState === 'closed'\n                    || peerConnection.connectionState === 'failed'\n                    || peerConnection.iceConnectionState === 'failed')) {\n                    var active = hasActiveAudio && hasActiveVideo;\n                    var tracks = getAllTracks.call(that, peerConnection);\n\n                    if (!active && hasMediaSectionsInSdp(peerConnection)) {\n                        that._logger.info('[%s] Finished monitoring of peer connection with [%s] inactive tracks', name, tracks.length);\n\n                        return;\n                    }\n\n                    conditionCount++;\n                } else if (that._monitorFrameRate && hasFrameRate && frameRate <= that._frameRateFailureThreshold && !areAllTracksOfTypePaused.call(that, 'video')) {\n                    conditionCount++;\n                } else if (that._monitorBitRate && hasAudioBitRate && audioBitRate <= that._audioBitRateFailureThreshold && !areAllTracksOfTypePaused.call(that, 'audio')) {\n                    conditionCount++;\n                } else if (that._monitorBitRate && hasVideoBitRate && videoBitRate <= that._videoBitRateFailureThreshold && !areAllTracksOfTypePaused.call(that, 'video')) {\n                    conditionCount++;\n                } else if (!readable || !writable) {\n                    conditionCount++;\n                } else {\n                    conditionCount = 0;\n                }\n\n                var isNoData = (videoBitRate === 0 || !hasVideoBitRate) && (audioBitRate === 0 || !hasAudioBitRate) && !areAllTracksPaused.call(that);\n\n                if (isNoData && !checkForNoDataTimeout) {\n                    checkForNoDataTimeout = setTimeout(_.bind(nextCheck, this, true), defaultTimeoutForNoData);\n                } else if (!isNoData) {\n                    clearTimeout(checkForNoDataTimeout);\n\n                    checkForNoDataTimeout = null;\n                }\n\n                var isStreamDead = checkForNoData && isNoData && checkForNoDataTimeout;\n                var acknowledgeFailure = function acknowledgeFailure() {\n                    that._logger.info('[%s] Failure has been acknowledged', name);\n\n                    conditionCount = Number.MIN_VALUE;\n\n                    setTimeout(nextCheck, that._monitoringInterval);\n                };\n\n                if (conditionCount >= that._conditionCountForNotificationThreshold || isStreamDead) {\n                    var defaultFailureMessage = '[' + name + '] Failure detected with frame rate [' + frameRate + '] FPS, audio bit rate [' + audioBitRate + '] bps, and video bit rate [' + videoBitRate + '] bps';\n                    var streamDeadFailureMessage = '[' + name + '] Failure detected with 0 bps audio and video for [' + (defaultTimeoutForNoData / 1000) + '] seconds';\n                    var failureMessage = isStreamDead ? streamDeadFailureMessage : defaultFailureMessage;\n                    var monitorEvent = {\n                        type: 'condition',\n                        message: failureMessage,\n                        report: report,\n                        frameRate: frameRate,\n                        videoBitRate: videoBitRate,\n                        audioBitRate: audioBitRate,\n                        acknowledgeFailure: acknowledgeFailure\n                    };\n\n                    if (!monitorCallback(null, monitorEvent)) {\n                        that._logger.error(failureMessage + ': [%s]', report);\n                    } else {\n                        acknowledgeFailure();\n                    }\n                } else {\n                    setTimeout(nextCheck, conditionCount > 0 ? that._conditionMonitoringInterval : that._monitoringInterval);\n                }\n            }, function errorCallback(error) {\n                monitorCallback(error, {\n                    type: 'error',\n                    message: 'Unable to get Connection statistics. Connection may have failed.'\n                });\n            });\n        }\n\n        setTimeout(nextCheck, that._monitoringInterval);\n    }\n\n    function Stats(value) {\n        this.time = _.now();\n        this.value = value || 0;\n    }\n\n    function normalizeStatsReport(response) {\n        var normalizedReport = {};\n\n        switch (phenixRTC.browser) {\n        case 'Firefox':\n            return response;\n        case 'IE':\n            _.forOwn(response, function(value, key) {\n                if (!_.startsWith(key, 'ssrc')) {\n                    return;\n                }\n\n                normalizedReport[value.id] = value;\n            });\n\n            return normalizedReport;\n        case 'Safari':\n        case 'Edge':\n            response.forEach(function(report) {\n                normalizedReport[report.id] = report;\n            });\n\n            return normalizedReport;\n        case 'ReactNative':\n            var stats = _.isString(response) ? JSON.parse(response) : response;\n\n            stats.forEach(function(report) {\n                var normalizedStatistics = {\n                    id: report.id,\n                    type: report.type\n                };\n\n                report.values.forEach(function(value) {\n                    _.keys(value).forEach(function(key) {\n                        normalizedStatistics[key] = value[key];\n                    });\n                });\n\n                normalizedReport[normalizedStatistics.id] = normalizedStatistics;\n            });\n\n            return normalizedReport;\n        case 'Chrome':\n        default:\n            response.result().forEach(function(report) {\n                var normalizedStatistics = {\n                    id: report.id,\n                    type: report.type\n                };\n\n                report.names().forEach(function(name) {\n                    normalizedStatistics[name] = report.stat(name);\n                });\n\n                normalizedReport[normalizedStatistics.id] = normalizedStatistics;\n            });\n\n            return normalizedReport;\n        }\n    }\n\n    function getStats(peerConnection, selector, activeCallback, successCallback, errorCallback) {\n        if (!activeCallback()) {\n            return this._logger.info('[%s] Finished monitoring of peer connection', this._name);\n        }\n\n        phenixRTC.getStats(peerConnection, null, function(response) {\n            var report = normalizeStatsReport(response);\n\n            successCallback(report);\n        }, function(error) {\n            errorCallback(error);\n        });\n    }\n\n    function getAllTracks(peerConnection) {\n        var localStreams = peerConnection.getLocalStreams ? peerConnection.getLocalStreams() : [];\n        var remoteStreams = peerConnection.getRemoteStreams ? peerConnection.getRemoteStreams() : [];\n        var localTracks = [];\n        var remoteTracks = [];\n\n        _.forEach(localStreams, function(stream) {\n            localTracks = localTracks.concat(stream.getTracks());\n        });\n\n        _.forEach(remoteStreams, function(stream) {\n            remoteTracks = remoteTracks.concat(stream.getTracks());\n        });\n\n        if (localTracks.length !== 0 && remoteTracks.length !== 0) {\n            this._logger.error('Invalid State. PeerConnection contains [%s] local and [%s] remote streams.', localStreams.length, remoteStreams.length);\n\n            throw new Error('Invalid State. PeerConnection contains both local and remote streams.');\n        } else if (localTracks.length !== 0) {\n            return localTracks;\n        } else if (remoteTracks.length !== 0) {\n            return remoteTracks;\n        }\n\n        return [];\n    }\n\n    function hasMediaSectionsInSdp(peerConnection) {\n        var indexOfSection = findInSdpSections(peerConnection, function(section) {\n            return _.startsWith(section, 'video') || _.startsWith(section, 'audio');\n        });\n\n        return _.isNumber(indexOfSection);\n    }\n\n    function hasActiveAudioInSdp(peerConnection) {\n        var indexOfActiveVideo = findInSdpSections(peerConnection, function(section, index, remoteSections) {\n            if (_.startsWith(section, 'audio')) {\n                return !_.includes(section, 'a=inactive') && !_.includes(remoteSections[index], 'a=inactive');\n            }\n\n            return false;\n        });\n\n        return _.isNumber(indexOfActiveVideo);\n    }\n\n    function hasActiveVideoInSdp(peerConnection) {\n        var indexOfActiveVideo = findInSdpSections(peerConnection, function(section, index, remoteSections) {\n            if (_.startsWith(section, 'video')) {\n                return !_.includes(section, 'a=inactive') && !_.includes(remoteSections[index], 'a=inactive');\n            }\n\n            return false;\n        });\n\n        return _.isNumber(indexOfActiveVideo);\n    }\n\n    function findInSdpSections(peerConnection, callback) {\n        var localSections = peerConnection.localDescription.sdp.split('m=');\n        var remoteSections = peerConnection.remoteDescription.sdp.split('m=');\n\n        if (localSections.length !== remoteSections.length) {\n            return false;\n        }\n\n        return _.findIndex(localSections, function(section, index) {\n            return callback(section, index, remoteSections);\n        });\n    }\n\n    function calculateFrameRate(currentFramesEncoded, lastFramesEncoded, defaultFrameRate) {\n        if (!lastFramesEncoded) {\n            return defaultFrameRate;\n        }\n\n        return (currentFramesEncoded.value - lastFramesEncoded.value)\n            / ((currentFramesEncoded.time - lastFramesEncoded.time) / 1000.0);\n    }\n\n    function calculateBitRate(currentBytes, lastBytes, defaultBitRate) {\n        if (!lastBytes) {\n            return defaultBitRate;\n        }\n\n        return (8 * (currentBytes.value - lastBytes.value))\n            / ((currentBytes.time - lastBytes.time) / 1000.0);\n    }\n\n    function areAllTracksPaused() {\n        var that = this;\n\n        return _.reduce(getAllTracks(this._peerConnection), function(areAllPaused, track) {\n            if (!areAllPaused) {\n                return areAllPaused;\n            }\n\n            var isTrackPaused = !!_.find(that._pausedTracks, function(pcTrack) {\n                return pcTrack.id === track.id;\n            });\n\n            return !track.enabled || isTrackPaused;\n        }, true);\n    }\n\n    function areAllTracksOfTypePaused(kind) {\n        var peerConnectionTracks = getAllTracks(this._peerConnection);\n        var pcTracksOfType = _.filter(peerConnectionTracks, function(track) {\n            return track.kind === kind;\n        });\n        var pausedTracksOfType = _.filter(this._pausedTracks, function(track) {\n            return track.kind === kind;\n        });\n\n        return _.reduce(pcTracksOfType, function(areAllPaused, track) {\n            if (!areAllPaused) {\n                return areAllPaused;\n            }\n\n            var isTrackPaused = !!_.find(pausedTracksOfType, function(pcTrack) {\n                return pcTrack.id === track.id;\n            });\n\n            return !track.enabled || isTrackPaused;\n        }, true);\n    }\n\n    return PeerConnectionMonitor;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/PeerConnectionMonitor.js\n// module id = 43\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// path (ignored)\n// module id = 44\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    '../logging/pcastLoggerFactory',\n    '../PCastEndPoint',\n    './AudioContext',\n    './AudioVolumeMeterFactory',\n    './AudioSpeakerDetectionAlgorithm'\n], function(_, assert, pcastLoggerFactory, PCastEndPoint, AudioContext, AudioVolumeMeterFactory, AudioSpeakerDetectionAlgorithm) {\n    'use strict';\n\n    function AudioSpeakerDetector(userMediaStreams, options) {\n        assert.isArray(userMediaStreams, 'userMediaStreams');\n\n        options = options || {};\n\n        this._baseUri = options.uri || PCastEndPoint.DefaultPCastUri;\n        this._logger = options.logger || pcastLoggerFactory.createPCastLogger(this._baseUri);\n        this._audioContext = options.audioContext || new AudioContext();\n        this._nativeAudioContext = this._audioContext.getNativeAudioContext();\n        this._onSpeakingChanged = null;\n        this._userMediaStreams = userMediaStreams;\n        this._disposeOfAudioContext = !_.isObject(options.audioContext);\n        this._audioVolumeMeterFactory = new AudioVolumeMeterFactory(this._logger);\n\n        _.forEach(this._userMediaStreams, _.bind(setupAudioVolumeMeter, this, options));\n    }\n\n    AudioSpeakerDetector.prototype.start = function start(options, callback) {\n        assert.isFunction(callback, 'callback');\n\n        this._onSpeakingChanged = callback;\n\n        options = options || {};\n\n        _.forEach(this._userMediaStreams, _.bind(setupSpeakingDetection, this, options));\n    };\n\n    AudioSpeakerDetector.prototype.stop = function stop() {\n        _.forEach(this.getAudioVolumeMeters(), function(meter) {\n            meter.onValue(function() {});\n        });\n\n        this._onSpeakingChanged = null;\n    };\n\n    AudioSpeakerDetector.prototype.getAudioVolumeMeter = function getAudioVolumeMeter(stream) {\n        assert.isObject(stream, 'stream');\n\n        return this._audioVolumeMeterFactory.getAudioVolumeMeter(stream);\n    };\n\n    AudioSpeakerDetector.prototype.getAudioVolumeMeters = function getAudioVolumeMeters() {\n        return this._audioVolumeMeterFactory.getAudioVolumeMeters();\n    };\n\n    AudioSpeakerDetector.prototype.dispose = function dispose() {\n        if (this._disposeOfAudioContext) {\n            this._nativeAudioContext.close();\n        }\n\n        this._audioVolumeMeterFactory.stopAllMeters();\n\n        this._userMediaStreams = null;\n    };\n\n    AudioSpeakerDetector.prototype.toString = function toString() {\n        return 'AudioSpeakerDetector';\n    };\n\n    function setupAudioVolumeMeter(options, stream) {\n        assert.isObject(stream, 'stream');\n        assert.isObject(options, 'options');\n\n        var audioVolumeMeter = this._audioVolumeMeterFactory.getAudioVolumeMeter(stream);\n\n        audioVolumeMeter.init(this._nativeAudioContext, options.alpha);\n        audioVolumeMeter.connect(stream);\n    }\n\n    function setupSpeakingDetection(options, stream) {\n        assert.isObject(stream, 'stream');\n        assert.isObject(options, 'options');\n\n        var audioVolumeMeter = this._audioVolumeMeterFactory.getAudioVolumeMeter(stream);\n        var audioSpeakerDetectionAlgorithm = new AudioSpeakerDetectionAlgorithm(this._logger);\n\n        if (options.alpha) {\n            audioVolumeMeter.setAlpha(options.alpha);\n        }\n\n        audioSpeakerDetectionAlgorithm.onValue(this._onSpeakingChanged);\n        audioSpeakerDetectionAlgorithm.startDetection(audioVolumeMeter, options);\n    }\n\n    return AudioSpeakerDetector;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/audio/AudioSpeakerDetector.js\n// module id = 45\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    '../logging/pcastLoggerFactory',\n    '../PCastEndPoint',\n    './PublisherBandwidthAdjuster'\n], function(_, assert, pcastLoggerFactory, PCastEndPoint, PublisherBandwidthAdjuster) {\n    'use strict';\n\n    function BandwidthMonitor(publishers, options) {\n        assert.isArray(publishers, 'userMediaStreams');\n\n        options = options || {};\n\n        this._baseUri = options.uri || PCastEndPoint.DefaultPCastUri;\n        this._logger = options.logger || pcastLoggerFactory.createPCastLogger(this._baseUri);\n        this._publisherAdjusters = [];\n        this._publishers = publishers;\n    }\n\n    BandwidthMonitor.prototype.start = function start(roomService, options) {\n        options = options || {};\n\n        _.forEach(this._publishers, _.bind(setupPublisherAdjusters, this, roomService, options));\n    };\n\n    BandwidthMonitor.prototype.stop = function stop() {\n        _.forEach(this._publisherAdjusters, function closePublisherAdjusters(adjuster) {\n            adjuster.close();\n        });\n\n        this._publisherAdjusters = [];\n    };\n\n    BandwidthMonitor.prototype.toString = function toString() {\n        return 'BandwidthMonitor';\n    };\n\n    function setupPublisherAdjusters(roomService, options, publisher) {\n        var publisherAdjuster = new PublisherBandwidthAdjuster(publisher);\n\n        publisherAdjuster.connect(roomService, options);\n\n        this._publisherAdjusters.push(publisherAdjuster);\n    }\n\n    return BandwidthMonitor;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/bandwidth/BandwidthMonitor.js\n// module id = 46\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    './RoomExpress',\n    '../room/ChannelService',\n    '../room/Channel',\n    './MemberSelector',\n    '../room/Stream',\n    '../room/room.json',\n    '../room/member.json',\n    '../room/stream.json'\n], function(_, assert, observable, disposable, RoomExpress, ChannelService, Channel, MemberSelector, Stream, roomEnums, memberEnums, streamEnums) {\n    'use strict';\n\n    var defaultReconnectOptions = {\n        maxOfflineTime: 24 * 60 * 60 * 1000, // 1 day\n        maxReconnectFrequency: 60 * 1000 // 60 seconds\n    };\n\n    function ChannelExpress(options) {\n        assert.isObject(options, 'options');\n\n        if (options.roomExpress) {\n            assert.isObject(options.roomExpress, 'options.roomExpress');\n        } else {\n            assert.isStringNotEmpty(options.backendUri, 'options.backendUri');\n            assert.isObject(options.authenticationData, 'options.authenticationData');\n        }\n\n        var channelExpressOptions = _.assign({reconnectOptions: defaultReconnectOptions}, options);\n\n        this._roomExpress = options.roomExpress || new RoomExpress(channelExpressOptions);\n        this._shouldDisposeOfRoomExpress = !options.roomExpress;\n        this._logger = this._roomExpress.getPCastExpress().getPCast().getLogger();\n    }\n\n    ChannelExpress.prototype.dispose = function dispose() {\n        if (this._shouldDisposeOfRoomExpress) {\n            this._roomExpress.dispose();\n        }\n    };\n\n    ChannelExpress.prototype.getRoomExpress = function getPCastExpress() {\n        return this._roomExpress;\n    };\n\n    ChannelExpress.prototype.getPCastExpress = function getPCastExpress() {\n        return this._roomExpress.getPCastExpress();\n    };\n\n    ChannelExpress.prototype.createChannel = function createChannel(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isObject(options.channel, 'options.channel');\n\n        var createRoomOptions = _.assign({room: options.channel}, options);\n\n        createRoomOptions.room.type = roomEnums.types.channel.name;\n\n        delete createRoomOptions.channel;\n\n        this._roomExpress.createRoom(createRoomOptions, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelExpress.prototype.joinChannel = function joinChannel(options, joinChannelCallback, subscriberCallback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(joinChannelCallback, 'joinChannelCallback');\n        assert.isFunction(subscriberCallback, 'subscriberCallback');\n\n        if (options.videoElement) {\n            assert.isObject(options.videoElement, 'options.videoElement');\n        }\n\n        if (options.streamSelectionStrategy) {\n            assert.isStringNotEmpty(options.streamSelectionStrategy, 'options.streamSelectionStrategy');\n        }\n\n        var channelOptions = _.assign({\n            type: roomEnums.types.channel.name,\n            role: memberEnums.roles.audience.name\n        }, options);\n        var memberSelector = new MemberSelector(options.streamSelectionStrategy, this._logger);\n        var lastMediaStream;\n        var lastStreamId;\n        var channelRoomService;\n        var channelId = '';\n        var that = this;\n\n        if (channelOptions.channelId) {\n            channelOptions.roomId = channelOptions.channelId;\n        }\n\n        delete channelOptions.channelId;\n\n        var joinRoomCallback = function(error, response) {\n            var channelResponse = !response || _.assign({}, response);\n\n            if (response && response.roomService) {\n                var leaveRoom = response.roomService.leaveRoom;\n                var room = response.roomService.getObservableActiveRoom().getValue();\n\n                channelRoomService = response.roomService;\n                channelId = room ? room.getRoomId() : '';\n\n                that._logger.info('Joined channel [%s] with [%s] selection strategy', channelId, memberSelector.getStrategy());\n\n                channelResponse.roomService.leaveRoom = function(callback) {\n                    if (lastMediaStream) {\n                        lastMediaStream.stop();\n                    }\n\n                    leaveRoom(callback);\n                };\n            }\n\n            wrapResponseWithChannelPrefixesAndContinue(joinChannelCallback, error, channelResponse);\n        };\n\n        that._roomExpress.joinRoom(channelOptions, joinRoomCallback, function membersChangedCallback(members, streamErrorStatus) {\n            var presenters = _.filter(members, function(member) {\n                return member.getObservableRole().getValue() === memberEnums.roles.presenter.name && member.getObservableStreams().getValue().length > 0;\n            });\n            var forceNewMemberSelection = !!streamErrorStatus || !lastMediaStream || !lastStreamId;\n            var selectedPresenter = memberSelector.getNext(presenters, forceNewMemberSelection);\n            var presenterStream = selectedPresenter ? selectedPresenter.getObservableStreams().getValue()[0] : null;\n            var streamId = presenterStream ? presenterStream.getPCastStreamId() : '';\n\n            if (!selectedPresenter || !presenterStream) {\n                if (presenters.length === 0) {\n                    return subscriberCallback(null, {status: 'no-stream-playing'});\n                }\n\n                if (streamErrorStatus) {\n                    that._logger.info('Unable to find a new presenter to replace stream [%s] that ended in channel [%s] with status [%s] and [%s] black-listed members',\n                        lastStreamId, channelId, streamErrorStatus, memberSelector.getNumberOfBlackListedMembers());\n\n                    return subscriberCallback(null, {status: streamErrorStatus || 'unable-to-recover'});\n                }\n\n                return subscriberCallback(null, {status: 'no-stream-playing'});\n            }\n\n            if (!checkifStreamingIsAvailable(presenterStream.getUri()) && _.includes(options.capabilities, 'streaming')) {\n                return subscriberCallback(null, {status: 'streaming-not-available'});\n            }\n\n            if (!streamId) {\n                that._logger.info('Channel [%s] presenter has no stream', channelId);\n\n                return subscriberCallback(null, {status: 'no-stream-playing'});\n            }\n\n            if (streamId === lastStreamId) {\n                if (streamErrorStatus) {\n                    that._logger.info('Unable to find a new presenter to replace stream [%s] that ended in channel [%s] with status [%s]',\n                        lastStreamId, channelId, streamErrorStatus);\n\n                    return subscriberCallback(null, {status: streamErrorStatus || 'unable-to-recover'});\n                }\n\n                return;\n            } else if (lastStreamId && lastMediaStream) {\n                lastMediaStream.stop();\n            }\n\n            var tryNextMember = function(streamStatus) {\n                var room = channelRoomService ? channelRoomService.getObservableActiveRoom().getValue() : null;\n                var members = room ? room.getObservableMembers().getValue() : [];\n\n                if (!room) {\n                    return; // No longer in room.\n                }\n\n                return membersChangedCallback(members, streamStatus);\n            };\n\n            function monitorChannelSubsciber(mediaStreamId, error, response) {\n                if (lastStreamId !== mediaStreamId) {\n                    return; // Ignore old streams\n                }\n\n                if (error) {\n                    return tryNextMember('unable-to-subscribe');\n                }\n\n                // Don't continue - Tell client\n                if (response.reason === 'app-background') {\n                    return subscriberCallback(error, response);\n                }\n\n                if (response.retry && memberSelector.getStrategy() !== 'high-availability') {\n                    return response.retry();\n                }\n\n                if (response.status !== 'ok') {\n                    return tryNextMember(response.status);\n                }\n            }\n\n            var subscribeOptions = _.assign({}, {\n                monitor: {\n                    callback: _.bind(monitorChannelSubsciber, this, streamId),\n                    options: {conditionCountForNotificationThreshold: 8}\n                }\n            }, options);\n            var hadPreviousStreamReason = streamErrorStatus ? 'recovered-from-failure' : 'stream-override';\n            var successReason = lastStreamId ? hadPreviousStreamReason : 'stream-started';\n\n            lastStreamId = streamId;\n\n            var mediaStreamCallback = function mediaStreamCallback(mediaStreamId, error, response) {\n                if (lastStreamId !== mediaStreamId) {\n                    return; // Ignore old streams\n                }\n\n                if (response && response.status === 'ok') {\n                    response.reason = successReason;\n                }\n\n                if (error || (response && response.status !== 'ok')) {\n                    that._logger.info('[%s] Issue with stream [%s]. Trying next member', mediaStreamId, response ? response.status : '', error);\n\n                    return tryNextMember(response ? response.status : '');\n                }\n\n                if (response && response.mediaStream) {\n                    lastMediaStream = response.mediaStream;\n                } else {\n                    lastStreamId = null;\n                    lastMediaStream = null;\n                }\n\n                subscriberCallback(error, response);\n            };\n\n            that._roomExpress.subscribeToMemberStream(presenterStream, subscribeOptions, _.bind(mediaStreamCallback, this, streamId));\n        });\n    };\n\n    ChannelExpress.prototype.publishToChannel = function publishToChannel(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var channelOptions = _.assign({\n            memberRole: memberEnums.roles.presenter.name,\n            streamType: streamEnums.types.presentation.name,\n            room: options.channel\n        }, options);\n\n        channelOptions.room.type = roomEnums.types.channel.name;\n\n        delete channelOptions.channel;\n\n        this._roomExpress.publishToRoom(channelOptions, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelExpress.prototype.publishScreenToChannel = function publishScreenToChannel(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var channelOptions = _.assign({\n            memberRole: memberEnums.roles.presenter.name,\n            streamType: streamEnums.types.presentation.name,\n            room: options.channel\n        }, options);\n\n        channelOptions.room.type = roomEnums.types.channel.name;\n\n        delete channelOptions.channel;\n\n        this._roomExpress.publishScreenToRoom(channelOptions, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    function checkifStreamingIsAvailable(uri) {\n        var deferToCreateToken = true;\n        var streamInfo = Stream.getInfoFromStreamUri(uri);\n\n        if (_.values(streamInfo).length === 0) {\n            return deferToCreateToken;\n        }\n\n        // TODO(DY) Remove streamTokenStreaming once apps updated in prod\n        return !!streamInfo.streamTokenForLiveStream || !!streamInfo.streamTokenStreaming;\n    }\n\n    function wrapResponseWithChannelPrefixesAndContinue(callback, error, response) {\n        if (response && response.roomService) {\n            response.channelService = new ChannelService(response.roomService);\n\n            delete response.roomService;\n        }\n\n        if (response && response.room) {\n            response.channel = new Channel(response.room);\n\n            delete response.room;\n        }\n\n        callback(error, response);\n    }\n\n    return ChannelExpress;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/express/ChannelExpress.js\n// module id = 47\n// module chunks = 0","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/long/dist/long.js\n// module id = 48\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-disposable'\n], function(_, assert, event, disposable) {\n    'use strict';\n\n    var defaultDocumentFocusIntervalTimeout = 3000;\n\n    function ApplicationActivityDetector() {\n        this._namedEvents = new event.NamedEvents();\n        this._timeOfLastTabFocusChange = _.now();\n        this._disposables = new disposable.DisposableList();\n        this._isForeground = true;\n\n        this._disposables.add(this._namedEvents);\n\n        detectTabFocusChange.call(this);\n    }\n\n    ApplicationActivityDetector.prototype.isForeground = function() {\n        return this._isForeground;\n    };\n\n    ApplicationActivityDetector.prototype.getTimeSinceLastChange = function() {\n        return _.now() - this._timeOfLastTabFocusChange;\n    };\n\n    ApplicationActivityDetector.prototype.onForeground = function isEnabled(callback) {\n        assert.isFunction(callback, 'callback');\n\n        return this._namedEvents.listen('foreground', callback);\n    };\n\n    ApplicationActivityDetector.prototype.onBackground = function setEnabled(callback) {\n        assert.isFunction(callback, 'callback');\n\n        return this._namedEvents.listen('background', callback);\n    };\n\n    function detectTabFocusChange() {\n        if (canDetectDirectly()) {\n            return detectTabFocusChangeDirectly.call(this);\n        }\n\n        detectTabFocusChangeIndirectly.call(this);\n    }\n\n    function canDetectDirectly() {\n        return typeof chrome !== 'undefined' && chrome.extension && chrome.extension.onRequest; // eslint-disable-line no-undef\n    }\n\n    function detectTabFocusChangeDirectly() {\n        if (!canDetectDirectly()) {\n            return;\n        }\n\n        var that = this;\n\n        chrome.extension.onRequest.addListener(function(request, sender, sendResponse) { // eslint-disable-line no-undef\n            if(request === \"is_selected\") {\n                chrome.tabs.getSelected(null, function(tab){ // eslint-disable-line no-undef\n                    var isForeground = tab.id === sender.tab.id;\n\n                    setFocusState.call(that, isForeground);\n\n                    if(isForeground) {\n                        sendResponse(true);\n                    } else {\n                        sendResponse(false);\n                    }\n                });\n            }\n        });\n    }\n\n    function detectTabFocusChangeIndirectly() {\n        var hidden;\n        var visibilityChange;\n        var that = this;\n\n        if (typeof document !== \"object\") {\n            return;\n        }\n\n        if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n            visibilityChange = \"msvisibilitychange\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n            visibilityChange = \"webkitvisibilitychange\";\n        } else if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n            visibilityChange = \"visibilitychange\";\n        }\n\n        function handleVisibilityChange() {\n            var isForeground = !document[hidden];\n\n            setFocusState.call(that, isForeground);\n        }\n\n        if (typeof document.addEventListener !== \"undefined\" && typeof document[hidden] !== \"undefined\") {\n            _.addEventListener(document, visibilityChange, handleVisibilityChange, false);\n\n            that._disposables.add(new disposable.Disposable(function() {\n                _.removeEventListener(document, visibilityChange, handleVisibilityChange, false);\n            }));\n        } else {\n            listenForDocumentFocus.call(that);\n        }\n    }\n\n    function listenForDocumentFocus() {\n        var that = this;\n\n        that._documentFocusInterval = setInterval(function() {\n            var isForeground = document.hasFocus();\n\n            setFocusState.call(that, isForeground);\n        }, defaultDocumentFocusIntervalTimeout);\n\n        that._disposables.add(new disposable.Disposable(function() {\n            if (_.isNumber(that._documentFocusInterval)) {\n                clearInterval(that._documentFocusInterval);\n            }\n\n            that._documentFocusInterval = null;\n        }));\n    }\n\n    function setFocusState(isForeground) {\n        assert.isBoolean(isForeground, 'isForeground');\n\n        if (this._isForeground === isForeground) {\n            return;\n        }\n\n        if (isForeground) {\n            this._isForeground = true;\n\n            return triggerFocusChange.call(this, 'foreground');\n        }\n\n        this._isForeground = false;\n\n        return triggerFocusChange.call(this, 'background');\n    }\n\n    function triggerFocusChange(state) {\n        var currentTime = _.now();\n        var timeElapsedOfLastState = currentTime - this._timeOfLastTabFocusChange;\n\n        this._timeOfLastTabFocusChange = currentTime;\n        this._namedEvents.fire(state, [timeElapsedOfLastState]);\n    }\n\n    return ApplicationActivityDetector;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-application-activity-detector/src/ApplicationActivityDetector.js\n// module id = 49\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light'\n], function (_) {\n    var Assert = function () {\n\n    };\n\n    Assert.prototype.isObject = function isObject(obj, name) {\n        Assert.prototype.isString('name', name);\n\n        var error = '\"' + name + '\" must be an object';\n\n        if (!_.isObject(obj)) {\n            throw new Error(error);\n        }\n    };\n\n    Assert.prototype.isArray = function isArray(array, name) {\n        Assert.prototype.isString('name', name);\n\n        var error = '\"' + name + '\" must be an array';\n\n        if (!_.isArray(array)) {\n            throw new Error(error);\n        }\n    };\n\n    Assert.prototype.isString = function isString(string, name) {\n        var error = '\"' + name + '\" must be a string';\n\n        if (!_.isString(name)) {\n            throw new Error('\"name\" must be a string');\n        }\n\n        if (!_.isString(string)) {\n            throw new Error(error);\n        }\n    };\n\n    Assert.prototype.isBoolean = function isBoolean(bool, name) {\n        Assert.prototype.isString('name', name);\n\n        var error = '\"' + name + '\" must be a boolean';\n\n        if (!_.isBoolean(bool)) {\n            throw new Error(error);\n        }\n    };\n\n    Assert.prototype.isNumber = function isNumber(number, name) {\n        Assert.prototype.isString('name', name);\n\n        var error = '\"' + name + '\" must be a number';\n\n        if (!_.isNumber(number)) {\n            throw new Error(error);\n        }\n    };\n\n    Assert.prototype.isFunction = function isFunction(callback, name) {\n        Assert.prototype.isString('name', name);\n\n        var error = '\"' + name + '\" must be a function';\n\n        if (!_.isFunction(callback)) {\n            throw new Error(error);\n        }\n    };\n\n    // TODO (dcy) remove once all dependencies have been updated\n    Assert.prototype.stringNotEmpty = function stringNotEmpty(string, name) {\n        Assert.prototype.isStringNotEmpty(string, name);\n    };\n\n    Assert.prototype.isStringNotEmpty = function stringNotEmpty(string, name) {\n        Assert.prototype.isString('name', name);\n\n        var error = '\"' + name + '\" must not be empty';\n\n        Assert.prototype.isString(string, name);\n\n        if (string === '') {\n            throw new Error(error);\n        }\n    };\n\n    Assert.prototype.isInstanceOf = function (object, clazz, name) {\n        Assert.prototype.isString('name', name);\n\n        if (!_.isObject(object)) {\n            throw new Error('\"' + name + '\" must be an instance');\n        }\n\n        if (!(object instanceof clazz)) {\n            throw new Error('\"' + name + '\" must be a valid instance of class');\n        }\n    };\n\n    Assert.prototype.isNotUndefined = function (value, name) {\n        Assert.prototype.isString('name', name);\n\n        if (_.isUndefined(value)) {\n            throw new Error('\"' + name + '\" must not be undefined');\n        }\n    };\n\n    Assert.prototype.isValidType = function (type, types, name) {\n        Assert.prototype.isStringNotEmpty(name, 'name');\n\n        type = _.getEnumName(types, type);\n\n        if (_.isNullOrUndefined(type)) {\n            throw new Error('\"' + name + '\" must be a valid type');\n        }\n\n        return type;\n    };\n\n    Assert.prototype.isArrayOfString = function (value, name) {\n        Assert.prototype.isString(name, 'name');\n        Assert.prototype.isArray(value, name);\n\n        _.forEach(value, function (val, key) {\n            Assert.prototype.isString(val, name + '[' + key + ']');\n        });\n    };\n\n    return new Assert();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-assert/src/assert.js\n// module id = 50\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-network-connection-monitor',\n    'phenix-web-http',\n    'phenix-web-observable',\n    'phenix-web-disposable'\n], function (_, assert, event, networkConnectionMonitor, http, observable, disposable) {\n    var networkDisconnectHysteresisInterval = 0;\n    var events = {\n        capacity: 'capacity',\n        error: 'error',\n        response: 'response'\n    };\n    var localStoreKeyPrefix = '__phenixBatchHttpMessages';\n\n    function BatchHttp(uri, options, serializeRequest, deserializeResponse) {\n        assert.isStringNotEmpty(uri, 'uri');\n\n        options = options || {};\n\n        assert.isObject(options, 'options');\n\n        if (options.requestType) {\n            assert.isStringNotEmpty(options.requestType, 'options.requestType');\n        }\n\n        if (options.maxAttempts) {\n            assert.isNumber(options.maxAttempts, 'options.maxAttempts');\n        }\n\n        if (options.maxBufferedRecords) {\n            assert.isNumber(options.maxBufferedRecords, 'options.maxBufferedRecords');\n        }\n\n        if (options.maxBatchSize) {\n            assert.isNumber(options.maxBatchSize, 'options.maxBatchSize');\n        }\n\n        if (options.contentType) {\n            assert.isStringNotEmpty(options.contentType, 'options.maxBatchSize');\n        }\n\n        if (serializeRequest) {\n            assert.isFunction(serializeRequest, 'serializeRequest');\n        }\n\n        if (deserializeResponse) {\n            assert.isFunction(deserializeResponse, 'deserializeResponse');\n        }\n\n        this._localStoreKey = localStoreKeyPrefix + '|' + uri;\n        this._requestType = options.requestType || 'POST';\n        this._requestTimeout = options.requestTimeout || 30000;\n        this._maxAttempts = options.maxAttempts || 5;\n        this._maxBufferedRecords = options.maxBufferedRecords || 1000;\n        this._maxBatchSize = options.maxBatchSize || 100;\n        this._contentType = options.contentType || 'application/json';\n        this._serializeRequest = serializeRequest;\n        this._deserializeResponse = deserializeResponse;\n        this._uri = uri;\n        this._records = getStoredMessages.call(this) || [];\n        this._isEnabled = true;\n        this._namedEvents = new event.NamedEvents();\n        this._canSendRequestObservable = new observable.Observable(true);\n        this._disposables = new disposable.DisposableList();\n        this._pending = false;\n        this._unloadTriggered = false;\n\n        this._disposables.add(this._canSendRequestObservable.subscribe(_.bind(sendMessagesIfAble, this)));\n        this._disposables.add(startNetworkConnectionMonitor.call(this));\n        this._disposables.add(this._namedEvents);\n\n        setStoredMessages.call(this, []);\n\n        sendMessagesIfAble.call(this);\n\n        var that = this;\n\n        _.addEventListener(window, 'beforeunload', function() {\n            appendStoredMessages.call(that, that._records);\n\n            that._unloadTriggered = true;\n\n            that._records = [];\n        });\n    }\n\n    BatchHttp.prototype.on = function on(eventName, callback) {\n        assert.isStringNotEmpty(eventName, 'eventName');\n        assert.isFunction(callback, 'callback');\n\n        return this._namedEvents.listen(eventName, callback);\n    };\n\n    BatchHttp.prototype.addRecord = function(record) {\n        if (this._unloadTriggered) {\n            return appendStoredMessages.call(this, [record]);\n        }\n\n        this._records.push(record);\n\n        sendMessagesIfAble.call(this);\n        deleteRecordsIfAtCapacity.call(this);\n    };\n\n    BatchHttp.prototype.addRecordToBeginning = function(record) {\n        this._records.unshift(record);\n\n        sendMessagesIfAble.call(this);\n        deleteRecordsIfAtCapacity.call(this);\n    };\n\n    BatchHttp.prototype.dispose = function dispose() {\n        this._records = [];\n\n        this._disposables.dispose();\n    };\n\n    function deleteRecordsIfAtCapacity() {\n        if (this._records.length > this._maxBufferedRecords) {\n            var deleteRecords = this._records.length - (this._maxBufferedRecords / 2);\n\n            this._records = this._records.slice(deleteRecords);\n\n            this._namedEvents.fireAsync(events.capacity, [null, {numberOfDeletedRecords: deleteRecords}]);\n        }\n    }\n\n    function sendMessagesIfAble() {\n        if (!this._canSendRequestObservable.getValue() || this._records.length === 0) {\n            return;\n        }\n\n        setStatus.call(this, true);\n\n        var storeRecords = {records: _.take(this._records, this._maxBatchSize)};\n\n        this._records = this._records.slice(this._maxBatchSize);\n\n        var that = this;\n\n        try {\n            sendHttpRequest.call(this, this._uri, storeRecords, function onTimeout() {\n                setTimeout(function waitForDisconnectTimeout() {\n                    that._records = that._records.concat(storeRecords.records);\n\n                    setStatus.call(that, false);\n                }, networkDisconnectHysteresisInterval);\n            });\n        } catch (e) {\n            setTimeout(function() {\n                setStatus.call(that, false);\n\n                return that._namedEvents.fire(events.error, [e]);\n            }, networkDisconnectHysteresisInterval);\n        }\n    }\n\n    function startNetworkConnectionMonitor() {\n        var that = this;\n\n        function onNetworkStatusChange() {\n            setStatus.call(that, that._pending);\n        }\n\n        return networkConnectionMonitor.listenForNetworkChange(onNetworkStatusChange);\n    }\n\n    function sendHttpRequest(url, dataToSend, onTimeout) {\n        var that = this;\n\n        var data = this._serializeRequest ? this._serializeRequest(_.assign({}, dataToSend)) : dataToSend;\n\n        function handleResponse(error, response) {\n            if (error) {\n                if (error.message === 'timeout' && !isAtMaxRecords.call(that)) {\n                    return onTimeout();\n                }\n\n                setStatus.call(that, false);\n\n                return that._namedEvents.fire(events.error, [error]);\n            }\n\n            setStatus.call(that, false);\n\n            var parsedResponse = that._deserializeResponse ? that._deserializeResponse(response.data) : response.data;\n\n            return that._namedEvents.fire(events.response, [parsedResponse]);\n        }\n\n        switch (this._requestType) {\n        case 'POST':\n            return http.postWithRetry(url, data, {\n                timeout: this._requestTimeout,\n                contentType: this._contentType,\n                retryOptions: {\n                    maxAttempts: this._maxAttempts,\n                    additionalRetryErrorCodes: [0]\n                }\n            }, handleResponse);\n        default:\n            throw new Error('Invalid request type');\n        }\n    }\n\n    function isAtMaxRecords() {\n        return this._records.length >= this._maxBufferedRecords;\n    }\n\n    function setStatus(pending) {\n        this._pending = pending;\n\n        this._canSendRequestObservable.setValue(!pending && networkConnectionMonitor.isOnline());\n    }\n\n    var getStoredMessages = function getStoredMessages() {\n        if (!window.localStorage) {\n            return null;\n        }\n\n        var storedMessages = window.localStorage.getItem(this._localStoreKey);\n\n        if (storedMessages) {\n            return JSON.parse(storedMessages);\n        }\n\n        return [];\n    };\n\n    var appendStoredMessages = function appendStoredMessages(messages) {\n        if (!window.localStorage || !messages || messages.length === 0) {\n            return null;\n        }\n\n        var messagesToStore = getStoredMessages.call(this).concat(messages);\n\n        return setStoredMessages.call(this, messagesToStore);\n    };\n\n    var setStoredMessages = function setStoredMessages(messages) {\n        if (!window.localStorage || !messages) {\n            return null;\n        }\n\n        return window.localStorage.setItem(this._localStoreKey, JSON.stringify(messages));\n    };\n\n    return BatchHttp;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-batch-http/src/BatchHttp.js\n// module id = 51\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './BatchHttp'\n], function (BatchHttp) {\n    'use strict';\n\n    return BatchHttp;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-batch-http/src/index.js\n// module id = 52\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-http',\n    'phenix-web-disposable'\n], function (_, assert, http, disposable) {\n    'use strict';\n\n    var measurementsPerEndPoint = 4;\n    var endpointClosenessThreshold = 30;\n\n    function ClosestEndPointResolver(logger, version, onClosestEndpointFound, onAnEndpointResolved) {\n        assert.isObject(logger, 'logger');\n        assert.isStringNotEmpty(version, 'version');\n        assert.isFunction(onClosestEndpointFound, 'onClosestEndpointFound');\n\n        if (onAnEndpointResolved) {\n            assert.isFunction(onAnEndpointResolved, 'onAnEndpointResolved');\n        }\n\n        this._logger = logger;\n        this._version = version;\n        this._onClosestEndpointFound = onClosestEndpointFound;\n\n        if (onAnEndpointResolved) {\n            this._onAnEndpointResolved = onAnEndpointResolved;\n        }\n\n        this._done = false;\n        this._minTime = Number.MAX_VALUE;\n        this._minResponseText = '';\n        this._disposables = new disposable.DisposableList();\n    }\n\n    ClosestEndPointResolver.prototype.isResolved = function isResolved() {\n        return this._done;\n    };\n\n    ClosestEndPointResolver.prototype.dispose = function dispose() {\n        this._disposables.dispose();\n    };\n\n    ClosestEndPointResolver.prototype.measurementCallback = function measurementCallback(endPoint, time, responseText) {\n        if (time < this._minTime) {\n            this._logger.info('Current closest end point is [%s] with latency of [%s] ms', responseText, time);\n            this._minTime = time;\n            this._minResponseText = responseText;\n        }\n\n        return this.isResolved();\n    };\n\n    ClosestEndPointResolver.prototype.completeCallback = function completeCallback(endPoint) { // eslint-disable-line no-unused-vars\n        if (this._minResponseText && this._minTime < Number.MAX_VALUE && !this.isResolved()) {\n            this._done = true;\n\n            return this._onClosestEndpointFound(null, {\n                uri: this._minResponseText,\n                roundTripTime: this._minTime\n            });\n        }\n    };\n\n    ClosestEndPointResolver.prototype.resolveAll = function resolveAll(endPoints) {\n        for (var i = 0; i < endPoints.length; i++) {\n            this.resolve(endPoints[i], measurementsPerEndPoint);\n        }\n    };\n\n    ClosestEndPointResolver.prototype.resolve = function resolve(endPoint, measurements) {\n        var that = this;\n        var measurement = 1;\n        var successfulAttempts = 0;\n\n        var nextMeasurement = function nextMeasurement(endPoint) {\n            var maxAttempts = 1;\n            var start = _.now();\n\n            that._logger.info('[%s] Checking end point [%s]', measurement, endPoint);\n\n            var requestDisposable = http.getWithRetry(endPoint, {\n                timeout: 15000,\n                queryParameters: {\n                    version: that._version,\n                    _: _.now()\n                },\n                retryOptions: {maxAttempts: maxAttempts}\n            }, function (err, response) {\n                var end = _.now();\n                var time = end - start;\n                var timeAboveThreshold = time > endpointClosenessThreshold;\n\n                if (that._onAnEndpointResolved) {\n                    if (err) {\n                        that._onAnEndpointResolved(err);\n                    } else {\n                        that._onAnEndpointResolved(null, {\n                            time: time,\n                            endPoint: endPoint\n                        });\n                    }\n                }\n\n                measurement++;\n\n                if (!err) {\n                    if (that.measurementCallback(endPoint, time, response.data)) {\n                        // Done\n                        return;\n                    }\n\n                    successfulAttempts++;\n                }\n\n                if (measurement <= measurements && !that.isResolved() && (timeAboveThreshold || err)) {\n                    if (err) {\n                        that._logger.info('Retrying after failure to resolve end point [%s] with [%s]', endPoint, err);\n                    }\n\n                    return nextMeasurement(endPoint);\n                } else if (successfulAttempts === 0) {\n                    return that._logger.warn('Unable to resolve end point [%s] with [%s]', endPoint, err);\n                }\n\n                return that.completeCallback(endPoint);\n            });\n\n            that._disposables.add(requestDisposable);\n        };\n\n        nextMeasurement(endPoint);\n    };\n\n    return ClosestEndPointResolver;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-closest-endpoint-resolver/src/ClosestEndPointResolver.js\n// module id = 53\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './ClosestEndPointResolver'\n], function (ClosestEndPointResolver) {\n    return ClosestEndPointResolver;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-closest-endpoint-resolver/src/index.js\n// module id = 54\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine(['phenix-web-lodash-light'], function (_) {\n    'use strict';\n\n    function DetectBrowser(userAgent) {\n        this._userAgent = userAgent || '';\n    }\n\n    DetectBrowser.prototype.detect = function () {\n        var browser = 'Unknown';\n        var version = '?';\n        var browserMatch = this._userAgent.match(/(Chrome|Chromium|Firefox|Opera|Safari)+\\//);\n        var versionMatch = this._userAgent.match(/(Chrome|Chromium|Firefox|Version)+\\/([0-9]+)\\./);\n        var isWebview = false;\n\n        if (browserMatch && browserMatch.length >= 2) {\n            browser = browserMatch[1];\n        } else if (this._userAgent.match(/^\\(?Mozilla/)) {\n            browser = 'Mozilla';\n\n            if (this._userAgent.match(/MSIE/)\n                || this._userAgent.match(/; Trident\\/.*rv:[0-9]+/)) {\n                browser = 'IE';\n\n                if (versionMatch = this._userAgent.match(/MSIE ([0-9]+)/)) { // eslint-disable-line no-cond-assign\n                    version = parseInt(versionMatch[1], 10);\n\n                    // Compatibility view?\n                    if (versionMatch = this._userAgent.match(/MSIE [0-9]+.*MSIE ([0-9]+)/)) { // eslint-disable-line no-cond-assign\n                        version = parseInt(versionMatch[1], 10);\n                    }\n                } else if (versionMatch = this._userAgent.match(/rv:([0-9]+)/)) { // eslint-disable-line no-cond-assign\n                    version = parseInt(versionMatch[1], 10);\n                }\n            }\n        }\n\n        if (browser === 'Chrome' && this._userAgent.match(/OPR\\//)) {\n            // Opera pretends to be Chrome\n            browser = 'Opera';\n            versionMatch = this._userAgent.match(/(OPR)\\/([0-9]+)\\./);\n        } else if (browser === 'Chrome' && this._userAgent.match(/Edge\\//)) {\n            // Edge pretends to be Chrome\n            browser = 'Edge';\n            versionMatch = this._userAgent.match(/(Edge)\\/([0-9]+)\\./);\n        } else if ((browser === 'Firefox' || browser === 'IE') && this._userAgent.match(/Opera/)) {\n            // Opera pretends to be Firefox or IE\n            browser = 'Opera';\n            versionMatch = this._userAgent.match(/(Opera) ([0-9]+)\\./);\n        } else if (browser === 'Mozilla' && this._userAgent.match(/iphone|ipod|ipad/i)) {\n            browser = 'Safari';\n            version = parseInt(_.get(this._userAgent.match(/OS\\s([0-9]+)/), [1]), 10);\n            isWebview = true;\n        }\n\n        // https://developer.chrome.com/multidevice/user-agent\n        if (browser === 'Chrome' && (this._userAgent.match(/; wv/) || (this._userAgent.match(/Android/) && this._userAgent.match(/Version\\/[0-9].[0-9]/)))) {\n            isWebview = true;\n        }\n\n        if (browser !== 'IE' && versionMatch && versionMatch.length >= 3) {\n            version = parseInt(versionMatch[2], 10);\n        }\n\n        if (navigator.product === 'ReactNative') {\n            browser = 'ReactNative';\n            version = navigator.productSub || '?';\n        }\n\n        return {\n            browser: browser,\n            version: version,\n            isWebview: isWebview\n        };\n    };\n\n    return DetectBrowser;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-detect-browser/src/detectBrowser.js\n// module id = 55\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function (_, assert) {\n    'use strict';\n\n    /**\n     * Create a new disposable object.\n     *\n     * @param cleanup The callback to perform whatever cleanup is required when this object is disposed.\n     * @constructor\n     */\n    function Disposable(cleanup) {\n        assert.isFunction(cleanup, 'cleanup');\n\n        this._cleanup = cleanup;\n    }\n\n    Disposable.prototype.dispose = function () {\n        return this._cleanup.call();\n    };\n\n    Disposable.prototype.toString = function () {\n        return _.toString(this);\n    };\n\n    return Disposable;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-disposable/src/Disposable.js\n// module id = 56\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light'\n], function (_) {\n    'use strict';\n\n    function DisposableList() {\n        this._list = [];\n    }\n\n    DisposableList.prototype.add = function (disposable) {\n        if (!disposable || !_.isFunction(disposable.dispose)) {\n            throw new Error('\"disposable\" must be a disposable or implement dispose');\n        }\n\n        this._list.push(disposable);\n    };\n\n    DisposableList.prototype.dispose = function () {\n        var results = [];\n\n        _.forEach(this._list, function (disposable) {\n            results.push(disposable.dispose());\n        });\n\n        this._list = [];\n\n        return results;\n    };\n\n    DisposableList.prototype.toString = function () {\n        return _.toString(this);\n    };\n\n    return DisposableList;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-disposable/src/DisposableList.js\n// module id = 57\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './Event'\n], function (_, assert, Event) {\n    'use strict';\n\n    function NamedEvents() {\n        this._events = {};\n    }\n\n    NamedEvents.prototype.fire = function (name, args, context) {\n        assert.isStringNotEmpty(name, 'name');\n\n        if (_.includes(_.keys(this._events), name)) {\n            this._events[name].fire(args, context);\n        }\n    };\n\n    NamedEvents.prototype.fireAsync = function (name, args, context) {\n        assert.isStringNotEmpty(name, 'name');\n\n        if (_.includes(_.keys(this._events), name)) {\n            this._events[name].fireAsync(args, context);\n        }\n    };\n\n    NamedEvents.prototype.listen = function listen(name, listener) {\n        assert.isStringNotEmpty(name, 'name');\n\n        var event = _.includes(_.keys(this._events), name) ? this._events[name] : (this._events[name] = new Event());\n\n        return event.listen(listener);\n    };\n\n    NamedEvents.prototype.size = function size(name) {\n        if (_.includes(_.keys(this._events), name)) {\n            return this._events[name].size();\n        }\n\n        return 0;\n    };\n\n    NamedEvents.prototype.dispose = function dispose() {\n        _.forOwn(this._events, function (event) {\n            event.dispose();\n        });\n\n        this._events = {};\n    };\n\n    NamedEvents.prototype.toString = function toString() {\n        return 'NamedEvents|' + _.keys(this._events).length;\n    };\n\n    return NamedEvents;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-event/src/NamedEvents.js\n// module id = 58\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable'\n], function (_, assert, disposable) {\n    'use strict';\n\n    var requestMethods = {\n        'get': 'GET',\n        'post': 'POST',\n        'put': 'PUT',\n        'delete': 'DELETE' // Delete is reserved\n    };\n    var defaultTimeout = 3000;\n    var defaultMaxAttempts = 1;\n    var defaultBackoff = 2;\n    var defaultRetryDelay = 1500;\n    var errorCodes = {\n        clientAborted: {\n            id: 4000,\n            name: 'Aborted by Client'\n        }\n    };\n\n    function Http() {\n\n    }\n\n    Http.prototype.get = function get(url, settings, callback) {\n        settings = settings || {};\n\n        validateSettings(settings);\n\n        var requestUrl = appendQueryParameters(settings.queryParameters || {}, url);\n        var xhr = getAndOpenVendorSpecificXmlHttpMethod(requestMethods.get, requestUrl, callback);\n        var handleResponse = _.bind(appendResponseTimeAndContinue, this, _.now(), callback);\n\n        if (!xhr) {\n            return callback(getUnsupportedError());\n        }\n\n        if (settings.mimeType) {\n            xhr.overrideMimeType(settings.mimeType);\n        }\n\n        if (settings.responseType) {\n            xhr.responseType = settings.responseType;\n        }\n\n        appendDataTypeHeaders(xhr, settings);\n\n        xhr.addEventListener('readystatechange', _.bind(handleReadyStateChange, this, xhr, settings, handleResponse));\n\n        xhr.timeout = settings.timeout || defaultTimeout;\n\n        xhr.send();\n    };\n\n    Http.prototype.post = function postWithRetry(url, data, settings, callback) {\n        return methodWithData.call(this, requestMethods.post, url, data, settings, callback);\n    };\n\n    Http.prototype.put = function postWithRetry(url, data, settings, callback) {\n        return methodWithData.call(this, requestMethods.put, url, data, settings, callback);\n    };\n\n    Http.prototype.delete = function postWithRetry(url, data, settings, callback) {\n        return methodWithData.call(this, requestMethods.delete, url, data, settings, callback);\n    };\n\n    Http.prototype.getWithRetry = function getWithRetry(url, settings, callback) {\n        var methodWithoutCallback = _.bind(this.get, this, url, settings);\n        var requestState = {\n            startTime: _.now(),\n            isDisposed: false\n        };\n\n        return handleMethodWithRetry.call(this, url, settings, methodWithoutCallback, requestState, callback);\n    };\n\n    Http.prototype.postWithRetry = function postWithRetry(url, data, settings, callback) {\n        return methodRetryWithData.call(this, this.post, url, data, settings, callback);\n    };\n\n    Http.prototype.putWithRetry = function postWithRetry(url, data, settings, callback) {\n        return methodRetryWithData.call(this, this.put, url, data, settings, callback);\n    };\n\n    Http.prototype.deleteWithRetry = function postWithRetry(url, data, settings, callback) {\n        return methodRetryWithData.call(this, this.delete, url, data, settings, callback);\n    };\n\n    function methodWithData(method, url, data, settings, callback) {\n        settings = settings || {};\n\n        validateSettings(settings);\n\n        var requestUrl = appendQueryParameters(settings.queryParameters || {}, url);\n        var xhr = getAndOpenVendorSpecificXmlHttpMethod(method, requestUrl, callback);\n        var handleResponse = _.bind(appendResponseTimeAndContinue, this, _.now(), callback);\n\n        if (!xhr) {\n            return callback(getUnsupportedError());\n        }\n\n        if (settings.responseType) {\n            xhr.responseType = settings.responseType;\n        }\n\n        appendDataTypeHeaders(xhr, settings);\n\n        xhr.addEventListener('readystatechange', _.bind(handleReadyStateChange, this, xhr, settings, handleResponse));\n\n        xhr.timeout = settings.timeout || 15000;\n\n        xhr.send(data);\n    }\n\n    function methodRetryWithData(method, url, data, settings, callback) {\n        var methodWithoutCallback = _.bind(method, this, url, data, settings);\n        var requestState = {\n            startTime: _.now(),\n            isDisposed: false\n        };\n\n        return handleMethodWithRetry.call(this, url, settings, methodWithoutCallback, requestState, callback);\n    }\n\n    function validateSettings(settings) {\n        assert.isObject(settings, 'settings');\n\n        if (settings.queryParameters) {\n            assert.isObject(settings.queryParameters, 'settings.queryParameters');\n        }\n\n        if (settings.mimeType) {\n            assert.stringNotEmpty(settings.mimeType, 'settings.mimeType');\n        }\n\n        if (settings.accept) {\n            assert.stringNotEmpty(settings.accept, 'settings.accept');\n        }\n\n        if (settings.contentType) {\n            assert.stringNotEmpty(settings.contentType, 'settings.contentType');\n        }\n\n        if (settings.responseType) {\n            assert.stringNotEmpty(settings.responseType, 'settings.responseType');\n        }\n\n        if (!_.isNullOrUndefined(settings.timeout)) {\n            assert.isNumber(settings.timeout, 'settings.timeout');\n        }\n    }\n\n    function appendQueryParameters(queryParameters, url) {\n        var queryParameterString = _.reduce(queryParameters, function (paramString, value, key) {\n            paramString += !paramString ? '?' : '&';\n\n            return paramString + key.toString() + '=' + value.toString();\n        }, '');\n\n        return queryParameterString.length > 0 ? url + queryParameterString : url;\n    }\n\n    function getAndOpenVendorSpecificXmlHttpMethod(requestMethod, requestUrl) {\n        var xhr = new XMLHttpRequest();\n\n        if ('withCredentials' in xhr) {\n            // Most browsers.\n            xhr.open(requestMethod, requestUrl, true);\n        } else if (typeof XDomainRequest !== 'undefined') {\n            // IE8 & IE9\n            xhr = new XDomainRequest();\n            xhr.open(requestMethod, requestUrl);\n        } else {\n            return;\n        }\n\n        return xhr;\n    }\n\n    function getUnsupportedError() {\n        // CORS not supported.\n        var err = new Error('unsupported');\n\n        err.code = 'unsupported';\n\n        return err;\n    }\n\n    function appendDataTypeHeaders(xhr, settings) {\n        var contentType = settings.contentType || 'application/json';\n        var accept = settings.accept || contentType;\n\n        var headers = _.assign({}, {\n            'Content-Type': contentType,\n            'Accept': accept\n        }, _.get(settings, ['headers'], {}));\n\n        _.forOwn(headers, function (headerValue, headerName) {\n            xhr.setRequestHeader(headerName, headerValue);\n        });\n    }\n\n    function handleReadyStateChange(xhr, options, callback) {\n        if (xhr.readyState === 4 /* DONE */) {\n            if (xhr.status === 200) {\n                var responseHeaders = getXhrResponseHeaders(xhr);\n                var response = {\n                    data: xhr.response || xhr.responseText,\n                    headers: responseHeaders,\n                    rawXhr: xhr\n                };\n\n                callback(null, response);\n            } else {\n                var err = new Error(xhr.status === 0 ? 'timeout' : xhr.statusText);\n                var additionalRetryErrorCodes = _.get(options, ['retryOptions', 'additionalRetryErrorCodes'], []);\n\n                _.forEach(additionalRetryErrorCodes, function(code) {\n                    assert.isNumber(code, 'additionalRetryErrorCode');\n                });\n\n                err.code = xhr.status;\n\n                if ((xhr.status >= 500 && xhr.status < 600) || _.includes(additionalRetryErrorCodes, xhr.status)) {\n                    err.retryable = true;\n                }\n\n                callback(err);\n            }\n        }\n    }\n\n    function getXhrResponseHeaders(xhr) {\n        var responseHeadersString = xhr.getAllResponseHeaders();\n\n        return _.reduce(responseHeadersString.trim().split(/[\\r\\n]+/), function(headers, header) {\n            var parts = header.split(': ');\n            var headerName = parts.shift();\n            var headerValue = parts.join(': ');\n\n            if (headerName) {\n                headers[headerName] = headerValue;\n            }\n\n            return headers;\n        }, {});\n    }\n\n    function appendResponseTimeAndContinue(startTime, callback, error, response) {\n        if (response) {\n            _.set(response, ['stats', 'successResponseTime'], _.now() - startTime);\n        }\n\n        callback(error, response);\n    }\n\n    function appendTotalResponseTimeAndContinue(startTime, attempts, callback, error, response) {\n        if (response) {\n            _.set(response, ['stats', 'totalResponseTimeForAllAttempts'], _.now() - startTime);\n            _.set(response, ['stats', 'attempts'], attempts);\n        }\n\n        callback(error, response);\n    }\n\n    function handleMethodWithRetry(url, options, methodWithoutCallback, requestState, callback, attempt) {\n        attempt = attempt || 1;\n\n        var that = this;\n        var initalRequestDelay = _.get(options, ['delay'], null);\n        var retryDelay = _.get(options, ['retryOptions', 'delay'], defaultRetryDelay);\n        var backoff = _.get(options, ['retryOptions', 'backoff'], defaultBackoff);\n        var maxAttempts = _.get(options, ['retryOptions', 'maxAttempts'], defaultMaxAttempts);\n        var requestDelay = attempt > 1 ? retryDelay * Math.pow(attempt, backoff) : initalRequestDelay;\n\n        var retryIfFailed = function(error, response) {\n            if (requestState.isDisposed) {\n                return callback(getErrorByEnum(errorCodes.clientAborted));\n            }\n\n            if (error && error.retryable && attempt < maxAttempts) {\n                return handleMethodWithRetry.call(that, url, options, methodWithoutCallback, requestState, callback, attempt + 1);\n            }\n\n            return appendTotalResponseTimeAndContinue.call(that, requestState.startTime, attempt, callback, error, response);\n        };\n\n        var disposableRequest = new disposable.Disposable(function() {\n            if (_.isNumber(requestState.mostRecentTimeout)) {\n                clearTimeout(requestState.mostRecentTimeout);\n            }\n\n            requestState.isDisposed = true;\n        });\n\n        if (!_.isNumber(initalRequestDelay) && attempt === 1 || _.get(options, ['retryOptions', 'sync'], false)) {\n            methodWithoutCallback.call(that, retryIfFailed);\n\n            return disposableRequest;\n        }\n\n        delayedRequest.call(that, url, options, methodWithoutCallback, requestState, requestDelay, retryIfFailed);\n\n        return disposableRequest;\n    }\n\n    function delayedRequest(url, options, methodWithoutCallback, requestState, delay, callback) {\n        var that = this;\n\n        requestState.mostRecentTimeout = setTimeout(function() {\n            if (requestState.isDisposed) {\n                return callback(getErrorByEnum(errorCodes.clientAborted));\n            }\n\n            methodWithoutCallback.call(that, callback);\n        }, delay);\n    }\n\n    function getErrorByEnum(codeEnum) {\n        var errorWithEnum = new Error(codeEnum.name);\n\n        errorWithEnum.code = codeEnum.id;\n\n        return errorWithEnum;\n    }\n\n    return new Http();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-http/src/http.js\n// module id = 59\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function () {\n    'use strict';\n\n    var _ = function () {\n\n    };\n\n    _.get = function get(objectToTraverse, path, defaultValue) {\n        if (_.isNullOrUndefined(objectToTraverse)) {\n            return defaultValue;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        var valueAtPath = _.reduce(properties, function (valueAtPath, prop) {\n            if (_.isObject(valueAtPath) || _.isArray(valueAtPath)) {\n                return valueAtPath[prop];\n            }\n\n            return;\n        }, objectToTraverse);\n\n        return _.isUndefined(valueAtPath) ? defaultValue : valueAtPath;\n    };\n\n    _.set = function get(objectToTraverse, path, value) {\n        if (!_.isObject(objectToTraverse)) {\n            return objectToTraverse;\n        }\n\n        assertIsObject(objectToTraverse, 'objectToTraverse');\n\n        var currentLocation = objectToTraverse;\n        var properties = path;\n\n        if (_.isString(properties)) {\n            properties = buildPathFromString(path);\n        } else if (!_.isArray(properties)) {\n            throw new Error('Unsupported path type ' + typeof path);\n        }\n\n        _.forEach(properties, function (prop, index) {\n            setNextValue(currentLocation, prop, getNextValue(properties, index, currentLocation, value));\n\n            currentLocation = currentLocation[prop];\n        });\n\n        return objectToTraverse;\n    };\n\n    _.bind = function bind(callback, that) {\n        var argsAfterContext = Array.prototype.slice.call(arguments, 2);\n\n        return function boundFunction() {\n            if (!_.isFunction(callback)) {\n                throw new TypeError('_.bind - callback must be a function');\n            }\n\n            var combinedArguments = argsAfterContext.concat(Array.prototype.slice.call(arguments));\n\n            return callback.apply(that, combinedArguments);\n        };\n    };\n\n    _.now = function now() {\n        return new Date().getTime();\n    };\n\n    _.utc = function utc(date) {\n        if (_.isNumber(date)) {\n            return date;\n        } else if (!date) {\n            return NaN;\n        }\n\n        return Math.floor(date);\n    };\n\n    _.isoString = function isoString() {\n        var now = new Date();\n\n        if (now.toISOString) {\n            return now.toISOString();\n        }\n\n        return now.getUTCFullYear() +\n            '-' + _.pad(now.getUTCMonth() + 1, 2) +\n            '-' + _.pad(now.getUTCDate(), 2) +\n            'T' + _.pad(now.getUTCHours(), 2) +\n            ':' + _.pad(now.getUTCMinutes(), 2) +\n            ':' + _.pad(now.getUTCSeconds(), 2) +\n            '.' + (now.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n            'Z';\n    };\n\n    _.map = function map(collection, callback) {\n        assertIsObject(collection, 'collection');\n\n        var newArray = [];\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function mapCollection(item, index) {\n                if (_.isString(callback) && _.isObject(item)) {\n                    newArray.push(item[callback]);\n                } else if (_.isFunction(callback)) {\n                    newArray.push(callback(item, index));\n                }\n            });\n        } else {\n            _.forOwn(collection, function mapCollection(value, key) {\n                if (_.isFunction(callback)) {\n                    newArray.push(callback(value, key));\n                }\n            });\n        }\n\n        return newArray;\n    };\n\n    _.values = function (collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            throw new Error('Collection must be an object.');\n        }\n\n        return _.map(collection, function (value) {\n            return value;\n        });\n    };\n\n    _.keys = function (collection) {\n        if (!_.isObject(collection) || _.isArray(collection)) {\n            throw new Error('Collection must be an object.');\n        }\n\n        return _.map(collection, function (value, key) {\n            return key;\n        });\n    };\n\n    _.forEach = function forEach(collection, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('Callback must be a function');\n        }\n\n        assertIsArray(collection, 'collection');\n\n        for (var i = 0; i < collection.length; i++) {\n            var callbackResponse = callback(collection[i], i);\n\n            if (callbackResponse === false) {\n                return;\n            }\n        }\n    };\n\n    _.forOwn = function forOwn(objectWithProperties, callback) {\n        if (!_.isFunction(callback)) {\n            throw new Error('Callback must be a function');\n        }\n\n        assertIsObject(objectWithProperties, 'objectWithProperties');\n\n        var keys = Object.keys(objectWithProperties);\n\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n\n            if (objectWithProperties.hasOwnProperty(key) || Object.prototype.hasOwnProperty.call(objectWithProperties, key)) {\n                callback(objectWithProperties[key], key);\n            }\n        }\n    };\n\n    _.argumentsToArray = function (args) {\n        if (!_.isObject(args) || !args.length) {\n            throw new Error('Collection must be arguments');\n        }\n\n        var collection = [];\n\n        for (var i = 0; i < args.length; i++) {\n            collection.push(args[i]);\n        }\n\n        return collection;\n    };\n\n    _.assign = function assign(target) {\n        assertIsObject(target, 'target');\n\n        var sources = _.argumentsToArray(arguments);\n\n        sources.shift();\n\n        _.forEach(sources, function (source, index) {\n            assertIsObject(source, 'source ' + index);\n\n            _.forOwn(source, function (value, key) {\n                target[key] = value;\n            });\n        });\n\n        return target;\n    };\n\n    _.includes = function includes(collection, value) {\n        if (_.isString(collection)) {\n            assertIsString(value, 'Includes value and search parameter');\n\n            return collection.indexOf(value) > -1;\n        }\n\n        if (_.isUndefined(collection) || _.isUndefined(value)) {\n            return false;\n        }\n\n        assertIsObject(collection, 'collection');\n\n        var hasValue = false;\n\n        var checkCollection = function checkCollection(currentValue) {\n            if (currentValue === value) {\n                hasValue = true;\n            }\n        };\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, checkCollection);\n        } else {\n            _.forOwn(collection, checkCollection);\n        }\n\n        return hasValue;\n    };\n\n    _.reduce = function reduce(collection, callback, initialValue) {\n        assertIsObject(collection, 'collection');\n\n        var result = initialValue === _.noop() ? null : initialValue;\n\n        if (collection.constructor === Array) {\n            _.forEach(collection, function (item, index) {\n                result = callback(result, item, index);\n            });\n        } else {\n            _.forOwn(collection, function (value, key) {\n                result = callback(result, value, key);\n            });\n        }\n\n        return result;\n    };\n\n    _.sample = function sample(collection) {\n        assertIsArray(collection, 'collection');\n\n        return collection[Math.floor(Math.random() * collection.length)];\n    };\n\n    _.uniqueId = function () {\n        return (_.now() * Math.random()).toString();\n    };\n\n    _.find = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var hasItem;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value) && index >= (initialIndex || 0)) {\n                hasItem = value;\n\n                return hasItem;\n            }\n        });\n\n        return hasItem;\n    };\n\n    _.findIndex = function find(collection, callback, initialIndex) {\n        assertIsArray(collection, 'collection');\n\n        var hasItem;\n\n        _.forEach(collection, function findInCollection(value, index) {\n            if (callback(value, index) && index >= (initialIndex || 0)) {\n                hasItem = index;\n\n                return hasItem;\n            }\n        });\n\n        return hasItem;\n    };\n\n    _.filter = function filter(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var newCollection = [];\n\n        _.forEach(collection, function findInCollection(value) {\n            if (callback(value)) {\n                newCollection.push(value);\n            }\n        });\n\n        return newCollection;\n    };\n\n    _.remove = function remove(collection, callback) {\n        assertIsArray(collection, 'collection');\n\n        var filterCallback = function filterCallback(value) {\n            return !callback(value);\n        };\n\n        return _.filter(collection, filterCallback);\n    };\n\n    _.take = function take(collection, size) {\n        assertIsArray(collection, 'collection');\n\n        return collection.slice(0, size);\n    };\n\n    _.hasDifferences = function hasDifferences(collectionA, collectionB, deep) {\n        return _.findDifferences(collectionA, collectionB, deep).length > 0;\n    };\n\n    _.findDifferences = function findDifferences(collectionA, collectionB, deep) {\n        var differences = [];\n        var visitedKeys = {};\n\n        function getDifferences(value, indexOrKey) {\n            visitedKeys[indexOrKey] = 1;\n\n            if ((_.isObject(value) || _.isArray(value)) && deep) {\n                if (!_.hasIndexOrKey(collectionB, indexOrKey)) {\n                    differences.push(indexOrKey);\n                } else if (!_.sameTypes(collectionA[indexOrKey], collectionB[indexOrKey])) {\n                    differences.push(indexOrKey);\n                } else if (_.hasDifferences(collectionA[indexOrKey], collectionB[indexOrKey], deep)) {\n                    differences.push(indexOrKey);\n                }\n            } else if (collectionA[indexOrKey] !== collectionB[indexOrKey]) {\n                differences.push(indexOrKey);\n            }\n        }\n\n        if (_.isArray(collectionA) && _.isArray(collectionB)) {\n            if (collectionA.length > collectionB.length) {\n                _.forEach(collectionA, getDifferences);\n            } else {\n                _.forEach(collectionB, getDifferences);\n            }\n        } else if (_.isObject(collectionA) && _.isObject(collectionB) && !_.isArray(collectionA) && !_.isArray(collectionB)) {\n            _.forOwn(collectionA, getDifferences);\n\n            _.forOwn(collectionB, function (value, key) {\n                if (!visitedKeys.hasOwnProperty(key)) {\n                    differences.push(key);\n                }\n            });\n        } else {\n            throw new Error('Object types do not match');\n        }\n\n        return differences;\n    };\n\n    _.hasIndexOrKey = function hasIndexOrKey(collection, indexOrKey) {\n        if (_.isArray(collection)) {\n            return collection.length > parseInt(indexOrKey);\n        } else if (_.isObject(collection)) {\n            return collection.hasOwnProperty(indexOrKey);\n        }\n\n        return false;\n    };\n\n    _.startsWith = function startsWith(value, prefix) {\n        assertIsString(value, 'value');\n        assertIsString(prefix, 'prefix');\n\n        return value.indexOf(prefix) === 0;\n    };\n\n    _.sameTypes = function sameTypes(first, second) {\n        if (_.isNullOrUndefined(first) || _.isNullOrUndefined(second)) {\n            return _.isNullOrUndefined(first) && _.isNullOrUndefined(second);\n        }\n\n        if (_.isArray(first) || _.isArray(second)) {\n            return _.isArray(first) && _.isArray(second);\n        }\n\n        return typeof first === typeof second;\n    };\n\n    _.freeze = function freeze(obj) {\n        if ('freeze' in Object) {\n            return Object.freeze(obj);\n        }\n\n        return obj;\n    };\n\n    _.noop = function () {\n        return undefined;\n    };\n\n    _.isObject = function isObject(obj) {\n        if (obj === null) {\n            return false;\n        }\n\n        return typeof obj === 'object';\n    };\n\n    _.isArray = function isArray(array) {\n        if (!_.isObject(array)) {\n            return false;\n        }\n\n        return array.constructor === Array;\n    };\n\n    _.isString = function isString(string) {\n        return typeof string === 'string';\n    };\n\n    _.isNumber = function isNumber(number) {\n        if (isNaN(number)) {\n            return false;\n        }\n\n        return typeof number === 'number';\n    };\n\n    _.isBoolean = function isBoolean(bool) {\n        return typeof bool === 'boolean';\n    };\n\n    _.isFunction = function isFunction(func) {\n        return typeof func === 'function';\n    };\n\n    _.isNullOrUndefined = function isNullOrUndefined(value) {\n        return value === null || _.isUndefined(value);\n    };\n\n    _.isUndefined = function isUndefined(value) {\n        return typeof value === 'undefined';\n    };\n\n    _.getEnumName = function getEnumName(enums, nameOrId) {\n        var enumObject = null;\n\n        var enumArray = _.map(enums, function (value) {\n            return value;\n        });\n\n        if (_.isNumber(nameOrId)) {\n            enumObject = _.find(enumArray, function (current) {\n                return current.id === nameOrId;\n            });\n        } else if (_.isString(nameOrId)) {\n            enumObject = _.find(enumArray, function (current) {\n                return current.name.toLowerCase() === nameOrId.toLowerCase();\n            });\n        }\n\n        if (enumObject) {\n            return enumObject.name;\n        }\n\n        return null;\n    };\n\n    _.toString = function toString(data) {\n        if (_.isString(data)) {\n            return data;\n        }\n\n        if (_.isBoolean(data)) {\n            return data ? 'true' : 'false';\n        }\n\n        if (_.isNumber(data)) {\n            return data.toString();\n        }\n\n        var toStringStr = '';\n\n        if (data) {\n            if (_.isFunction(data.toString)) {\n                toStringStr = data.toString();\n            } else if (_.isObject(data.toString)) {\n                try {\n                    toStringStr = data.toString();\n                } catch (e) {\n                    toStringStr = '[object invalid toString()]';\n                }\n            }\n        }\n\n        if (toStringStr.indexOf('[object') !== 0) {\n            return toStringStr;\n        }\n\n        var cache = [];\n\n        return toStringStr + JSON.stringify(data, function (key, value) {\n            if (_.isObject(value) && !_.isNullOrUndefined(value)) {\n                if (_.includes(cache, value)) {\n                    return '<recursive>';\n                }\n\n                cache.push(value);\n            }\n\n            return key === '' ? value : _.toString(value);\n        });\n    };\n\n    _.pad = function padNumber(value, numberToPad) {\n        assertIsNumber(value, 'value');\n        assertIsNumber(numberToPad, 'numberToPad');\n\n        var valueLength = value.toString().length;\n\n        for (var i = 0; i < numberToPad - valueLength; i++) {\n            value = '0' + value.toString();\n        }\n\n        return value.toString();\n    };\n\n    _.addEventListener = function addEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixAddEventListener) {\n            target.phenixAddEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.addEventListener) {\n            target.addEventListener(eventName, listener, !!useCapture);\n        } else if (target.attachEvent) {\n            target.attachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    _.removeEventListener = function removeEventListener(target, eventName, listener, useCapture) {\n        assertIsObject(target, 'target');\n        assertIsString(eventName, 'eventName');\n        assertIsFunction(listener, 'listener');\n\n        if (target.phenixRemoveEventListener) {\n            target.phenixRemoveEventListener.call(target, eventName, listener, !!useCapture);\n        } else if (target.removeEventListener) {\n            target.removeEventListener(eventName, listener, !!useCapture);\n        } else if (target.detachEvent) {\n            target.detachEvent(\"on\" + eventName, listener);\n        }\n    };\n\n    var assertIsArray = function assertIsArray(collection) {\n        if (!_.isArray(collection)) {\n            throw new Error('Input must be an array.');\n        }\n    };\n\n    var assertIsNumber = function assertIsNumber(number, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isNumber(number)) {\n            throw new Error(name + ' must be a number.');\n        }\n    };\n\n    var assertIsObject = function assertIsObject(collection, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isObject(collection)) {\n            throw new Error('collection type not supported - ' + name + ' must be an array or object.');\n        }\n    };\n\n    var assertIsFunction = function assertIsFunction(callback, name) {\n        assertIsString(name, 'name');\n\n        if (!_.isFunction(callback)) {\n            throw new Error(name + ' must be a function.');\n        }\n    };\n\n    var assertIsString = function assertIsString(value, name) {\n        if (!_.isString(name)) {\n            throw new Error('Name must be a string.');\n        }\n\n        if (!_.isString(value)) {\n            throw new Error(name + ' must be a string.');\n        }\n    };\n\n    function buildPathFromString(stringPath) {\n        var properties = stringPath.split('.');\n        var path = [];\n\n        _.forEach(properties, function (prop) {\n            path = path.concat(buildSubPathFromString(prop));\n        });\n\n        return path;\n    }\n\n    function buildSubPathFromString(stringPath) {\n        var possibleSubPath = '';\n        var path = [];\n        var countOfOpeningBrackets = 0;\n\n        for (var i = 0; i < stringPath.length; i++) {\n            if (stringPath[i] === '[') {\n                countOfOpeningBrackets++;\n\n                if (!_.isString(possibleSubPath) || countOfOpeningBrackets > 1) {\n                    return [stringPath];\n                }\n\n                if (possibleSubPath) {\n                    path.push(possibleSubPath);\n                    possibleSubPath = '';\n                }\n            } else if (stringPath[i] === ']') {\n                countOfOpeningBrackets--;\n\n                if (countOfOpeningBrackets !== 0) {\n                    return [stringPath];\n                }\n\n                path.push(possibleSubPath);\n                possibleSubPath = '';\n            } else if (i === stringPath.length - 1) {\n                return [stringPath];\n            } else {\n                possibleSubPath += stringPath[i];\n            }\n        }\n\n        return path;\n    }\n\n    function getNextValue(path, index, currentLocation, value) {\n        if (path.length - 1 === index) {\n            return value;\n        }\n\n        var currentPropOrIndex = path[index];\n        var nextPropOrIndex = path[index + 1];\n\n        if (_.isArray(currentLocation[currentPropOrIndex]) || _.isObject(currentLocation[currentPropOrIndex])) {\n            return currentLocation[currentPropOrIndex];\n        }\n\n        if (!_.isArray(currentLocation[currentPropOrIndex]) && _.isNumber(parseInt(nextPropOrIndex))) {\n            return [];\n        } else if (!_.isObject(currentLocation[currentPropOrIndex]) && _.isString(nextPropOrIndex)) {\n            return {};\n        }\n\n        throw new Error('Unsupported type ' + typeof currentPropOrIndex + ' when setting property or index');\n    }\n\n    function setNextValue(objectToTraverse, propertyOrIndex, value) {\n        if (_.isNumber(parseInt(propertyOrIndex)) && _.isArray(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        } else if (_.isString(propertyOrIndex) && _.isObject(objectToTraverse)) {\n            return objectToTraverse[propertyOrIndex] = value;\n        }\n\n        throw new Error('Unsupported type ' + typeof propertyOrIndex + ' when setting property or index');\n    }\n\n    return _;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-lodash-light/src/LodashLight.js\n// module id = 60\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './logging.json'\n], function (_, assert, logging) {\n    'use strict';\n\n    function ConsoleAppender() {\n        this._minLevel = logging.level.TRACE;\n    }\n\n    ConsoleAppender.prototype.setThreshold = function setThreshold(level) {\n        assert.isNumber(level, 'level');\n\n        this._minLevel = level;\n    };\n\n    ConsoleAppender.prototype.getThreshold = function getThreshold() {\n        return this._minLevel;\n    };\n\n    ConsoleAppender.prototype.log = function (since, level, category, messages, sessionId, userId, environment, version, context) {\n        if (context.level < this._minLevel) {\n            return;\n        }\n\n        messages[0] = since + ' [' + category + '] ' + level + ' ' + messages[0];\n\n        if (context.level > logging.level.INFO) {\n            logError(messages);\n        } else {\n            log(messages);\n        }\n    };\n\n    var log = function (args) {\n        console.log.apply(console, args);\n    } || function () { };\n\n    var logError = function (args) {\n        console.error.apply(console, args);\n    } || log;\n\n    return ConsoleAppender;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-logging/src/ConsoleAppender.js\n// module id = 61\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './logging.json'\n], function (_, assert, logging) {\n    'use strict';\n\n    var defaultCategory= 'websdk';\n    var start = getGlobal()['__phenixPageLoadTime'] || getGlobal()['__pageLoadTime'] || _.now();\n    var defaultEnvironment = 'production' || '?';\n    var sdkVersion = '2018-04-11T21:42:19Z' || '?';\n    var releaseVersion = '2018.2.2';\n\n    function Logger() {\n        this._appenders = [];\n        this._userId = null;\n        this._sessionId = null;\n        this._environment = defaultEnvironment;\n        this._applicationVersion = sdkVersion;\n    }\n\n    Logger.prototype.trace = function trace(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.TRACE});\n    };\n\n    Logger.prototype.debug = function debug(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.DEBUG});\n    };\n\n    Logger.prototype.info = function info(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.INFO});\n    };\n\n    Logger.prototype.warn = function warn(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.WARN});\n    };\n\n    Logger.prototype.error = function error(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.ERROR});\n    };\n\n    Logger.prototype.fatal = function fatal(/* formatStr, [parameter], ...*/) {\n        return log.call(this, arguments, {level: logging.level.FATAL});\n    };\n\n    Logger.prototype.addAppender = function addAppender(appender) {\n        assert.isObject(appender, 'appender');\n        assert.isFunction(appender.log, 'appender.log');\n\n        this._appenders.push(appender);\n    };\n\n    Logger.prototype.getAppenders = function getAppenders() {\n        return this._appenders;\n    };\n\n    Logger.prototype.getUserId = function getUserId() {\n        return this._userId;\n    };\n\n    Logger.prototype.setUserId = function setUserId(userId) {\n        this._userId = userId;\n    };\n\n    Logger.prototype.getEnvironment = function getEnvironment() {\n        return this._environment;\n    };\n\n    Logger.prototype.setEnvironment = function setEnvironment(environment) {\n        this._environment = environment;\n    };\n\n    Logger.prototype.getApplicationVersion = function getApplicationVersion() {\n        return this._applicationVersion;\n    };\n\n    Logger.prototype.setApplicationVersion = function setApplicationVersion(version) {\n        this._applicationVersion = version;\n    };\n\n    Logger.prototype.getObservableSessionId = function getObservableSessionId() {\n        return this._observableSessionId;\n    };\n\n    Logger.prototype.setObservableSessionId = function setObservableSessionId(observableSessionId) {\n        this._observableSessionId = observableSessionId;\n\n        if (this._sessionIdSubscription) {\n            this._sessionIdSubscription.dispose();\n        }\n\n        if (observableSessionId) {\n            assert.isObject(observableSessionId, 'observableSessionId');\n\n            this._sessionIdSubscription = this._observableSessionId.subscribe(_.bind(onSessionIdChange, this), {initial: 'notify'});\n        }\n    };\n\n    function onSessionIdChange(sessionId) {\n        this._sessionId = sessionId;\n\n        if (!sessionId) {\n            this.info('Websdk version [%s] ([%s]), user agent [%s]', sdkVersion, releaseVersion, navigator.userAgent);\n        } else {\n            this.info('Session started on websdk version [%s] ([%s]), user agent [%s]', sdkVersion, releaseVersion, navigator.userAgent);\n        }\n    }\n\n    function log(messages, context) {\n        var now = _.now();\n        var since = (now - start) / 1000;\n        var level = convertLevel(context.level);\n        var category = context.name || defaultCategory;\n        var that = this;\n\n        _.forEach(this._appenders, function(appender) {\n            try {\n                appender.log(since, level, category, stringify(Array.prototype.slice.call(messages)), that._sessionId, that._userId, that._environment, that._applicationVersion, context);\n            } catch (e) { } // eslint-disable-line no-empty\n        });\n    }\n\n    function convertLevel(jsLoggerLevel) {\n        switch (jsLoggerLevel) {\n        case logging.level.TRACE:\n            return 'Trace';\n        case logging.level.DEBUG:\n            return 'Debug';\n        case logging.level.INFO:\n            return 'Info';\n        case logging.level.WARN:\n            return 'Warn';\n        case logging.level.ERROR:\n            return 'Error';\n        case logging.level.FATAL:\n            return 'Fatal';\n        default:\n            throw new Error('Unsupported Logging Level ' + jsLoggerLevel);\n        }\n    }\n\n    var stringify = function stringify(args) {\n        if (args.length === 0) {\n            return;\n        }\n\n        var newArgs = [];\n        var errorStacks = [];\n\n        _.forEach(args, function(arg) {\n            newArgs.push(_.toString(arg));\n\n            if (arg instanceof Error) {\n                errorStacks.push(arg.stack);\n            }\n        });\n\n        return format(newArgs.concat(errorStacks));\n    };\n\n    var format = function format(args) {\n        var fmt = args[0];\n        var idx = 0;\n\n        while (fmt.indexOf && args.length > 1 && idx >= 0) {\n            idx = fmt.indexOf('%', idx);\n\n            if (idx > 0) {\n                var type = fmt.substring(idx + 1, idx + 2);\n\n                switch (type) {\n                case '%':\n                    // Escaped '%%' turns into '%'\n                    fmt = fmt.substring(0, idx) + fmt.substring(idx + 1);\n                    idx++;\n\n                    break;\n                case 's':\n                case 'd':\n                    // Replace '%d' or '%s' with the argument\n                    args[0] = fmt = fmt.substring(0, idx) + args[1] + fmt.substring(idx + 2);\n                    args.splice(1, 1);\n\n                    break;\n                default:\n                    return args;\n                }\n            }\n        }\n\n        return args;\n    };\n\n    function getGlobal() {\n        if (typeof window === \"object\") {\n            return window;\n        }\n\n        if (typeof global === \"object\") {\n            return global; // eslint-disable-line no-undef\n        }\n\n        return {};\n    }\n\n    return Logger;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-logging/src/Logger.js\n// module id = 62\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-event',\n    'phenix-web-observable',\n    'phenix-web-disposable'\n], function (_, event, observable, disposable) {\n    'use strict';\n\n    function NetworkConnectionMonitor() {\n        // Support non-browser environments\n        var isOnline = typeof navigator !== 'undefined' ? navigator.onLine : true;\n\n        this._onlineObservable = (new observable.Observable(isOnline)).extend({timeout: 0});\n        this._namedEvents = new event.NamedEvents();\n\n        if (typeof window !== 'undefined') {\n            _.addEventListener(window, 'online', _.bind(this._namedEvents.fire, this._namedEvents, 'online', []));\n            _.addEventListener(window, 'offline', _.bind(this._namedEvents.fire, this._namedEvents, 'offline', []));\n            _.addEventListener(window, 'unload', _.bind(this._namedEvents.dispose, this._namedEvents));\n        }\n\n        this._namedEvents.listen('online', _.bind(this._onlineObservable.setValue, this._onlineObservable, true));\n        this._namedEvents.listen('offline', _.bind(this._onlineObservable.setValue, this._onlineObservable, false));\n    }\n\n    NetworkConnectionMonitor.prototype.listenForNetworkChange = function listenForOffline(callback, hysteresisTimeout) {\n        var disposables = new disposable.DisposableList();\n        var onOnline = _.bind(handleOnline, this, callback);\n        var onOffline = _.bind(handleOfflineWithHysteresis, this, callback, hysteresisTimeout);\n\n        disposables.add(this._namedEvents.listen('online', onOnline));\n        disposables.add(this._namedEvents.listen('offline', onOffline));\n\n        return disposables;\n    };\n\n    NetworkConnectionMonitor.prototype.isOnline = function isOnline() {\n        return this._onlineObservable.getValue();\n    };\n\n    function handleOfflineWithHysteresis(callback, hysteresisTimeout) {\n        var that = this;\n\n        this._onlineObservable.setValue(false);\n\n        if (!_.isNumber(hysteresisTimeout)) {\n            return callback(false);\n        }\n\n        that.offlineTimeout = setTimeout(function() {\n            if (!callback || that._onlineObservable.getValue()) {\n                return;\n            }\n\n            callback(false);\n        }, hysteresisTimeout);\n    }\n\n    function handleOnline(callback) {\n        this._onlineObservable.setValue(true);\n\n        if (callback) {\n            callback(true);\n        }\n    }\n\n    return new NetworkConnectionMonitor();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-network-connection-monitor/src/networkConnectionMonitor.js\n// module id = 63\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './Observable'\n], function (_, assert, Observable) {\n    'use strict';\n\n    function ObservableArray(initialValues, beforeChange) {\n        var valuesToSet = initialValues;\n\n        if (valuesToSet === undefined || valuesToSet === null) {\n            valuesToSet = [];\n        }\n\n        assert.isArray(valuesToSet, 'valuesToSet');\n\n        this.observableArray = new Observable(valuesToSet, beforeChange);\n    }\n\n    ObservableArray.prototype.getValue = function getValue() {\n        return this.observableArray.getValue();\n    };\n\n    ObservableArray.prototype.setValue = function setValue(values) {\n        if (values === undefined || values === null) {\n            values = [];\n        }\n\n        if (values !== undefined) {\n            assert.isArray(values, 'values');\n        }\n\n        return this.observableArray.setValue(values);\n    };\n\n    ObservableArray.prototype.subscribe = function subscribe(callback, options) {\n        return this.observableArray.subscribe(callback, options);\n    };\n\n    ObservableArray.prototype.push = function push(value) {\n        var array = this.observableArray.getValue();\n        array.push(value);\n\n        this.observableArray.setValue(array);\n    };\n\n    ObservableArray.prototype.pop = function pop() {\n        var array = this.observableArray.getValue();\n        var value = array.pop();\n\n        this.observableArray.setValue(array);\n\n        return value;\n    };\n\n    ObservableArray.prototype.remove = function remove(valueOrFunction) {\n        var array = this.observableArray.getValue();\n\n        var filterFunction = function (value) {\n            return _.isFunction(valueOrFunction) ? valueOrFunction(value) : value === valueOrFunction;\n        };\n\n        var valuesToRemove = _.filter(array, filterFunction);\n\n        if (valuesToRemove.length > 0) {\n            this.observableArray.setValue(_.remove(array, filterFunction));\n        }\n\n        return valuesToRemove;\n    };\n\n    ObservableArray.prototype.removeAll = function removeAll() {\n        var array = this.observableArray.getValue();\n\n        this.observableArray.setValue([]);\n\n        return array;\n    };\n\n    ObservableArray.prototype.extend = function extend(options) {\n        this.observableArray.extend(options);\n\n        return this;\n    };\n\n    return ObservableArray;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-observable/src/ObservableArray.js\n// module id = 64\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function (_, assert) {\n    'use strict';\n\n    function ObservableMonitor(observable) {\n        assert.isObject(observable, 'observable');\n\n        this._observable = observable;\n        this._listenerSubscription = null;\n        this._isEnabled = false;\n    }\n\n    ObservableMonitor.prototype.start = function start(checkForChanges, timeout) {\n        this._isEnabled = true;\n\n        this._listenerSubscription = this._observable.subscribe(_.noop, {\n            listenForChanges: {\n                callback: checkForChanges,\n                timeout: timeout || 500\n            }\n        });\n    };\n\n    ObservableMonitor.prototype.stop = function stop() {\n        this._isEnabled = false;\n\n        if (this._listenerSubscription) {\n            this._listenerSubscription.dispose();\n        }\n\n        this._listenerSubscription = null;\n    };\n\n    ObservableMonitor.prototype.isEnabled = function isEnabled() {\n        return this._isEnabled;\n    };\n\n    return ObservableMonitor;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-observable/src/ObservableMonitor.js\n// module id = 65\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-batch-http',\n    './MQProtocol',\n    'bytebuffer'\n], function (_, assert, BatchHttp, MQProtocol, ByteBuffer) {\n    function BatchHttpProtocol(uri, protocols, type, options, apiVersion) {\n        assert.isStringNotEmpty(uri, 'uri');\n        assert.isArray(protocols, 'protocols');\n        assert.isStringNotEmpty(type, 'type');\n        assert.isObject(options, 'options');\n\n        var bufferedHttpOptions = _.assign({}, options || {}, {contentType: 'application/protobuf'});\n        var mqProtocol = new MQProtocol(protocols, apiVersion);\n\n        return new BatchHttp(uri, bufferedHttpOptions, _.bind(prepareRequest, this, mqProtocol, type), _.bind(prepareResponse, this, mqProtocol, type));\n    }\n\n    function prepareRequest(mqProtocol, type, data) {\n        return mqProtocol.encode(type, data).toBinary();\n    }\n\n    function prepareResponse(mqProtocol, type, data) {\n        return mqProtocol.decode(type + 'Response', ByteBuffer.fromBinary(data));\n    }\n\n    return BatchHttpProtocol;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-proto/src/BatchHttpProto.js\n// module id = 66\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-reconnecting-websocket',\n    './MQService'\n], function (_, assert, event, ReconnectingWebSocket, MQService) {\n    'use strict';\n\n    function MQWebSocket(uri, logger, protocols, apiVersion) {\n        assert.isStringNotEmpty(uri, 'uri');\n        assert.isObject(logger, 'logger');\n        assert.isArray(protocols, 'protocols');\n\n        // TODO (DY) Don't dispose of event listeners on disconnect event\n        this._uri = uri;\n        this._logger = logger;\n        this._logger.info('Connecting to [%s]', uri);\n\n        this._webSocket = new ReconnectingWebSocket(this._uri, this._logger);\n        this._mqService = new MQService(this._logger, _.bind(sendMessage, this), _.bind(setOnMessage, this), protocols, apiVersion);\n        this._namedEvents = new event.NamedEvents();\n\n        this._webSocket.onconnected = _.bind(onConnected, this);\n        this._webSocket.onreconnecting = _.bind(onReconnecting, this);\n        this._webSocket.onreconnected = _.bind(onReconnected, this);\n        this._webSocket.ondisconnected = _.bind(onDisconnected, this);\n        this._webSocket.onerror = _.bind(onError, this);\n\n        this._disconnected = false;\n    }\n\n    MQWebSocket.prototype.onEvent = function (eventName, handler) {\n        this._namedEvents.listen(eventName, handler);\n\n        return this._mqService.onEvent(eventName, handler);\n    };\n\n    MQWebSocket.prototype.onRequest = function (requestName, handler) {\n        return this._mqService.onRequest(requestName, handler);\n    };\n\n    MQWebSocket.prototype.sendRequest = function sendRequest(type, message, callback, settings) {\n        return this._mqService.sendRequest(type, message, callback, settings);\n    };\n\n    MQWebSocket.prototype.sendResponse = function sendResponse(requestId, type, message, callback) {\n        return this._mqService.sendResponse(requestId, type, message, callback);\n    };\n\n    MQWebSocket.prototype.disconnect = function () {\n        this._disconnected = true;\n\n        return this._webSocket.disconnect();\n    };\n\n    MQWebSocket.prototype.disposeOfPendingRequests = function disposeOfPendingRequests() {\n        this._logger.info('Disposing of pending MQ WebSocket requests');\n\n        return this._mqService.disposeOfRequests();\n    };\n\n    MQWebSocket.prototype.getApiVersion = function getApiVersion() {\n        return this._mqService.getApiVersion();\n    };\n\n    MQWebSocket.prototype.toString = function () {\n        return 'MQWebSocket[' + this._webSocket.toString() + ']';\n    };\n\n    function triggerEvent(eventName, args) {\n        this._namedEvents.fire(eventName, args, this);\n    }\n\n    function onReconnecting(evt) { // eslint-disable-line no-unused-vars\n        triggerEvent.call(this, 'reconnecting');\n    }\n\n    function onConnected(evt) { // eslint-disable-line no-unused-vars\n        triggerEvent.call(this, 'connected');\n    }\n\n    function onReconnected(evt) { // eslint-disable-line no-unused-vars\n        triggerEvent.call(this, 'reconnected');\n    }\n\n    function onDisconnected(evt) {\n        triggerEvent.call(this, 'disconnected', [evt.code, evt.reason]);\n\n        if (this._disconnected) {\n            this._namedEvents.dispose();\n            this._mqService.dispose();\n        }\n    }\n\n    function onError(evt) {\n        triggerEvent.call(this, 'error', [evt.data]);\n    }\n\n    function setOnMessage(callback) {\n        this._webSocket.onmessage = callback;\n    }\n\n    function sendMessage(message) {\n        if (this._webSocket) {\n            this._webSocket.send(message);\n        }\n    }\n\n    return MQWebSocket;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-proto/src/MQWebSocket.js\n// module id = 67\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function () {\n    'use strict';\n\n    var mqProto = {\n        \"package\": \"mq\",\n        \"messages\": [\n            {\n                \"name\": \"Message\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MessageType\",\n                        \"name\": \"messageType\",\n                        \"id\": 7,\n                        \"options\": {\"default\": \"Request\"}\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"requestId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"type\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"encoding\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bytes\",\n                        \"name\": \"payload\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"double\",\n                        \"name\": \"wallTime\",\n                        \"id\": 6\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"MessageType\",\n                        \"values\": [\n                            {\n                                \"name\": \"Request\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"Response\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"Event\",\n                                \"id\": 2\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"Error\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"PingPong\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"originTimestamp\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"count\",\n                        \"id\": 2\n                    }\n                ]\n            }\n        ]\n    };\n\n    return mqProto;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-proto/src/mqProto.json.js\n// module id = 68\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-network-connection-monitor'\n], function (_, assert, networkConnectionMonitor) {\n    'use strict';\n\n    var networkDisconnectHysteresisInterval = 15000;\n    var waitForDisconnectEventTimeout = 1000;\n    var defaultReconnectBackoffInterval = 1000;\n    var defaultMaxReconnectAttempts = 4;\n    var closeReasons = {\n        byebye: {\n            code: 1000,\n            reason: 'byebye',\n            desc: 'Client closed'\n        },\n        backoffLimitReached: {\n            code: 4000,\n            reason: 'backoff-limit-reached',\n            desc: 'Reached the limit in terms of the number of reconnects'\n        },\n        networkDisconnect: {\n            code: 4001,\n            reason: 'network-disconnect',\n            desc: 'Network connection monitor determined loss to internet connectivity'\n        },\n        reconnecting: {\n            code: 4002,\n            reason: 'reconnecting',\n            desc: 'Closing WebSocket in order to attempt to establish another connection'\n        }\n    };\n    var readyStates = {\n        connecting: {\n            code: 0,\n            state: 'CONNECTING',\n            desc: 'The connection is not yet open'\n        },\n        open: {\n            code: 1,\n            state: 'OPEN',\n            desc: 'The connection is open and ready to communicate'\n        },\n        closing: {\n            code: 2,\n            state: 'CLOSING',\n            desc: 'The connection is in the process of closing'\n        },\n        closed: {\n            code: 3,\n            state: 'CLOSED',\n            desc: 'The connection is closed or could not be opened'\n        }\n    };\n\n    function ReconnectingWebSocket(uri, logger, maxReconnectAttempts, reconnectBackoffInterval) {\n        assert.isStringNotEmpty(uri, 'uri');\n        assert.isObject(logger, 'logger');\n\n        if (!_.isNullOrUndefined(maxReconnectAttempts)) {\n            assert.isNumber(maxReconnectAttempts, 'maxReconnectAttempts');\n        } else {\n            maxReconnectAttempts = defaultMaxReconnectAttempts;\n        }\n\n        this._uri = uri;\n        this._logger = logger;\n        this._maxReconnectAttempts = maxReconnectAttempts;\n        this._reconnectBackoffInterval = reconnectBackoffInterval || defaultReconnectBackoffInterval;\n        this._hasAttemptedReconnect = false;\n        this._stopped = false;\n        this._queuedMessages = [];\n        this._connectionState = 'connecting';\n\n        this._logger.info('Connecting WebSocket to [%s]', uri);\n\n        this._webSocket = createWebSocket.call(this, onOpen, onClose);\n\n        var that = this;\n        this._disconnectTimeoutId = null;\n\n        this._networkConnectionMonitorDisposable = networkConnectionMonitor.listenForNetworkChange(function(isOnline) {\n            if (isOnline) {\n                if (_.isNumber(that._disconnectTimeoutId)) {\n                    clearTimeout(that._disconnectTimeoutId);\n                    that._disconnectTimeoutId = null;\n                }\n\n                return onNetworkReconnect.call(that);\n            }\n\n            if (_.isNumber(that._disconnectTimeoutId)) {\n                return;\n            }\n\n            onReconnecting.call(that);\n\n            that._disconnectTimeoutId = setTimeout(function() {\n                return onNetworkDisconnect.call(that);\n            }, networkDisconnectHysteresisInterval);\n        }, 0);\n    }\n\n    ReconnectingWebSocket.prototype.onmessage = null;\n    ReconnectingWebSocket.prototype.onconnected = null;\n    ReconnectingWebSocket.prototype.onreconnecting = null;\n    ReconnectingWebSocket.prototype.onreconnected = null;\n    ReconnectingWebSocket.prototype.ondisconnected = null;\n    ReconnectingWebSocket.prototype.onerror = null;\n\n    ReconnectingWebSocket.prototype.send = function (message) {\n        // TODO (DCY) Figure out how to resolve network switches\n        if (!networkConnectionMonitor.isOnline() && false) { // eslint-disable-line no-constant-condition\n            this._logger.info('Network offline. Waiting for reconnect to send message.');\n\n            return this._queuedMessages.push(message);\n        }\n\n        return this._webSocket.send(message);\n    };\n\n    ReconnectingWebSocket.prototype.reconnect = function (attempt) {\n        this._webSocket.onclose = null;\n        this._webSocket.onerror = null;\n        this._hasAttemptedReconnect = true;\n\n        var that = this;\n        var backoffTimeout;\n\n        if (!_.isNumber(attempt)) {\n            attempt = 1;\n        }\n\n        if (this._stopped) {\n            return this._logger.info('Client has stopped WebSocket after [%s] reconnect attempts', attempt - 1);\n        }\n\n        if (attempt > this._maxReconnectAttempts) {\n            this._logger.warn('Unable to reconnect WebSocket after [%s] attempts', this._maxReconnectAttempts);\n\n            return closeWebSocketOrTriggerDisconnectEvent.call(this, closeReasons.backoffLimitReached);\n        }\n\n        closeWebSocketOrTriggerDisconnectEvent.call(this, closeReasons.reconnecting);\n\n        try {\n            this._webSocket = createWebSocket.call(that, function onOpenEvent() {\n                if (backoffTimeout) {\n                    clearTimeout(backoffTimeout);\n                }\n\n                that._hasAttemptedReconnect = false;\n                that._webSocket.onclose = _.bind(onClose, that);\n\n                return onReconnect.call(that);\n            }, function onCloseEvent() {\n                if (attempt + 1 > that._maxReconnectAttempts) {\n                    if (backoffTimeout) {\n                        clearTimeout(backoffTimeout);\n                    }\n\n                    reconnectIfNotOpen.call(that, attempt);\n                }\n            });\n        } catch(e) {\n            this._logger.warn('Unable to create WebSocket connection [%s]', e);\n            // Swallow error - we will alert client of failure after timeouts.\n        }\n\n        backoffTimeout = reconnectWithBackoff.call(this, attempt);\n    };\n\n    ReconnectingWebSocket.prototype.disconnect = function () {\n        this._networkConnectionMonitorDisposable.dispose();\n        this._stopped = true;\n\n        if (_.isNumber(this._disconnectTimeoutId)) {\n            clearTimeout(this._disconnectTimeoutId);\n            this._disconnectTimeoutId = null;\n        }\n\n        return this._webSocket.close(closeReasons.byebye.code, closeReasons.byebye.reason);\n    };\n\n    ReconnectingWebSocket.prototype.toString = function () {\n        return 'ReconnectedWebSocket[' + this._uri + ',' + this._webSocket.readyState + ']';\n    };\n\n    function closeWebSocketOrTriggerDisconnectEvent(evt) {\n        if (this._webSocket.readyState === readyStates.closed.code) {\n            return onClose.call(this, evt);\n        }\n\n        return this._webSocket.close(evt.code, evt.reason);\n    }\n\n    function createWebSocket(onOpenCallback, onCloseCallback) {\n        var webSocket = new WebSocket(this._uri);\n\n        webSocket.onopen = _.bind(onOpenCallback, this);\n        webSocket.onclose = _.bind(onCloseCallback, this);\n        webSocket.onmessage = _.bind(onMessage, this);\n        webSocket.onerror = _.bind(onError, this);\n\n        return webSocket;\n    }\n\n    function reconnectWithBackoff(attempt) {\n        var that = this;\n\n        return setTimeout(function () {\n            reconnectIfNotOpen.call(that, attempt);\n        }, attempt * attempt * this._reconnectBackoffInterval);\n    }\n\n    function reconnectIfNotOpen(attempt) {\n        if (this._webSocket.readyState === readyStates.open.code) {\n            return;\n        }\n\n        this.reconnect(attempt + 1);\n    }\n\n    function onClose(evt) {\n        switch (evt.code) {\n        case closeReasons.reconnecting.code:\n            return;\n        case closeReasons.byebye.code:\n        case closeReasons.backoffLimitReached.code:\n        case closeReasons.networkDisconnect.code:\n            return onDisconnect.call(this, evt);\n        default:\n            if (this._hasAttemptedReconnect) {\n                return;\n            }\n\n            onReconnecting.call(this, evt);\n\n            this._logger.info('Attempting to re-establish socket connection after disconnect event with code [%s] and reason [%s]', evt.code, evt.reason);\n\n            return this.reconnect();\n        }\n    }\n\n    function onReconnecting(evt) {\n        this._logger.info('WebSocket is reconnecting');\n\n        this._connectionState = 'reconnecting';\n\n        if (this.onreconnecting) {\n            this.onreconnecting(evt);\n        }\n    }\n\n    function onOpen(evt) {\n        this._logger.info('WebSocket Connected');\n\n        sendAllQueuedMessages.call(this);\n\n        this._connectionState = 'connected';\n\n        if (this.onconnected) {\n            this.onconnected(evt);\n        }\n    }\n\n    function onReconnect(evt) {\n        this._logger.info('Successfully reconnected to WebSocket');\n\n        this._connectionState = 'reconnected';\n\n        if (this.onreconnected) {\n            this.onreconnected(evt);\n        }\n    }\n\n    function onDisconnect(evt) {\n        this._logger.info('WebSocket Disconnected [%s]: [%s]', evt.code, evt.reason);\n\n        this._connectionState = 'disconnected';\n\n        if (this.ondisconnected) {\n            this.ondisconnected(evt);\n        }\n    }\n\n    function onError(evt) {\n        this._logger.error('An error occurred on the WebSocket connection [%s]', evt.data || evt);\n\n        if (this.onerror) {\n            this.onerror(evt);\n        }\n    }\n\n    function onMessage(evt) {\n        this._logger.debug('>> [%s]', evt.data);\n\n        if (this.onmessage) {\n            this.onmessage(evt);\n        }\n    }\n\n    function onNetworkReconnect() {\n        var that = this;\n\n        setTimeout(function() {\n            if (that._stopped) {\n                return that._logger.info('Unable to go back online after network reconnect. Client has stopped WebSocket.');\n            }\n\n            if (that._webSocket.readyState !== readyStates.open.code) {\n                that._logger.info('Network Reconnected. Attempting to reconnect WebSocket.');\n\n                return that.reconnect();\n            }\n\n            if (that._didGoOfflineDueToDisconnect) {\n                that._logger.info('Network Reconnected with WebSocket status of [%s].', readyStates.open.state);\n\n                return onOpen.call(that);\n            }\n\n            if (that._connectionState !== 'online' || this._connectionState !== 'reconnected') {\n                onReconnect.call(that);\n            }\n\n            that._logger.info('Network Reconnected.');\n        }, waitForDisconnectEventTimeout);\n    }\n\n    function onNetworkDisconnect() {\n        this._logger.warn('Network not reconnected after [%s]. Going Offline and disconnecting WebSocket connection.', networkDisconnectHysteresisInterval);\n\n        this._didGoOfflineDueToDisconnect = true;\n\n        // Don't close the WebSocket.\n        onDisconnect.call(this, closeReasons.networkDisconnect);\n    }\n\n    function sendAllQueuedMessages() {\n        var numberOfMessagesToSend = this._queuedMessages.length;\n\n        if (numberOfMessagesToSend === 0) {\n            return;\n        }\n\n        this._logger.info('Sending [%s] queued messages', numberOfMessagesToSend);\n\n        while (numberOfMessagesToSend > 0) {\n            numberOfMessagesToSend--;\n\n            var message = this._queuedMessages.shift();\n\n            this.send(message);\n        }\n    }\n\n    return ReconnectingWebSocket;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-reconnecting-websocket/src/ReconnectingWebSocket.js\n// module id = 69\n// module chunks = 0","/**\n * Copyright 2018 Phenix Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    './ReconnectingWebSocket'\n], function (ReconnectingWebSocket) {\n    'use strict';\n\n    return ReconnectingWebSocket;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/phenix-web-reconnecting-websocket/src/index.js\n// module id = 70\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 71\n// module chunks = 0","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license protobuf.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/protobuf.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([\"bytebuffer\"], factory);\r\n    /* CommonJS */ else if (typeof require === \"function\" && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory(require(\"bytebuffer\"), true);\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"ProtoBuf\"] = factory(global[\"dcodeIO\"][\"ByteBuffer\"]);\r\n\r\n})(this, function(ByteBuffer, isCommonJS) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * The ProtoBuf namespace.\r\n     * @exports ProtoBuf\r\n     * @namespace\r\n     * @expose\r\n     */\r\n    var ProtoBuf = {};\r\n\r\n    /**\r\n     * @type {!function(new: ByteBuffer, ...[*])}\r\n     * @expose\r\n     */\r\n    ProtoBuf.ByteBuffer = ByteBuffer;\r\n\r\n    /**\r\n     * @type {?function(new: Long, ...[*])}\r\n     * @expose\r\n     */\r\n    ProtoBuf.Long = ByteBuffer.Long || null;\r\n\r\n    /**\r\n     * ProtoBuf.js version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.VERSION = \"5.0.0\";\r\n\r\n    /**\r\n     * Wire types.\r\n     * @type {Object.<string,number>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES = {};\r\n\r\n    /**\r\n     * Varint wire type.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.VARINT = 0;\r\n\r\n    /**\r\n     * Fixed 64 bits wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.BITS64 = 1;\r\n\r\n    /**\r\n     * Length delimited wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.LDELIM = 2;\r\n\r\n    /**\r\n     * Start group wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.STARTGROUP = 3;\r\n\r\n    /**\r\n     * End group wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.ENDGROUP = 4;\r\n\r\n    /**\r\n     * Fixed 32 bits wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.WIRE_TYPES.BITS32 = 5;\r\n\r\n    /**\r\n     * Packable wire types.\r\n     * @type {!Array.<number>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.PACKABLE_WIRE_TYPES = [\r\n        ProtoBuf.WIRE_TYPES.VARINT,\r\n        ProtoBuf.WIRE_TYPES.BITS64,\r\n        ProtoBuf.WIRE_TYPES.BITS32\r\n    ];\r\n\r\n    /**\r\n     * Types.\r\n     * @dict\r\n     * @type {!Object.<string,{name: string, wireType: number, defaultValue: *}>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.TYPES = {\r\n        // According to the protobuf spec.\r\n        \"int32\": {\r\n            name: \"int32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"uint32\": {\r\n            name: \"uint32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"sint32\": {\r\n            name: \"sint32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"int64\": {\r\n            name: \"int64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined\r\n        },\r\n        \"uint64\": {\r\n            name: \"uint64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.UZERO : undefined\r\n        },\r\n        \"sint64\": {\r\n            name: \"sint64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined\r\n        },\r\n        \"bool\": {\r\n            name: \"bool\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: false\r\n        },\r\n        \"double\": {\r\n            name: \"double\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS64,\r\n            defaultValue: 0\r\n        },\r\n        \"string\": {\r\n            name: \"string\",\r\n            wireType: ProtoBuf.WIRE_TYPES.LDELIM,\r\n            defaultValue: \"\"\r\n        },\r\n        \"bytes\": {\r\n            name: \"bytes\",\r\n            wireType: ProtoBuf.WIRE_TYPES.LDELIM,\r\n            defaultValue: null // overridden in the code, must be a unique instance\r\n        },\r\n        \"fixed32\": {\r\n            name: \"fixed32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS32,\r\n            defaultValue: 0\r\n        },\r\n        \"sfixed32\": {\r\n            name: \"sfixed32\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS32,\r\n            defaultValue: 0\r\n        },\r\n        \"fixed64\": {\r\n            name: \"fixed64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS64,\r\n            defaultValue:  ProtoBuf.Long ? ProtoBuf.Long.UZERO : undefined\r\n        },\r\n        \"sfixed64\": {\r\n            name: \"sfixed64\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS64,\r\n            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined\r\n        },\r\n        \"float\": {\r\n            name: \"float\",\r\n            wireType: ProtoBuf.WIRE_TYPES.BITS32,\r\n            defaultValue: 0\r\n        },\r\n        \"enum\": {\r\n            name: \"enum\",\r\n            wireType: ProtoBuf.WIRE_TYPES.VARINT,\r\n            defaultValue: 0\r\n        },\r\n        \"message\": {\r\n            name: \"message\",\r\n            wireType: ProtoBuf.WIRE_TYPES.LDELIM,\r\n            defaultValue: null\r\n        },\r\n        \"group\": {\r\n            name: \"group\",\r\n            wireType: ProtoBuf.WIRE_TYPES.STARTGROUP,\r\n            defaultValue: null\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Valid map key types.\r\n     * @type {!Array.<!Object.<string,{name: string, wireType: number, defaultValue: *}>>}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.MAP_KEY_TYPES = [\r\n        ProtoBuf.TYPES[\"int32\"],\r\n        ProtoBuf.TYPES[\"sint32\"],\r\n        ProtoBuf.TYPES[\"sfixed32\"],\r\n        ProtoBuf.TYPES[\"uint32\"],\r\n        ProtoBuf.TYPES[\"fixed32\"],\r\n        ProtoBuf.TYPES[\"int64\"],\r\n        ProtoBuf.TYPES[\"sint64\"],\r\n        ProtoBuf.TYPES[\"sfixed64\"],\r\n        ProtoBuf.TYPES[\"uint64\"],\r\n        ProtoBuf.TYPES[\"fixed64\"],\r\n        ProtoBuf.TYPES[\"bool\"],\r\n        ProtoBuf.TYPES[\"string\"],\r\n        ProtoBuf.TYPES[\"bytes\"]\r\n    ];\r\n\r\n    /**\r\n     * Minimum field id.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.ID_MIN = 1;\r\n\r\n    /**\r\n     * Maximum field id.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ProtoBuf.ID_MAX = 0x1FFFFFFF;\r\n\r\n    /**\r\n     * If set to `true`, field names will be converted from underscore notation to camel case. Defaults to `false`.\r\n     *  Must be set prior to parsing.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ProtoBuf.convertFieldsToCamelCase = false;\r\n\r\n    /**\r\n     * By default, messages are populated with (setX, set_x) accessors for each field. This can be disabled by\r\n     *  setting this to `false` prior to building messages.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ProtoBuf.populateAccessors = true;\r\n\r\n    /**\r\n     * By default, messages are populated with default values if a field is not present on the wire. To disable\r\n     *  this behavior, set this setting to `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ProtoBuf.populateDefaults = true;\r\n\r\n    /**\n     * @alias ProtoBuf.Util\n     * @expose\n     */\n    ProtoBuf.Util = (function() {\n        \"use strict\";\n\n        /**\n         * ProtoBuf utilities.\n         * @exports ProtoBuf.Util\n         * @namespace\n         */\n        var Util = {};\n\n        /**\n         * Flag if running in node or not.\n         * @type {boolean}\n         * @const\n         * @expose\n         */\n        Util.IS_NODE = !!(\n            typeof process === 'object' && process+'' === '[object process]' && !process['browser']\n        );\n\n        /**\n         * Constructs a XMLHttpRequest object.\n         * @return {XMLHttpRequest}\n         * @throws {Error} If XMLHttpRequest is not supported\n         * @expose\n         */\n        Util.XHR = function() {\n            // No dependencies please, ref: http://www.quirksmode.org/js/xmlhttp.html\n            var XMLHttpFactories = [\n                function () {return new XMLHttpRequest()},\n                function () {return new ActiveXObject(\"Msxml2.XMLHTTP\")},\n                function () {return new ActiveXObject(\"Msxml3.XMLHTTP\")},\n                function () {return new ActiveXObject(\"Microsoft.XMLHTTP\")}\n            ];\n            /** @type {?XMLHttpRequest} */\n            var xhr = null;\n            for (var i=0;i<XMLHttpFactories.length;i++) {\n                try { xhr = XMLHttpFactories[i](); }\n                catch (e) { continue; }\n                break;\n            }\n            if (!xhr)\n                throw Error(\"XMLHttpRequest is not supported\");\n            return xhr;\n        };\n\n        /**\n         * Fetches a resource.\n         * @param {string} path Resource path\n         * @param {function(?string)=} callback Callback receiving the resource's contents. If omitted the resource will\n         *   be fetched synchronously. If the request failed, contents will be null.\n         * @return {?string|undefined} Resource contents if callback is omitted (null if the request failed), else undefined.\n         * @expose\n         */\n        Util.fetch = function(path, callback) {\n            if (callback && typeof callback != 'function')\n                callback = null;\n            if (Util.IS_NODE) {\n                var fs = require(\"fs\");\n                if (callback) {\n                    fs.readFile(path, function(err, data) {\n                        if (err)\n                            callback(null);\n                        else\n                            callback(\"\"+data);\n                    });\n                } else\n                    try {\n                        return fs.readFileSync(path);\n                    } catch (e) {\n                        return null;\n                    }\n            } else {\n                var xhr = Util.XHR();\n                xhr.open('GET', path, callback ? true : false);\n                // xhr.setRequestHeader('User-Agent', 'XMLHTTP/1.0');\n                xhr.setRequestHeader('Accept', 'text/plain');\n                if (typeof xhr.overrideMimeType === 'function') xhr.overrideMimeType('text/plain');\n                if (callback) {\n                    xhr.onreadystatechange = function() {\n                        if (xhr.readyState != 4) return;\n                        if (/* remote */ xhr.status == 200 || /* local */ (xhr.status == 0 && typeof xhr.responseText === 'string'))\n                            callback(xhr.responseText);\n                        else\n                            callback(null);\n                    };\n                    if (xhr.readyState == 4)\n                        return;\n                    xhr.send(null);\n                } else {\n                    xhr.send(null);\n                    if (/* remote */ xhr.status == 200 || /* local */ (xhr.status == 0 && typeof xhr.responseText === 'string'))\n                        return xhr.responseText;\n                    return null;\n                }\n            }\n        };\n\n        /**\n         * Converts a string to camel case.\n         * @param {string} str\n         * @returns {string}\n         * @expose\n         */\n        Util.toCamelCase = function(str) {\n            return str.replace(/_([a-zA-Z])/g, function ($0, $1) {\n                return $1.toUpperCase();\n            });\n        };\n\n        return Util;\n    })();\n\r\n    /**\r\n     * Language expressions.\r\n     * @type {!Object.<string,!RegExp>}\r\n     * @expose\r\n     */\r\n    ProtoBuf.Lang = {\r\n\r\n        // Characters always ending a statement\r\n        DELIM: /[\\s\\{\\}=;:\\[\\],'\"\\(\\)<>]/g,\r\n\r\n        // Field rules\r\n        RULE: /^(?:required|optional|repeated|map)$/,\r\n\r\n        // Field types\r\n        TYPE: /^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/,\r\n\r\n        // Names\r\n        NAME: /^[a-zA-Z_][a-zA-Z_0-9]*$/,\r\n\r\n        // Type definitions\r\n        TYPEDEF: /^[a-zA-Z][a-zA-Z_0-9]*$/,\r\n\r\n        // Type references\r\n        TYPEREF: /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,\r\n\r\n        // Fully qualified type references\r\n        FQTYPEREF: /^(?:\\.[a-zA-Z][a-zA-Z_0-9]*)+$/,\r\n\r\n        // All numbers\r\n        NUMBER: /^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/,\r\n\r\n        // Decimal numbers\r\n        NUMBER_DEC: /^(?:[1-9][0-9]*|0)$/,\r\n\r\n        // Hexadecimal numbers\r\n        NUMBER_HEX: /^0[xX][0-9a-fA-F]+$/,\r\n\r\n        // Octal numbers\r\n        NUMBER_OCT: /^0[0-7]+$/,\r\n\r\n        // Floating point numbers\r\n        NUMBER_FLT: /^([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/,\r\n\r\n        // Booleans\r\n        BOOL: /^(?:true|false)$/i,\r\n\r\n        // Id numbers\r\n        ID: /^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,\r\n\r\n        // Negative id numbers (enum values)\r\n        NEGID: /^\\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,\r\n\r\n        // Whitespaces\r\n        WHITESPACE: /\\s/,\r\n\r\n        // All strings\r\n        STRING: /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")|(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g,\r\n\r\n        // Double quoted strings\r\n        STRING_DQ: /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\r\n\r\n        // Single quoted strings\r\n        STRING_SQ: /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g\r\n    };\r\n\r\n    /**\r\n     * @alias ProtoBuf.DotProto\r\n     * @expose\r\n     */\r\n    ProtoBuf.DotProto = (function(ProtoBuf, Lang) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Utilities to parse .proto files.\r\n         * @exports ProtoBuf.DotProto\r\n         * @namespace\r\n         */\r\n        var DotProto = {};\r\n\r\n        /**\r\n         * Constructs a new Tokenizer.\r\n         * @exports ProtoBuf.DotProto.Tokenizer\r\n         * @class prototype tokenizer\r\n         * @param {string} proto Proto to tokenize\r\n         * @constructor\r\n         */\r\n        var Tokenizer = function(proto) {\r\n\r\n            /**\r\n             * Source to parse.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.source = proto+\"\";\r\n\r\n            /**\r\n             * Current index.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.index = 0;\r\n\r\n            /**\r\n             * Current line.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.line = 1;\r\n\r\n            /**\r\n             * Token stack.\r\n             * @type {!Array.<string>}\r\n             * @expose\r\n             */\r\n            this.stack = [];\r\n\r\n            /**\r\n             * Opening character of the current string read, if any.\r\n             * @type {?string}\r\n             * @private\r\n             */\r\n            this._stringOpen = null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Tokenizer.prototype\r\n         * @inner\r\n         */\r\n        var TokenizerPrototype = Tokenizer.prototype;\r\n\r\n        /**\r\n         * Reads a string beginning at the current index.\r\n         * @return {string}\r\n         * @private\r\n         */\r\n        TokenizerPrototype._readString = function() {\r\n            var re = this._stringOpen === '\"'\r\n                ? Lang.STRING_DQ\r\n                : Lang.STRING_SQ;\r\n            re.lastIndex = this.index - 1; // Include the open quote\r\n            var match = re.exec(this.source);\r\n            if (!match)\r\n                throw Error(\"unterminated string\");\r\n            this.index = re.lastIndex;\r\n            this.stack.push(this._stringOpen);\r\n            this._stringOpen = null;\r\n            return match[1];\r\n        };\r\n\r\n        /**\r\n         * Gets the next token and advances by one.\r\n         * @return {?string} Token or `null` on EOF\r\n         * @expose\r\n         */\r\n        TokenizerPrototype.next = function() {\r\n            if (this.stack.length > 0)\r\n                return this.stack.shift();\r\n            if (this.index >= this.source.length)\r\n                return null;\r\n            if (this._stringOpen !== null)\r\n                return this._readString();\r\n\r\n            var repeat,\r\n                prev,\r\n                next;\r\n            do {\r\n                repeat = false;\r\n\r\n                // Strip white spaces\r\n                while (Lang.WHITESPACE.test(next = this.source.charAt(this.index))) {\r\n                    if (next === '\\n')\r\n                        ++this.line;\r\n                    if (++this.index === this.source.length)\r\n                        return null;\r\n                }\r\n\r\n                // Strip comments\r\n                if (this.source.charAt(this.index) === '/') {\r\n                    ++this.index;\r\n                    if (this.source.charAt(this.index) === '/') { // Line\r\n                        while (this.source.charAt(++this.index) !== '\\n')\r\n                            if (this.index == this.source.length)\r\n                                return null;\r\n                        ++this.index;\r\n                        ++this.line;\r\n                        repeat = true;\r\n                    } else if ((next = this.source.charAt(this.index)) === '*') { /* Block */\r\n                        do {\r\n                            if (next === '\\n')\r\n                                ++this.line;\r\n                            if (++this.index === this.source.length)\r\n                                return null;\r\n                            prev = next;\r\n                            next = this.source.charAt(this.index);\r\n                        } while (prev !== '*' || next !== '/');\r\n                        ++this.index;\r\n                        repeat = true;\r\n                    } else\r\n                        return '/';\r\n                }\r\n            } while (repeat);\r\n\r\n            if (this.index === this.source.length)\r\n                return null;\r\n\r\n            // Read the next token\r\n            var end = this.index;\r\n            Lang.DELIM.lastIndex = 0;\r\n            var delim = Lang.DELIM.test(this.source.charAt(end++));\r\n            if (!delim)\r\n                while(end < this.source.length && !Lang.DELIM.test(this.source.charAt(end)))\r\n                    ++end;\r\n            var token = this.source.substring(this.index, this.index = end);\r\n            if (token === '\"' || token === \"'\")\r\n                this._stringOpen = token;\r\n            return token;\r\n        };\r\n\r\n        /**\r\n         * Peeks for the next token.\r\n         * @return {?string} Token or `null` on EOF\r\n         * @expose\r\n         */\r\n        TokenizerPrototype.peek = function() {\r\n            if (this.stack.length === 0) {\r\n                var token = this.next();\r\n                if (token === null)\r\n                    return null;\r\n                this.stack.push(token);\r\n            }\r\n            return this.stack[0];\r\n        };\r\n\r\n        /**\r\n         * Skips a specific token and throws if it differs.\r\n         * @param {string} expected Expected token\r\n         * @throws {Error} If the actual token differs\r\n         */\r\n        TokenizerPrototype.skip = function(expected) {\r\n            var actual = this.next();\r\n            if (actual !== expected)\r\n                throw Error(\"illegal '\"+actual+\"', '\"+expected+\"' expected\");\r\n        };\r\n\r\n        /**\r\n         * Omits an optional token.\r\n         * @param {string} expected Expected optional token\r\n         * @returns {boolean} `true` if the token exists\r\n         */\r\n        TokenizerPrototype.omit = function(expected) {\r\n            if (this.peek() === expected) {\r\n                this.next();\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        /**\r\n         * Returns a string representation of this object.\r\n         * @return {string} String representation as of \"Tokenizer(index/length)\"\r\n         * @expose\r\n         */\r\n        TokenizerPrototype.toString = function() {\r\n            return \"Tokenizer (\"+this.index+\"/\"+this.source.length+\" at line \"+this.line+\")\";\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Tokenizer\r\n         * @expose\r\n         */\r\n        DotProto.Tokenizer = Tokenizer;\r\n\r\n        /**\r\n         * Constructs a new Parser.\r\n         * @exports ProtoBuf.DotProto.Parser\r\n         * @class prototype parser\r\n         * @param {string} source Source\r\n         * @constructor\r\n         */\r\n        var Parser = function(source) {\r\n\r\n            /**\r\n             * Tokenizer.\r\n             * @type {!ProtoBuf.DotProto.Tokenizer}\r\n             * @expose\r\n             */\r\n            this.tn = new Tokenizer(source);\r\n\r\n            /**\r\n             * Whether parsing proto3 or not.\r\n             * @type {boolean}\r\n             */\r\n            this.proto3 = false;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Parser.prototype\r\n         * @inner\r\n         */\r\n        var ParserPrototype = Parser.prototype;\r\n\r\n        /**\r\n         * Parses the source.\r\n         * @returns {!Object}\r\n         * @throws {Error} If the source cannot be parsed\r\n         * @expose\r\n         */\r\n        ParserPrototype.parse = function() {\r\n            var topLevel = {\r\n                \"name\": \"[ROOT]\", // temporary\r\n                \"package\": null,\r\n                \"messages\": [],\r\n                \"enums\": [],\r\n                \"imports\": [],\r\n                \"options\": {},\r\n                \"services\": []\r\n                // \"syntax\": undefined\r\n            };\r\n            var token,\r\n                head = true;\r\n            try {\r\n                while (token = this.tn.next()) {\r\n                    switch (token) {\r\n                        case 'package':\r\n                            if (!head || topLevel[\"package\"] !== null)\r\n                                throw Error(\"unexpected 'package'\");\r\n                            token = this.tn.next();\r\n                            if (!Lang.TYPEREF.test(token))\r\n                                throw Error(\"illegal package name: \" + token);\r\n                            this.tn.skip(\";\");\r\n                            topLevel[\"package\"] = token;\r\n                            break;\r\n                        case 'import':\r\n                            if (!head)\r\n                                throw Error(\"unexpected 'import'\");\r\n                            token = this.tn.peek();\r\n                            if (token === \"public\") // ignored\r\n                                this.tn.next();\r\n                            token = this._readString();\r\n                            this.tn.skip(\";\");\r\n                            topLevel[\"imports\"].push(token);\r\n                            break;\r\n                        case 'syntax':\r\n                            if (!head)\r\n                                throw Error(\"unexpected 'syntax'\");\r\n                            this.tn.skip(\"=\");\r\n                            if ((topLevel[\"syntax\"] = this._readString()) === \"proto3\")\r\n                                this.proto3 = true;\r\n                            this.tn.skip(\";\");\r\n                            break;\r\n                        case 'message':\r\n                            this._parseMessage(topLevel, null);\r\n                            head = false;\r\n                            break;\r\n                        case 'enum':\r\n                            this._parseEnum(topLevel);\r\n                            head = false;\r\n                            break;\r\n                        case 'option':\r\n                            this._parseOption(topLevel);\r\n                            break;\r\n                        case 'service':\r\n                            this._parseService(topLevel);\r\n                            break;\r\n                        case 'extend':\r\n                            this._parseExtend(topLevel);\r\n                            break;\r\n                        default:\r\n                            throw Error(\"unexpected '\" + token + \"'\");\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                e.message = \"Parse error at line \"+this.tn.line+\": \" + e.message;\r\n                throw e;\r\n            }\r\n            delete topLevel[\"name\"];\r\n            return topLevel;\r\n        };\r\n\r\n        /**\r\n         * Parses the specified source.\r\n         * @returns {!Object}\r\n         * @throws {Error} If the source cannot be parsed\r\n         * @expose\r\n         */\r\n        Parser.parse = function(source) {\r\n            return new Parser(source).parse();\r\n        };\r\n\r\n        // ----- Conversion ------\r\n\r\n        /**\r\n         * Converts a numerical string to an id.\r\n         * @param {string} value\r\n         * @param {boolean=} mayBeNegative\r\n         * @returns {number}\r\n         * @inner\r\n         */\r\n        function mkId(value, mayBeNegative) {\r\n            var id = -1,\r\n                sign = 1;\r\n            if (value.charAt(0) == '-') {\r\n                sign = -1;\r\n                value = value.substring(1);\r\n            }\r\n            if (Lang.NUMBER_DEC.test(value))\r\n                id = parseInt(value);\r\n            else if (Lang.NUMBER_HEX.test(value))\r\n                id = parseInt(value.substring(2), 16);\r\n            else if (Lang.NUMBER_OCT.test(value))\r\n                id = parseInt(value.substring(1), 8);\r\n            else\r\n                throw Error(\"illegal id value: \" + (sign < 0 ? '-' : '') + value);\r\n            id = (sign*id)|0; // Force to 32bit\r\n            if (!mayBeNegative && id < 0)\r\n                throw Error(\"illegal id value: \" + (sign < 0 ? '-' : '') + value);\r\n            return id;\r\n        }\r\n\r\n        /**\r\n         * Converts a numerical string to a number.\r\n         * @param {string} val\r\n         * @returns {number}\r\n         * @inner\r\n         */\r\n        function mkNumber(val) {\r\n            var sign = 1;\r\n            if (val.charAt(0) == '-') {\r\n                sign = -1;\r\n                val = val.substring(1);\r\n            }\r\n            if (Lang.NUMBER_DEC.test(val))\r\n                return sign * parseInt(val, 10);\r\n            else if (Lang.NUMBER_HEX.test(val))\r\n                return sign * parseInt(val.substring(2), 16);\r\n            else if (Lang.NUMBER_OCT.test(val))\r\n                return sign * parseInt(val.substring(1), 8);\r\n            else if (val === 'inf')\r\n                return sign * Infinity;\r\n            else if (val === 'nan')\r\n                return NaN;\r\n            else if (Lang.NUMBER_FLT.test(val))\r\n                return sign * parseFloat(val);\r\n            throw Error(\"illegal number value: \" + (sign < 0 ? '-' : '') + val);\r\n        }\r\n\r\n        // ----- Reading ------\r\n\r\n        /**\r\n         * Reads a string.\r\n         * @returns {string}\r\n         * @private\r\n         */\r\n        ParserPrototype._readString = function() {\r\n            var value = \"\",\r\n                token,\r\n                delim;\r\n            do {\r\n                delim = this.tn.next();\r\n                if (delim !== \"'\" && delim !== '\"')\r\n                    throw Error(\"illegal string delimiter: \"+delim);\r\n                value += this.tn.next();\r\n                this.tn.skip(delim);\r\n                token = this.tn.peek();\r\n            } while (token === '\"' || token === '\"'); // multi line?\r\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a value.\r\n         * @param {boolean=} mayBeTypeRef\r\n         * @returns {number|boolean|string}\r\n         * @private\r\n         */\r\n        ParserPrototype._readValue = function(mayBeTypeRef) {\r\n            var token = this.tn.peek(),\r\n                value;\r\n            if (token === '\"' || token === \"'\")\r\n                return this._readString();\r\n            this.tn.next();\r\n            if (Lang.NUMBER.test(token))\r\n                return mkNumber(token);\r\n            if (Lang.BOOL.test(token))\r\n                return (token.toLowerCase() === 'true');\r\n            if (mayBeTypeRef && Lang.TYPEREF.test(token))\r\n                return token;\r\n            throw Error(\"illegal value: \"+token);\r\n\r\n        };\r\n\r\n        // ----- Parsing constructs -----\r\n\r\n        /**\r\n         * Parses a namespace option.\r\n         * @param {!Object} parent Parent definition\r\n         * @param {boolean=} isList\r\n         * @private\r\n         */\r\n        ParserPrototype._parseOption = function(parent, isList) {\r\n            var token = this.tn.next(),\r\n                custom = false;\r\n            if (token === '(') {\r\n                custom = true;\r\n                token = this.tn.next();\r\n            }\r\n            if (!Lang.TYPEREF.test(token))\r\n                // we can allow options of the form google.protobuf.* since they will just get ignored anyways\r\n                // if (!/google\\.protobuf\\./.test(token)) // FIXME: Why should that not be a valid typeref?\r\n                    throw Error(\"illegal option name: \"+token);\r\n            var name = token;\r\n            if (custom) { // (my_method_option).foo, (my_method_option), some_method_option, (foo.my_option).bar\r\n                this.tn.skip(')');\r\n                name = '('+name+')';\r\n                token = this.tn.peek();\r\n                if (Lang.FQTYPEREF.test(token)) {\r\n                    name += token;\r\n                    this.tn.next();\r\n                }\r\n            }\r\n            this.tn.skip('=');\r\n            this._parseOptionValue(parent, name);\r\n            if (!isList)\r\n                this.tn.skip(\";\");\r\n        };\r\n\r\n        /**\r\n         * Sets an option on the specified options object.\r\n         * @param {!Object.<string,*>} options\r\n         * @param {string} name\r\n         * @param {string|number|boolean} value\r\n         * @inner\r\n         */\r\n        function setOption(options, name, value) {\r\n            if (typeof options[name] === 'undefined')\r\n                options[name] = value;\r\n            else {\r\n                if (!Array.isArray(options[name]))\r\n                    options[name] = [ options[name] ];\r\n                options[name].push(value);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Parses an option value.\r\n         * @param {!Object} parent\r\n         * @param {string} name\r\n         * @private\r\n         */\r\n        ParserPrototype._parseOptionValue = function(parent, name) {\r\n            var token = this.tn.peek();\r\n            if (token !== '{') { // Plain value\r\n                setOption(parent[\"options\"], name, this._readValue(true));\r\n            } else { // Aggregate options\r\n                this.tn.skip(\"{\");\r\n                while ((token = this.tn.next()) !== '}') {\r\n                    if (!Lang.NAME.test(token))\r\n                        throw Error(\"illegal option name: \" + name + \".\" + token);\r\n                    if (this.tn.omit(\":\"))\r\n                        setOption(parent[\"options\"], name + \".\" + token, this._readValue(true));\r\n                    else\r\n                        this._parseOptionValue(parent, name + \".\" + token);\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Parses a service definition.\r\n         * @param {!Object} parent Parent definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseService = function(parent) {\r\n            var token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal service name at line \"+this.tn.line+\": \"+token);\r\n            var name = token;\r\n            var svc = {\r\n                \"name\": name,\r\n                \"rpc\": {},\r\n                \"options\": {}\r\n            };\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (token === \"option\")\r\n                    this._parseOption(svc);\r\n                else if (token === 'rpc')\r\n                    this._parseServiceRPC(svc);\r\n                else\r\n                    throw Error(\"illegal service token: \"+token);\r\n            }\r\n            this.tn.omit(\";\");\r\n            parent[\"services\"].push(svc);\r\n        };\r\n\r\n        /**\r\n         * Parses a RPC service definition of the form ['rpc', name, (request), 'returns', (response)].\r\n         * @param {!Object} svc Service definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseServiceRPC = function(svc) {\r\n            var type = \"rpc\",\r\n                token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal rpc service method name: \"+token);\r\n            var name = token;\r\n            var method = {\r\n                \"request\": null,\r\n                \"response\": null,\r\n                \"request_stream\": false,\r\n                \"response_stream\": false,\r\n                \"options\": {}\r\n            };\r\n            this.tn.skip(\"(\");\r\n            token = this.tn.next();\r\n            if (token.toLowerCase() === \"stream\") {\r\n              method[\"request_stream\"] = true;\r\n              token = this.tn.next();\r\n            }\r\n            if (!Lang.TYPEREF.test(token))\r\n                throw Error(\"illegal rpc service request type: \"+token);\r\n            method[\"request\"] = token;\r\n            this.tn.skip(\")\");\r\n            token = this.tn.next();\r\n            if (token.toLowerCase() !== \"returns\")\r\n                throw Error(\"illegal rpc service request type delimiter: \"+token);\r\n            this.tn.skip(\"(\");\r\n            token = this.tn.next();\r\n            if (token.toLowerCase() === \"stream\") {\r\n              method[\"response_stream\"] = true;\r\n              token = this.tn.next();\r\n            }\r\n            method[\"response\"] = token;\r\n            this.tn.skip(\")\");\r\n            token = this.tn.peek();\r\n            if (token === '{') {\r\n                this.tn.next();\r\n                while ((token = this.tn.next()) !== '}') {\r\n                    if (token === 'option')\r\n                        this._parseOption(method);\r\n                    else\r\n                        throw Error(\"illegal rpc service token: \" + token);\r\n                }\r\n                this.tn.omit(\";\");\r\n            } else\r\n                this.tn.skip(\";\");\r\n            if (typeof svc[type] === 'undefined')\r\n                svc[type] = {};\r\n            svc[type][name] = method;\r\n        };\r\n\r\n        /**\r\n         * Parses a message definition.\r\n         * @param {!Object} parent Parent definition\r\n         * @param {!Object=} fld Field definition if this is a group\r\n         * @returns {!Object}\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessage = function(parent, fld) {\r\n            var isGroup = !!fld,\r\n                token = this.tn.next();\r\n            var msg = {\r\n                \"name\": \"\",\r\n                \"fields\": [],\r\n                \"enums\": [],\r\n                \"messages\": [],\r\n                \"options\": {},\r\n                \"services\": [],\r\n                \"oneofs\": {}\r\n                // \"extensions\": undefined\r\n            };\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal \"+(isGroup ? \"group\" : \"message\")+\" name: \"+token);\r\n            msg[\"name\"] = token;\r\n            if (isGroup) {\r\n                this.tn.skip(\"=\");\r\n                fld[\"id\"] = mkId(this.tn.next());\r\n                msg[\"isGroup\"] = true;\r\n            }\r\n            token = this.tn.peek();\r\n            if (token === '[' && fld)\r\n                this._parseFieldOptions(fld);\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (Lang.RULE.test(token))\r\n                    this._parseMessageField(msg, token);\r\n                else if (token === \"oneof\")\r\n                    this._parseMessageOneOf(msg);\r\n                else if (token === \"enum\")\r\n                    this._parseEnum(msg);\r\n                else if (token === \"message\")\r\n                    this._parseMessage(msg);\r\n                else if (token === \"option\")\r\n                    this._parseOption(msg);\r\n                else if (token === \"service\")\r\n                    this._parseService(msg);\r\n                else if (token === \"extensions\")\r\n                    this._parseExtensions(msg);\r\n                else if (token === \"extend\")\r\n                    this._parseExtend(msg);\r\n                else if (token === \"reserved\")\r\n                    this._parseMessageReserved(msg);\r\n                else if (Lang.TYPEREF.test(token)) {\r\n                    if (!this.proto3)\r\n                        throw Error(\"illegal field rule: \"+token);\r\n                    this._parseMessageField(msg, \"optional\", token);\r\n                } else\r\n                    throw Error(\"illegal message token: \"+token);\r\n            }\r\n            this.tn.omit(\";\");\r\n            parent[\"messages\"].push(msg);\r\n            return msg;\r\n        };\r\n\r\n        /**\r\n         * Parses a message's reserved ids / names statement.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessageReserved = function(msg) {\r\n            // TODO: This currently just skips a reserved statement for compatibility.\r\n            // Valid formats are\r\n            //   reserved 2, 15, 9 to 11;\r\n            // for reserved ids or\r\n            //   reserved \"foo\", \"bar\";\r\n            // for reserved names.\r\n            while (this.tn.peek() !== ';')\r\n                this.tn.next();\r\n            this.tn.skip(\";\");\r\n        };\r\n\r\n        /**\r\n         * Parses a message field.\r\n         * @param {!Object} msg Message definition\r\n         * @param {string} rule Field rule\r\n         * @param {string=} type Field type if already known (never known for maps)\r\n         * @returns {!Object} Field descriptor\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessageField = function(msg, rule, type) {\r\n            if (!Lang.RULE.test(rule))\r\n                throw Error(\"illegal message field rule: \"+rule);\r\n            var fld = {\r\n                \"rule\": rule,\r\n                \"type\": \"\",\r\n                \"name\": \"\",\r\n                \"options\": {},\r\n                \"id\": 0\r\n            };\r\n            var token;\r\n            if (rule === \"map\") {\r\n\r\n                if (type)\r\n                    throw Error(\"illegal type: \" + type);\r\n                this.tn.skip('<');\r\n                token = this.tn.next();\r\n                if (!Lang.TYPE.test(token) && !Lang.TYPEREF.test(token))\r\n                    throw Error(\"illegal message field type: \" + token);\r\n                fld[\"keytype\"] = token;\r\n                this.tn.skip(',');\r\n                token = this.tn.next();\r\n                if (!Lang.TYPE.test(token) && !Lang.TYPEREF.test(token))\r\n                    throw Error(\"illegal message field: \" + token);\r\n                fld[\"type\"] = token;\r\n                this.tn.skip('>');\r\n                token = this.tn.next();\r\n                if (!Lang.NAME.test(token))\r\n                    throw Error(\"illegal message field name: \" + token);\r\n                fld[\"name\"] = token;\r\n                this.tn.skip(\"=\");\r\n                fld[\"id\"] = mkId(this.tn.next());\r\n                token = this.tn.peek();\r\n                if (token === '[')\r\n                    this._parseFieldOptions(fld);\r\n                this.tn.skip(\";\");\r\n\r\n            } else {\r\n\r\n                type = typeof type !== 'undefined' ? type : this.tn.next();\r\n\r\n                if (type === \"group\") {\r\n\r\n                    // \"A [legacy] group simply combines a nested message type and a field into a single declaration. In your\r\n                    // code, you can treat this message just as if it had a Result type field called result (the latter name is\r\n                    // converted to lower-case so that it does not conflict with the former).\"\r\n                    var grp = this._parseMessage(msg, fld);\r\n                    if (!/^[A-Z]/.test(grp[\"name\"]))\r\n                        throw Error('illegal group name: '+grp[\"name\"]);\r\n                    fld[\"type\"] = grp[\"name\"];\r\n                    fld[\"name\"] = grp[\"name\"].toLowerCase();\r\n                    this.tn.omit(\";\");\r\n\r\n                } else {\r\n\r\n                    if (!Lang.TYPE.test(type) && !Lang.TYPEREF.test(type))\r\n                        throw Error(\"illegal message field type: \" + type);\r\n                    fld[\"type\"] = type;\r\n                    token = this.tn.next();\r\n                    if (!Lang.NAME.test(token))\r\n                        throw Error(\"illegal message field name: \" + token);\r\n                    fld[\"name\"] = token;\r\n                    this.tn.skip(\"=\");\r\n                    fld[\"id\"] = mkId(this.tn.next());\r\n                    token = this.tn.peek();\r\n                    if (token === \"[\")\r\n                        this._parseFieldOptions(fld);\r\n                    this.tn.skip(\";\");\r\n\r\n                }\r\n            }\r\n            msg[\"fields\"].push(fld);\r\n            return fld;\r\n        };\r\n\r\n        /**\r\n         * Parses a message oneof.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseMessageOneOf = function(msg) {\r\n            var token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal oneof name: \"+token);\r\n            var name = token,\r\n                fld;\r\n            var fields = [];\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== \"}\") {\r\n                fld = this._parseMessageField(msg, \"optional\", token);\r\n                fld[\"oneof\"] = name;\r\n                fields.push(fld[\"id\"]);\r\n            }\r\n            this.tn.omit(\";\");\r\n            msg[\"oneofs\"][name] = fields;\r\n        };\r\n\r\n        /**\r\n         * Parses a set of field option definitions.\r\n         * @param {!Object} fld Field definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseFieldOptions = function(fld) {\r\n            this.tn.skip(\"[\");\r\n            var token,\r\n                first = true;\r\n            while ((token = this.tn.peek()) !== ']') {\r\n                if (!first)\r\n                    this.tn.skip(\",\");\r\n                this._parseOption(fld, true);\r\n                first = false;\r\n            }\r\n            this.tn.next();\r\n        };\r\n\r\n        /**\r\n         * Parses an enum.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */\r\n        ParserPrototype._parseEnum = function(msg) {\r\n            var enm = {\r\n                \"name\": \"\",\r\n                \"values\": [],\r\n                \"options\": {}\r\n            };\r\n            var token = this.tn.next();\r\n            if (!Lang.NAME.test(token))\r\n                throw Error(\"illegal name: \"+token);\r\n            enm[\"name\"] = token;\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (token === \"option\")\r\n                    this._parseOption(enm);\r\n                else {\r\n                    if (!Lang.NAME.test(token))\r\n                        throw Error(\"illegal name: \"+token);\r\n                    this.tn.skip(\"=\");\r\n                    var val = {\r\n                        \"name\": token,\r\n                        \"id\": mkId(this.tn.next(), true)\r\n                    };\r\n                    token = this.tn.peek();\r\n                    if (token === \"[\")\r\n                        this._parseFieldOptions({ \"options\": {} });\r\n                    this.tn.skip(\";\");\r\n                    enm[\"values\"].push(val);\r\n                }\r\n            }\r\n            this.tn.omit(\";\");\r\n            msg[\"enums\"].push(enm);\r\n        };\r\n\r\n        /**\r\n         * Parses an extensions statement.\r\n         * @param {!Object} msg Message object\r\n         * @private\r\n         */\r\n        ParserPrototype._parseExtensions = function(msg) {\r\n            var token = this.tn.next(),\r\n                range = [];\r\n            if (token === \"min\")\r\n                range.push(ProtoBuf.ID_MIN);\r\n            else if (token === \"max\")\r\n                range.push(ProtoBuf.ID_MAX);\r\n            else\r\n                range.push(mkNumber(token));\r\n            this.tn.skip(\"to\");\r\n            token = this.tn.next();\r\n            if (token === \"min\")\r\n                range.push(ProtoBuf.ID_MIN);\r\n            else if (token === \"max\")\r\n                range.push(ProtoBuf.ID_MAX);\r\n            else\r\n                range.push(mkNumber(token));\r\n            this.tn.skip(\";\");\r\n            msg[\"extensions\"] = range;\r\n        };\r\n\r\n        /**\r\n         * Parses an extend block.\r\n         * @param {!Object} parent Parent object\r\n         * @private\r\n         */\r\n        ParserPrototype._parseExtend = function(parent) {\r\n            var token = this.tn.next();\r\n            if (!Lang.TYPEREF.test(token))\r\n                throw Error(\"illegal extend reference: \"+token);\r\n            var ext = {\r\n                \"ref\": token,\r\n                \"fields\": []\r\n            };\r\n            this.tn.skip(\"{\");\r\n            while ((token = this.tn.next()) !== '}') {\r\n                if (Lang.RULE.test(token))\r\n                    this._parseMessageField(ext, token);\r\n                else if (Lang.TYPEREF.test(token)) {\r\n                    if (!this.proto3)\r\n                        throw Error(\"illegal field rule: \"+token);\r\n                    this._parseMessageField(ext, \"optional\", token);\r\n                } else\r\n                    throw Error(\"illegal extend token: \"+token);\r\n            }\r\n            this.tn.omit(\";\");\r\n            parent[\"messages\"].push(ext);\r\n            return ext;\r\n        };\r\n\r\n        // ----- General -----\r\n\r\n        /**\r\n         * Returns a string representation of this parser.\r\n         * @returns {string}\r\n         */\r\n        ParserPrototype.toString = function() {\r\n            return \"Parser at line \"+this.tn.line;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.DotProto.Parser\r\n         * @expose\r\n         */\r\n        DotProto.Parser = Parser;\r\n\r\n        return DotProto;\r\n\r\n    })(ProtoBuf, ProtoBuf.Lang);\r\n\r\n    /**\r\n     * @alias ProtoBuf.Reflect\r\n     * @expose\r\n     */\r\n    ProtoBuf.Reflect = (function(ProtoBuf) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Reflection types.\r\n         * @exports ProtoBuf.Reflect\r\n         * @namespace\r\n         */\r\n        var Reflect = {};\r\n\r\n        /**\r\n         * Constructs a Reflect base class.\r\n         * @exports ProtoBuf.Reflect.T\r\n         * @constructor\r\n         * @abstract\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {?ProtoBuf.Reflect.T} parent Parent object\r\n         * @param {string} name Object name\r\n         */\r\n        var T = function(builder, parent, name) {\r\n\r\n            /**\r\n             * Builder reference.\r\n             * @type {!ProtoBuf.Builder}\r\n             * @expose\r\n             */\r\n            this.builder = builder;\r\n\r\n            /**\r\n             * Parent object.\r\n             * @type {?ProtoBuf.Reflect.T}\r\n             * @expose\r\n             */\r\n            this.parent = parent;\r\n\r\n            /**\r\n             * Object name in namespace.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.name = name;\r\n\r\n            /**\r\n             * Fully qualified class name\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.className;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.T.prototype\r\n         * @inner\r\n         */\r\n        var TPrototype = T.prototype;\r\n\r\n        /**\r\n         * Returns the fully qualified name of this object.\r\n         * @returns {string} Fully qualified name as of \".PATH.TO.THIS\"\r\n         * @expose\r\n         */\r\n        TPrototype.fqn = function() {\r\n            var name = this.name,\r\n                ptr = this;\r\n            do {\r\n                ptr = ptr.parent;\r\n                if (ptr == null)\r\n                    break;\r\n                name = ptr.name+\".\"+name;\r\n            } while (true);\r\n            return name;\r\n        };\r\n\r\n        /**\r\n         * Returns a string representation of this Reflect object (its fully qualified name).\r\n         * @param {boolean=} includeClass Set to true to include the class name. Defaults to false.\r\n         * @return String representation\r\n         * @expose\r\n         */\r\n        TPrototype.toString = function(includeClass) {\r\n            return (includeClass ? this.className + \" \" : \"\") + this.fqn();\r\n        };\r\n\r\n        /**\r\n         * Builds this type.\r\n         * @throws {Error} If this type cannot be built directly\r\n         * @expose\r\n         */\r\n        TPrototype.build = function() {\r\n            throw Error(this.toString(true)+\" cannot be built directly\");\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.T\r\n         * @expose\r\n         */\r\n        Reflect.T = T;\r\n\r\n        /**\r\n         * Constructs a new Namespace.\r\n         * @exports ProtoBuf.Reflect.Namespace\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {?ProtoBuf.Reflect.Namespace} parent Namespace parent\r\n         * @param {string} name Namespace name\r\n         * @param {Object.<string,*>=} options Namespace options\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Namespace = function(builder, parent, name, options, syntax) {\r\n            T.call(this, builder, parent, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Namespace\";\r\n\r\n            /**\r\n             * Children inside the namespace.\r\n             * @type {!Array.<ProtoBuf.Reflect.T>}\r\n             */\r\n            this.children = [];\r\n\r\n            /**\r\n             * Options.\r\n             * @type {!Object.<string, *>}\r\n             */\r\n            this.options = options || {};\r\n\r\n            /**\r\n             * Syntax level (e.g., proto2 or proto3).\r\n             * @type {!string}\r\n             */\r\n            this.syntax = syntax || \"proto2\";\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Namespace.prototype\r\n         * @inner\r\n         */\r\n        var NamespacePrototype = Namespace.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * Returns an array of the namespace's children.\r\n         * @param {ProtoBuf.Reflect.T=} type Filter type (returns instances of this type only). Defaults to null (all children).\r\n         * @return {Array.<ProtoBuf.Reflect.T>}\r\n         * @expose\r\n         */\r\n        NamespacePrototype.getChildren = function(type) {\r\n            type = type || null;\r\n            if (type == null)\r\n                return this.children.slice();\r\n            var children = [];\r\n            for (var i=0, k=this.children.length; i<k; ++i)\r\n                if (this.children[i] instanceof type)\r\n                    children.push(this.children[i]);\r\n            return children;\r\n        };\r\n\r\n        /**\r\n         * Adds a child to the namespace.\r\n         * @param {ProtoBuf.Reflect.T} child Child\r\n         * @throws {Error} If the child cannot be added (duplicate)\r\n         * @expose\r\n         */\r\n        NamespacePrototype.addChild = function(child) {\r\n            var other;\r\n            if (other = this.getChild(child.name)) {\r\n                // Try to revert camelcase transformation on collision\r\n                if (other instanceof Message.Field && other.name !== other.originalName && this.getChild(other.originalName) === null)\r\n                    other.name = other.originalName; // Revert previous first (effectively keeps both originals)\r\n                else if (child instanceof Message.Field && child.name !== child.originalName && this.getChild(child.originalName) === null)\r\n                    child.name = child.originalName;\r\n                else\r\n                    throw Error(\"Duplicate name in namespace \"+this.toString(true)+\": \"+child.name);\r\n            }\r\n            this.children.push(child);\r\n        };\r\n\r\n        /**\r\n         * Gets a child by its name or id.\r\n         * @param {string|number} nameOrId Child name or id\r\n         * @return {?ProtoBuf.Reflect.T} The child or null if not found\r\n         * @expose\r\n         */\r\n        NamespacePrototype.getChild = function(nameOrId) {\r\n            var key = typeof nameOrId === 'number' ? 'id' : 'name';\r\n            for (var i=0, k=this.children.length; i<k; ++i)\r\n                if (this.children[i][key] === nameOrId)\r\n                    return this.children[i];\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Resolves a reflect object inside of this namespace.\r\n         * @param {string|!Array.<string>} qn Qualified name to resolve\r\n         * @param {boolean=} excludeNonNamespace Excludes non-namespace types, defaults to `false`\r\n         * @return {?ProtoBuf.Reflect.Namespace} The resolved type or null if not found\r\n         * @expose\r\n         */\r\n        NamespacePrototype.resolve = function(qn, excludeNonNamespace) {\r\n            var part = typeof qn === 'string' ? qn.split(\".\") : qn,\r\n                ptr = this,\r\n                i = 0;\r\n            if (part[i] === \"\") { // Fully qualified name, e.g. \".My.Message'\r\n                while (ptr.parent !== null)\r\n                    ptr = ptr.parent;\r\n                i++;\r\n            }\r\n            var child;\r\n            do {\r\n                do {\r\n                    if (!(ptr instanceof Reflect.Namespace)) {\r\n                        ptr = null;\r\n                        break;\r\n                    }\r\n                    child = ptr.getChild(part[i]);\r\n                    if (!child || !(child instanceof Reflect.T) || (excludeNonNamespace && !(child instanceof Reflect.Namespace))) {\r\n                        ptr = null;\r\n                        break;\r\n                    }\r\n                    ptr = child; i++;\r\n                } while (i < part.length);\r\n                if (ptr != null)\r\n                    break; // Found\r\n                // Else search the parent\r\n                if (this.parent !== null)\r\n                    return this.parent.resolve(qn, excludeNonNamespace);\r\n            } while (ptr != null);\r\n            return ptr;\r\n        };\r\n\r\n        /**\r\n         * Determines the shortest qualified name of the specified type, if any, relative to this namespace.\r\n         * @param {!ProtoBuf.Reflect.T} t Reflection type\r\n         * @returns {string} The shortest qualified name or, if there is none, the fqn\r\n         * @expose\r\n         */\r\n        NamespacePrototype.qn = function(t) {\r\n            var part = [], ptr = t;\r\n            do {\r\n                part.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            } while (ptr !== null);\r\n            for (var len=1; len <= part.length; len++) {\r\n                var qn = part.slice(part.length-len);\r\n                if (t === this.resolve(qn, t instanceof Reflect.Namespace))\r\n                    return qn.join(\".\");\r\n            }\r\n            return t.fqn();\r\n        };\r\n\r\n        /**\r\n         * Builds the namespace and returns the runtime counterpart.\r\n         * @return {Object.<string,Function|Object>} Runtime namespace\r\n         * @expose\r\n         */\r\n        NamespacePrototype.build = function() {\r\n            /** @dict */\r\n            var ns = {};\r\n            var children = this.children;\r\n            for (var i=0, k=children.length, child; i<k; ++i) {\r\n                child = children[i];\r\n                if (child instanceof Namespace)\r\n                    ns[child.name] = child.build();\r\n            }\r\n            if (Object.defineProperty)\r\n                Object.defineProperty(ns, \"$options\", { \"value\": this.buildOpt() });\r\n            return ns;\r\n        };\r\n\r\n        /**\r\n         * Builds the namespace's '$options' property.\r\n         * @return {Object.<string,*>}\r\n         */\r\n        NamespacePrototype.buildOpt = function() {\r\n            var opt = {},\r\n                keys = Object.keys(this.options);\r\n            for (var i=0, k=keys.length; i<k; ++i) {\r\n                var key = keys[i],\r\n                    val = this.options[keys[i]];\r\n                // TODO: Options are not resolved, yet.\r\n                // if (val instanceof Namespace) {\r\n                //     opt[key] = val.build();\r\n                // } else {\r\n                opt[key] = val;\r\n                // }\r\n            }\r\n            return opt;\r\n        };\r\n\r\n        /**\r\n         * Gets the value assigned to the option with the specified name.\r\n         * @param {string=} name Returns the option value if specified, otherwise all options are returned.\r\n         * @return {*|Object.<string,*>}null} Option value or NULL if there is no such option\r\n         */\r\n        NamespacePrototype.getOption = function(name) {\r\n            if (typeof name === 'undefined')\r\n                return this.options;\r\n            return typeof this.options[name] !== 'undefined' ? this.options[name] : null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Namespace\r\n         * @expose\r\n         */\r\n        Reflect.Namespace = Namespace;\r\n\r\n        /**\r\n         * Constructs a new Element implementation that checks and converts values for a\r\n         * particular field type, as appropriate.\r\n         *\r\n         * An Element represents a single value: either the value of a singular field,\r\n         * or a value contained in one entry of a repeated field or map field. This\r\n         * class does not implement these higher-level concepts; it only encapsulates\r\n         * the low-level typechecking and conversion.\r\n         *\r\n         * @exports ProtoBuf.Reflect.Element\r\n         * @param {{name: string, wireType: number}} type Resolved data type\r\n         * @param {ProtoBuf.Reflect.T|null} resolvedType Resolved type, if relevant\r\n         * (e.g. submessage field).\r\n         * @param {boolean} isMapKey Is this element a Map key? The value will be\r\n         * converted to string form if so.\r\n         * @param {string} syntax Syntax level of defining message type, e.g.,\r\n         * proto2 or proto3.\r\n         * @constructor\r\n         */\r\n        var Element = function(type, resolvedType, isMapKey, syntax) {\r\n\r\n            /**\r\n             * Element type, as a string (e.g., int32).\r\n             * @type {{name: string, wireType: number}}\r\n             */\r\n            this.type = type;\r\n\r\n            /**\r\n             * Element type reference to submessage or enum definition, if needed.\r\n             * @type {ProtoBuf.Reflect.T|null}\r\n             */\r\n            this.resolvedType = resolvedType;\r\n\r\n            /**\r\n             * Element is a map key.\r\n             * @type {boolean}\r\n             */\r\n            this.isMapKey = isMapKey;\r\n\r\n            /**\r\n             * Syntax level of defining message type, e.g., proto2 or proto3.\r\n             * @type {string}\r\n             */\r\n            this.syntax = syntax;\r\n\r\n            if (isMapKey && ProtoBuf.MAP_KEY_TYPES.indexOf(type) < 0)\r\n                throw Error(\"Invalid map key type: \" + type.name);\r\n        };\r\n\r\n        var ElementPrototype = Element.prototype;\r\n\r\n        /**\r\n         * Obtains a (new) default value for the specified type.\r\n         * @param type {string|{name: string, wireType: number}} Field type\r\n         * @returns {*} Default value\r\n         * @inner\r\n         */\r\n        function mkDefault(type) {\r\n            if (typeof type === 'string')\r\n                type = ProtoBuf.TYPES[type];\r\n            if (typeof type.defaultValue === 'undefined')\r\n                throw Error(\"default value for type \"+type.name+\" is not supported\");\r\n            if (type == ProtoBuf.TYPES[\"bytes\"])\r\n                return new ByteBuffer(0);\r\n            return type.defaultValue;\r\n        }\r\n\r\n        /**\r\n         * Returns the default value for this field in proto3.\r\n         * @function\r\n         * @param type {string|{name: string, wireType: number}} the field type\r\n         * @returns {*} Default value\r\n         */\r\n        Element.defaultFieldValue = mkDefault;\r\n\r\n        /**\r\n         * Makes a Long from a value.\r\n         * @param {{low: number, high: number, unsigned: boolean}|string|number} value Value\r\n         * @param {boolean=} unsigned Whether unsigned or not, defaults to reuse it from Long-like objects or to signed for\r\n         *  strings and numbers\r\n         * @returns {!Long}\r\n         * @throws {Error} If the value cannot be converted to a Long\r\n         * @inner\r\n         */\r\n        function mkLong(value, unsigned) {\r\n            if (value && typeof value.low === 'number' && typeof value.high === 'number' && typeof value.unsigned === 'boolean'\r\n                && value.low === value.low && value.high === value.high)\r\n                return new ProtoBuf.Long(value.low, value.high, typeof unsigned === 'undefined' ? value.unsigned : unsigned);\r\n            if (typeof value === 'string')\r\n                return ProtoBuf.Long.fromString(value, unsigned || false, 10);\r\n            if (typeof value === 'number')\r\n                return ProtoBuf.Long.fromNumber(value, unsigned || false);\r\n            throw Error(\"not convertible to Long\");\r\n        }\r\n\r\n        /**\r\n         * Checks if the given value can be set for an element of this type (singular\r\n         * field or one element of a repeated field or map).\r\n         * @param {*} value Value to check\r\n         * @return {*} Verified, maybe adjusted, value\r\n         * @throws {Error} If the value cannot be verified for this element slot\r\n         * @expose\r\n         */\r\n        ElementPrototype.verifyValue = function(value) {\r\n            var fail = function(val, msg) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\" of type \"+this.type.name+\": \"+val+\" (\"+msg+\")\");\r\n            }.bind(this);\r\n            switch (this.type) {\r\n                // Signed 32bit\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                    // Account for !NaN: value === value\r\n                    if (typeof value !== 'number' || (value === value && value % 1 !== 0))\r\n                        fail(typeof value, \"not an integer\");\r\n                    return value > 4294967295 ? value | 0 : value;\r\n\r\n                // Unsigned 32bit\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    if (typeof value !== 'number' || (value === value && value % 1 !== 0))\r\n                        fail(typeof value, \"not an integer\");\r\n                    return value < 0 ? value >>> 0 : value;\r\n\r\n                // Signed 64bit\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]: {\r\n                    if (ProtoBuf.Long)\r\n                        try {\r\n                            return mkLong(value, false);\r\n                        } catch (e) {\r\n                            fail(typeof value, e.message);\r\n                        }\r\n                    else\r\n                        fail(typeof value, \"requires Long.js\");\r\n                }\r\n\r\n                // Unsigned 64bit\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                case ProtoBuf.TYPES[\"fixed64\"]: {\r\n                    if (ProtoBuf.Long)\r\n                        try {\r\n                            return mkLong(value, true);\r\n                        } catch (e) {\r\n                            fail(typeof value, e.message);\r\n                        }\r\n                    else\r\n                        fail(typeof value, \"requires Long.js\");\r\n                }\r\n\r\n                // Bool\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    if (typeof value !== 'boolean')\r\n                        fail(typeof value, \"not a boolean\");\r\n                    return value;\r\n\r\n                // Float\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    if (typeof value !== 'number')\r\n                        fail(typeof value, \"not a number\");\r\n                    return value;\r\n\r\n                // Length-delimited string\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    if (typeof value !== 'string' && !(value && value instanceof String))\r\n                        fail(typeof value, \"not a string\");\r\n                    return \"\"+value; // Convert String object to string\r\n\r\n                // Length-delimited bytes\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    if (ByteBuffer.isByteBuffer(value))\r\n                        return value;\r\n                    return ByteBuffer.wrap(value, \"base64\");\r\n\r\n                // Constant enum value\r\n                case ProtoBuf.TYPES[\"enum\"]: {\r\n                    var values = this.resolvedType.getChildren(ProtoBuf.Reflect.Enum.Value);\r\n                    for (i=0; i<values.length; i++)\r\n                        if (values[i].name == value)\r\n                            return values[i].id;\r\n                        else if (values[i].id == value)\r\n                            return values[i].id;\r\n\r\n                    if (this.syntax === 'proto3') {\r\n                        // proto3: just make sure it's an integer.\r\n                        if (typeof value !== 'number' || (value === value && value % 1 !== 0))\r\n                            fail(typeof value, \"not an integer\");\r\n                        if (value > 4294967295 || value < 0)\r\n                            fail(typeof value, \"not in range for uint32\")\r\n                        return value;\r\n                    } else {\r\n                        // proto2 requires enum values to be valid.\r\n                        fail(value, \"not a valid enum value\");\r\n                    }\r\n                }\r\n                // Embedded message\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                case ProtoBuf.TYPES[\"message\"]: {\r\n                    if (!value || typeof value !== 'object')\r\n                        fail(typeof value, \"object expected\");\r\n                    if (value instanceof this.resolvedType.clazz)\r\n                        return value;\r\n                    if (value instanceof ProtoBuf.Builder.Message) {\r\n                        // Mismatched type: Convert to object (see: https://github.com/dcodeIO/ProtoBuf.js/issues/180)\r\n                        var obj = {};\r\n                        for (var i in value)\r\n                            if (value.hasOwnProperty(i))\r\n                                obj[i] = value[i];\r\n                        value = obj;\r\n                    }\r\n                    // Else let's try to construct one from a key-value object\r\n                    return new (this.resolvedType.clazz)(value); // May throw for a hundred of reasons\r\n                }\r\n            }\r\n\r\n            // We should never end here\r\n            throw Error(\"[INTERNAL] Illegal value for \"+this.toString(true)+\": \"+value+\" (undefined type \"+this.type+\")\");\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an element on the wire.\r\n         * @param {number} id Field number\r\n         * @param {*} value Field value\r\n         * @returns {number} Byte length\r\n         * @throws {Error} If the value cannot be calculated\r\n         * @expose\r\n         */\r\n        ElementPrototype.calculateLength = function(id, value) {\r\n            if (value === null) return 0; // Nothing to encode\r\n            // Tag has already been written\r\n            var n;\r\n            switch (this.type) {\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                    return value < 0 ? ByteBuffer.calculateVarint64(value) : ByteBuffer.calculateVarint32(value);\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                    return ByteBuffer.calculateVarint32(value);\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                    return ByteBuffer.calculateVarint32(ByteBuffer.zigZagEncode32(value));\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                    return 4;\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                    return ByteBuffer.calculateVarint64(value);\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                    return ByteBuffer.calculateVarint64(ByteBuffer.zigZagEncode64(value));\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                    return 8;\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    return 1;\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    return ByteBuffer.calculateVarint32(value);\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    return 8;\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    n = ByteBuffer.calculateUTF8Bytes(value);\r\n                    return ByteBuffer.calculateVarint32(n) + n;\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    if (value.remaining() < 0)\r\n                        throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value.remaining()+\" bytes remaining\");\r\n                    return ByteBuffer.calculateVarint32(value.remaining()) + value.remaining();\r\n                case ProtoBuf.TYPES[\"message\"]:\r\n                    n = this.resolvedType.calculate(value);\r\n                    return ByteBuffer.calculateVarint32(n) + n;\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                    n = this.resolvedType.calculate(value);\r\n                    return n + ByteBuffer.calculateVarint32((id << 3) | ProtoBuf.WIRE_TYPES.ENDGROUP);\r\n            }\r\n            // We should never end here\r\n            throw Error(\"[INTERNAL] Illegal value to encode in \"+this.toString(true)+\": \"+value+\" (unknown type)\");\r\n        };\r\n\r\n        /**\r\n         * Encodes a value to the specified buffer. Does not encode the key.\r\n         * @param {number} id Field number\r\n         * @param {*} value Field value\r\n         * @param {ByteBuffer} buffer ByteBuffer to encode to\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If the value cannot be encoded\r\n         * @expose\r\n         */\r\n        ElementPrototype.encodeValue = function(id, value, buffer) {\r\n            if (value === null) return buffer; // Nothing to encode\r\n            // Tag has already been written\r\n\r\n            switch (this.type) {\r\n                // 32bit signed varint\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                    // \"If you use int32 or int64 as the type for a negative number, the resulting varint is always ten bytes\r\n                    // long – it is, effectively, treated like a very large unsigned integer.\" (see #122)\r\n                    if (value < 0)\r\n                        buffer.writeVarint64(value);\r\n                    else\r\n                        buffer.writeVarint32(value);\r\n                    break;\r\n\r\n                // 32bit unsigned varint\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                    buffer.writeVarint32(value);\r\n                    break;\r\n\r\n                // 32bit varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                    buffer.writeVarint32ZigZag(value);\r\n                    break;\r\n\r\n                // Fixed unsigned 32bit\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    buffer.writeUint32(value);\r\n                    break;\r\n\r\n                // Fixed signed 32bit\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                    buffer.writeInt32(value);\r\n                    break;\r\n\r\n                // 64bit varint as-is\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                    buffer.writeVarint64(value); // throws\r\n                    break;\r\n\r\n                // 64bit varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                    buffer.writeVarint64ZigZag(value); // throws\r\n                    break;\r\n\r\n                // Fixed unsigned 64bit\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                    buffer.writeUint64(value); // throws\r\n                    break;\r\n\r\n                // Fixed signed 64bit\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                    buffer.writeInt64(value); // throws\r\n                    break;\r\n\r\n                // Bool\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    if (typeof value === 'string')\r\n                        buffer.writeVarint32(value.toLowerCase() === 'false' ? 0 : !!value);\r\n                    else\r\n                        buffer.writeVarint32(value ? 1 : 0);\r\n                    break;\r\n\r\n                // Constant enum value\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    buffer.writeVarint32(value);\r\n                    break;\r\n\r\n                // 32bit float\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                    buffer.writeFloat32(value);\r\n                    break;\r\n\r\n                // 64bit float\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    buffer.writeFloat64(value);\r\n                    break;\r\n\r\n                // Length-delimited string\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    buffer.writeVString(value);\r\n                    break;\r\n\r\n                // Length-delimited bytes\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    if (value.remaining() < 0)\r\n                        throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value.remaining()+\" bytes remaining\");\r\n                    var prevOffset = value.offset;\r\n                    buffer.writeVarint32(value.remaining());\r\n                    buffer.append(value);\r\n                    value.offset = prevOffset;\r\n                    break;\r\n\r\n                // Embedded message\r\n                case ProtoBuf.TYPES[\"message\"]:\r\n                    var bb = new ByteBuffer().LE();\r\n                    this.resolvedType.encode(value, bb);\r\n                    buffer.writeVarint32(bb.offset);\r\n                    buffer.append(bb.flip());\r\n                    break;\r\n\r\n                // Legacy group\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                    this.resolvedType.encode(value, buffer);\r\n                    buffer.writeVarint32((id << 3) | ProtoBuf.WIRE_TYPES.ENDGROUP);\r\n                    break;\r\n\r\n                default:\r\n                    // We should never end here\r\n                    throw Error(\"[INTERNAL] Illegal value to encode in \"+this.toString(true)+\": \"+value+\" (unknown type)\");\r\n            }\r\n            return buffer;\r\n        };\r\n\r\n        /**\r\n         * Decode one element value from the specified buffer.\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {number} wireType The field wire type\r\n         * @param {number} id The field number\r\n         * @return {*} Decoded value\r\n         * @throws {Error} If the field cannot be decoded\r\n         * @expose\r\n         */\r\n        ElementPrototype.decode = function(buffer, wireType, id) {\r\n            if (wireType != this.type.wireType)\r\n                throw Error(\"Unexpected wire type for element\");\r\n\r\n            var value, nBytes;\r\n            switch (this.type) {\r\n                // 32bit signed varint\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                    return buffer.readVarint32() | 0;\r\n\r\n                // 32bit unsigned varint\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                    return buffer.readVarint32() >>> 0;\r\n\r\n                // 32bit signed varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                    return buffer.readVarint32ZigZag() | 0;\r\n\r\n                // Fixed 32bit unsigned\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    return buffer.readUint32() >>> 0;\r\n\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                    return buffer.readInt32() | 0;\r\n\r\n                // 64bit signed varint\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                    return buffer.readVarint64();\r\n\r\n                // 64bit unsigned varint\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                    return buffer.readVarint64().toUnsigned();\r\n\r\n                // 64bit signed varint zig-zag\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                    return buffer.readVarint64ZigZag();\r\n\r\n                // Fixed 64bit unsigned\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                    return buffer.readUint64();\r\n\r\n                // Fixed 64bit signed\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                    return buffer.readInt64();\r\n\r\n                // Bool varint\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    return !!buffer.readVarint32();\r\n\r\n                // Constant enum value (varint)\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    // The following Builder.Message#set will already throw\r\n                    return buffer.readVarint32();\r\n\r\n                // 32bit float\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                    return buffer.readFloat();\r\n\r\n                // 64bit float\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    return buffer.readDouble();\r\n\r\n                // Length-delimited string\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    return buffer.readVString();\r\n\r\n                // Length-delimited bytes\r\n                case ProtoBuf.TYPES[\"bytes\"]: {\r\n                    nBytes = buffer.readVarint32();\r\n                    if (buffer.remaining() < nBytes)\r\n                        throw Error(\"Illegal number of bytes for \"+this.toString(true)+\": \"+nBytes+\" required but got only \"+buffer.remaining());\r\n                    value = buffer.clone(); // Offset already set\r\n                    value.limit = value.offset+nBytes;\r\n                    buffer.offset += nBytes;\r\n                    return value;\r\n                }\r\n\r\n                // Length-delimited embedded message\r\n                case ProtoBuf.TYPES[\"message\"]: {\r\n                    nBytes = buffer.readVarint32();\r\n                    return this.resolvedType.decode(buffer, nBytes);\r\n                }\r\n\r\n                // Legacy group\r\n                case ProtoBuf.TYPES[\"group\"]:\r\n                    return this.resolvedType.decode(buffer, -1, id);\r\n            }\r\n\r\n            // We should never end here\r\n            throw Error(\"[INTERNAL] Illegal decode type\");\r\n        };\r\n\r\n        /**\r\n         * Converts a value from a string to the canonical element type.\r\n         *\r\n         * Legal only when isMapKey is true.\r\n         *\r\n         * @param {string} str The string value\r\n         * @returns {*} The value\r\n         */\r\n        ElementPrototype.valueFromString = function(str) {\r\n            if (!this.isMapKey) {\r\n                throw Error(\"valueFromString() called on non-map-key element\");\r\n            }\r\n\r\n            switch (this.type) {\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    return this.verifyValue(parseInt(str));\r\n\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                      // Long-based fields support conversions from string already.\r\n                      return this.verifyValue(str);\r\n\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                      return str === \"true\";\r\n\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                      return this.verifyValue(str);\r\n\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                      return ByteBuffer.fromBinary(str);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts a value from the canonical element type to a string.\r\n         *\r\n         * It should be the case that `valueFromString(valueToString(val))` returns\r\n         * a value equivalent to `verifyValue(val)` for every legal value of `val`\r\n         * according to this element type.\r\n         *\r\n         * This may be used when the element must be stored or used as a string,\r\n         * e.g., as a map key on an Object.\r\n         *\r\n         * Legal only when isMapKey is true.\r\n         *\r\n         * @param {*} val The value\r\n         * @returns {string} The string form of the value.\r\n         */\r\n        ElementPrototype.valueToString = function(value) {\r\n            if (!this.isMapKey) {\r\n                throw Error(\"valueToString() called on non-map-key element\");\r\n            }\r\n\r\n            if (this.type === ProtoBuf.TYPES[\"bytes\"]) {\r\n                return value.toString(\"binary\");\r\n            } else {\r\n                return value.toString();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Element\r\n         * @expose\r\n         */\r\n        Reflect.Element = Element;\r\n\r\n        /**\r\n         * Constructs a new Message.\r\n         * @exports ProtoBuf.Reflect.Message\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Namespace} parent Parent message or namespace\r\n         * @param {string} name Message name\r\n         * @param {Object.<string,*>=} options Message options\r\n         * @param {boolean=} isGroup `true` if this is a legacy group\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */\r\n        var Message = function(builder, parent, name, options, isGroup, syntax) {\r\n            Namespace.call(this, builder, parent, name, options, syntax);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Message\";\r\n\r\n            /**\r\n             * Extensions range.\r\n             * @type {!Array.<number>}\r\n             * @expose\r\n             */\r\n            this.extensions = [ProtoBuf.ID_MIN, ProtoBuf.ID_MAX];\r\n\r\n            /**\r\n             * Runtime message class.\r\n             * @type {?function(new:ProtoBuf.Builder.Message)}\r\n             * @expose\r\n             */\r\n            this.clazz = null;\r\n\r\n            /**\r\n             * Whether this is a legacy group or not.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.isGroup = !!isGroup;\r\n\r\n            // The following cached collections are used to efficiently iterate over or look up fields when decoding.\r\n\r\n            /**\r\n             * Cached fields.\r\n             * @type {?Array.<!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */\r\n            this._fields = null;\r\n\r\n            /**\r\n             * Cached fields by id.\r\n             * @type {?Object.<number,!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */\r\n            this._fieldsById = null;\r\n\r\n            /**\r\n             * Cached fields by name.\r\n             * @type {?Object.<string,!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */\r\n            this._fieldsByName = null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.prototype\r\n         * @inner\r\n         */\r\n        var MessagePrototype = Message.prototype = Object.create(Namespace.prototype);\r\n\r\n        /**\r\n         * Builds the message and returns the runtime counterpart, which is a fully functional class.\r\n         * @see ProtoBuf.Builder.Message\r\n         * @param {boolean=} rebuild Whether to rebuild or not, defaults to false\r\n         * @return {ProtoBuf.Reflect.Message} Message class\r\n         * @throws {Error} If the message cannot be built\r\n         * @expose\r\n         */\r\n        MessagePrototype.build = function(rebuild) {\r\n            if (this.clazz && !rebuild)\r\n                return this.clazz;\r\n\r\n            // Create the runtime Message class in its own scope\r\n            var clazz = (function(ProtoBuf, T) {\r\n\r\n                var fields = T.getChildren(ProtoBuf.Reflect.Message.Field),\r\n                    oneofs = T.getChildren(ProtoBuf.Reflect.Message.OneOf);\r\n\r\n                /**\r\n                 * Constructs a new runtime Message.\r\n                 * @name ProtoBuf.Builder.Message\r\n                 * @class Barebone of all runtime messages.\r\n                 * @param {!Object.<string,*>|string} values Preset values\r\n                 * @param {...string} var_args\r\n                 * @constructor\r\n                 * @throws {Error} If the message cannot be created\r\n                 */\r\n                var Message = function(values, var_args) {\r\n                    ProtoBuf.Builder.Message.call(this);\r\n\r\n                    // Create virtual oneof properties\r\n                    for (var i=0, k=oneofs.length; i<k; ++i)\r\n                        this[oneofs[i].name] = null;\r\n                    // Create fields and set default values\r\n                    for (i=0, k=fields.length; i<k; ++i) {\r\n                        var field = fields[i];\r\n                        this[field.name] =\r\n                            field.repeated ? [] :\r\n                            (field.map ? new ProtoBuf.Map(field) : null);\r\n                        if ((field.required || T.syntax === 'proto3') &&\r\n                            field.defaultValue !== null)\r\n                            this[field.name] = field.defaultValue;\r\n                    }\r\n\r\n                    if (arguments.length > 0) {\r\n                        var value;\r\n                        // Set field values from a values object\r\n                        if (arguments.length === 1 && values !== null && typeof values === 'object' &&\r\n                            /* not _another_ Message */ (typeof values.encode !== 'function' || values instanceof Message) &&\r\n                            /* not a repeated field */ !Array.isArray(values) &&\r\n                            /* not a Map */ !(values instanceof ProtoBuf.Map) &&\r\n                            /* not a ByteBuffer */ !ByteBuffer.isByteBuffer(values) &&\r\n                            /* not an ArrayBuffer */ !(values instanceof ArrayBuffer) &&\r\n                            /* not a Long */ !(ProtoBuf.Long && values instanceof ProtoBuf.Long)) {\r\n                            this.$set(values);\r\n                        } else // Set field values from arguments, in declaration order\r\n                            for (i=0, k=arguments.length; i<k; ++i)\r\n                                if (typeof (value = arguments[i]) !== 'undefined')\r\n                                    this.$set(fields[i].name, value); // May throw\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * @alias ProtoBuf.Builder.Message.prototype\r\n                 * @inner\r\n                 */\r\n                var MessagePrototype = Message.prototype = Object.create(ProtoBuf.Builder.Message.prototype);\r\n\r\n                /**\r\n                 * Adds a value to a repeated field.\r\n                 * @name ProtoBuf.Builder.Message#add\r\n                 * @function\r\n                 * @param {string} key Field name\r\n                 * @param {*} value Value to add\r\n                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be added\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.add = function(key, value, noAssert) {\r\n                    var field = T._fieldsByName[key];\r\n                    if (!noAssert) {\r\n                        if (!field)\r\n                            throw Error(this+\"#\"+key+\" is undefined\");\r\n                        if (!(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                            throw Error(this+\"#\"+key+\" is not a field: \"+field.toString(true)); // May throw if it's an enum or embedded message\r\n                        if (!field.repeated)\r\n                            throw Error(this+\"#\"+key+\" is not a repeated field\");\r\n                        value = field.verifyValue(value, true);\r\n                    }\r\n                    if (this[key] === null)\r\n                        this[key] = [];\r\n                    this[key].push(value);\r\n                    return this;\r\n                };\r\n\r\n                /**\r\n                 * Adds a value to a repeated field. This is an alias for {@link ProtoBuf.Builder.Message#add}.\r\n                 * @name ProtoBuf.Builder.Message#$add\r\n                 * @function\r\n                 * @param {string} key Field name\r\n                 * @param {*} value Value to add\r\n                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be added\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.$add = MessagePrototype.add;\r\n\r\n                /**\r\n                 * Sets a field's value.\r\n                 * @name ProtoBuf.Builder.Message#set\r\n                 * @function\r\n                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values\r\n                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted\r\n                 * @param {boolean=} noAssert Whether to not assert for an actual field / proper value type, defaults to `false`\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be set\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.set = function(keyOrObj, value, noAssert) {\r\n                    if (keyOrObj && typeof keyOrObj === 'object') {\r\n                        noAssert = value;\r\n                        for (var ikey in keyOrObj)\r\n                            if (keyOrObj.hasOwnProperty(ikey) && typeof (value = keyOrObj[ikey]) !== 'undefined')\r\n                                this.$set(ikey, value, noAssert);\r\n                        return this;\r\n                    }\r\n                    var field = T._fieldsByName[keyOrObj];\r\n                    if (!noAssert) {\r\n                        if (!field)\r\n                            throw Error(this+\"#\"+keyOrObj+\" is not a field: undefined\");\r\n                        if (!(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                            throw Error(this+\"#\"+keyOrObj+\" is not a field: \"+field.toString(true));\r\n                        this[field.name] = (value = field.verifyValue(value)); // May throw\r\n                    } else\r\n                        this[keyOrObj] = value;\r\n                    if (field && field.oneof) { // Field is part of an OneOf (not a virtual OneOf field)\r\n                        var currentField = this[field.oneof.name]; // Virtual field references currently set field\r\n                        if (value !== null) {\r\n                            if (currentField !== null && currentField !== field.name)\r\n                                this[currentField] = null; // Clear currently set field\r\n                            this[field.oneof.name] = field.name; // Point virtual field at this field\r\n                        } else if (/* value === null && */currentField === keyOrObj)\r\n                            this[field.oneof.name] = null; // Clear virtual field (current field explicitly cleared)\r\n                    }\r\n                    return this;\r\n                };\r\n\r\n                /**\r\n                 * Sets a field's value. This is an alias for [@link ProtoBuf.Builder.Message#set}.\r\n                 * @name ProtoBuf.Builder.Message#$set\r\n                 * @function\r\n                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values\r\n                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted\r\n                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                 * @throws {Error} If the value cannot be set\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.$set = MessagePrototype.set;\r\n\r\n                /**\r\n                 * Gets a field's value.\r\n                 * @name ProtoBuf.Builder.Message#get\r\n                 * @function\r\n                 * @param {string} key Key\r\n                 * @param {boolean=} noAssert Whether to not assert for an actual field, defaults to `false`\r\n                 * @return {*} Value\r\n                 * @throws {Error} If there is no such field\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.get = function(key, noAssert) {\r\n                    if (noAssert)\r\n                        return this[key];\r\n                    var field = T._fieldsByName[key];\r\n                    if (!field || !(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                        throw Error(this+\"#\"+key+\" is not a field: undefined\");\r\n                    if (!(field instanceof ProtoBuf.Reflect.Message.Field))\r\n                        throw Error(this+\"#\"+key+\" is not a field: \"+field.toString(true));\r\n                    return this[field.name];\r\n                };\r\n\r\n                /**\r\n                 * Gets a field's value. This is an alias for {@link ProtoBuf.Builder.Message#$get}.\r\n                 * @name ProtoBuf.Builder.Message#$get\r\n                 * @function\r\n                 * @param {string} key Key\r\n                 * @return {*} Value\r\n                 * @throws {Error} If there is no such field\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.$get = MessagePrototype.get;\r\n\r\n                // Getters and setters\r\n\r\n                for (var i=0; i<fields.length; i++) {\r\n                    var field = fields[i];\r\n                    // no setters for extension fields as these are named by their fqn\r\n                    if (field instanceof ProtoBuf.Reflect.Message.ExtensionField)\r\n                        continue;\r\n\r\n                    if (T.builder.options['populateAccessors'])\r\n                        (function(field) {\r\n                            // set/get[SomeValue]\r\n                            var Name = field.originalName.replace(/(_[a-zA-Z])/g, function(match) {\r\n                                return match.toUpperCase().replace('_','');\r\n                            });\r\n                            Name = Name.substring(0,1).toUpperCase() + Name.substring(1);\r\n\r\n                            // set/get_[some_value] FIXME: Do we really need these?\r\n                            var name = field.originalName.replace(/([A-Z])/g, function(match) {\r\n                                return \"_\"+match;\r\n                            });\r\n\r\n                            /**\r\n                             * The current field's unbound setter function.\r\n                             * @function\r\n                             * @param {*} value\r\n                             * @param {boolean=} noAssert\r\n                             * @returns {!ProtoBuf.Builder.Message}\r\n                             * @inner\r\n                             */\r\n                            var setter = function(value, noAssert) {\r\n                                this[field.name] = noAssert ? value : field.verifyValue(value);\r\n                                return this;\r\n                            };\r\n\r\n                            /**\r\n                             * The current field's unbound getter function.\r\n                             * @function\r\n                             * @returns {*}\r\n                             * @inner\r\n                             */\r\n                            var getter = function() {\r\n                                return this[field.name];\r\n                            };\r\n\r\n                            if (T.getChild(\"set\"+Name) === null)\r\n                                /**\r\n                                 * Sets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#set[SomeField]\r\n                                 * @function\r\n                                 * @param {*} value Value to set\r\n                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                                 * @returns {!ProtoBuf.Builder.Message} this\r\n                                 * @abstract\r\n                                 * @throws {Error} If the value cannot be set\r\n                                 */\r\n                                MessagePrototype[\"set\"+Name] = setter;\r\n\r\n                            if (T.getChild(\"set_\"+name) === null)\r\n                                /**\r\n                                 * Sets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#set_[some_field]\r\n                                 * @function\r\n                                 * @param {*} value Value to set\r\n                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                                 * @returns {!ProtoBuf.Builder.Message} this\r\n                                 * @abstract\r\n                                 * @throws {Error} If the value cannot be set\r\n                                 */\r\n                                MessagePrototype[\"set_\"+name] = setter;\r\n\r\n                            if (T.getChild(\"get\"+Name) === null)\r\n                                /**\r\n                                 * Gets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#get[SomeField]\r\n                                 * @function\r\n                                 * @abstract\r\n                                 * @return {*} The value\r\n                                 */\r\n                                MessagePrototype[\"get\"+Name] = getter;\r\n\r\n                            if (T.getChild(\"get_\"+name) === null)\r\n                                /**\r\n                                 * Gets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#get_[some_field]\r\n                                 * @function\r\n                                 * @return {*} The value\r\n                                 * @abstract\r\n                                 */\r\n                                MessagePrototype[\"get_\"+name] = getter;\r\n\r\n                        })(field);\r\n                }\r\n\r\n                // En-/decoding\r\n\r\n                /**\r\n                 * Encodes the message.\r\n                 * @name ProtoBuf.Builder.Message#$encode\r\n                 * @function\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ByteBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 * @see ProtoBuf.Builder.Message#encode64\r\n                 * @see ProtoBuf.Builder.Message#encodeHex\r\n                 * @see ProtoBuf.Builder.Message#encodeAB\r\n                 */\r\n                MessagePrototype.encode = function(buffer, noVerify) {\r\n                    if (typeof buffer === 'boolean')\r\n                        noVerify = buffer,\r\n                        buffer = undefined;\r\n                    var isNew = false;\r\n                    if (!buffer)\r\n                        buffer = new ByteBuffer(),\r\n                        isNew = true;\r\n                    var le = buffer.littleEndian;\r\n                    try {\r\n                        T.encode(this, buffer.LE(), noVerify);\r\n                        return (isNew ? buffer.flip() : buffer).LE(le);\r\n                    } catch (e) {\r\n                        buffer.LE(le);\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Encodes a message using the specified data payload.\r\n                 * @param {!Object.<string,*>} data Data payload\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @expose\r\n                 */\r\n                Message.encode = function(data, buffer, noVerify) {\r\n                    return new Message(data).encode(buffer, noVerify);\r\n                };\r\n\r\n                /**\r\n                 * Calculates the byte length of the message.\r\n                 * @name ProtoBuf.Builder.Message#calculate\r\n                 * @function\r\n                 * @returns {number} Byte length\r\n                 * @throws {Error} If the message cannot be calculated or if required fields are missing.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.calculate = function() {\r\n                    return T.calculate(this);\r\n                };\r\n\r\n                /**\r\n                 * Encodes the varint32 length-delimited message.\r\n                 * @name ProtoBuf.Builder.Message#encodeDelimited\r\n                 * @function\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ByteBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeDelimited = function(buffer) {\r\n                    var isNew = false;\r\n                    if (!buffer)\r\n                        buffer = new ByteBuffer(),\r\n                        isNew = true;\r\n                    var enc = new ByteBuffer().LE();\r\n                    T.encode(this, enc).flip();\r\n                    buffer.writeVarint32(enc.remaining());\r\n                    buffer.append(enc);\r\n                    return isNew ? buffer.flip() : buffer;\r\n                };\r\n\r\n                /**\r\n                 * Directly encodes the message to an ArrayBuffer.\r\n                 * @name ProtoBuf.Builder.Message#encodeAB\r\n                 * @function\r\n                 * @return {ArrayBuffer} Encoded message as ArrayBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeAB = function() {\r\n                    try {\r\n                        return this.encode().toArrayBuffer();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toArrayBuffer();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as an ArrayBuffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeAB}.\r\n                 * @name ProtoBuf.Builder.Message#toArrayBuffer\r\n                 * @function\r\n                 * @return {ArrayBuffer} Encoded message as ArrayBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toArrayBuffer = MessagePrototype.encodeAB;\r\n\r\n                /**\r\n                 * Directly encodes the message to a node Buffer.\r\n                 * @name ProtoBuf.Builder.Message#encodeNB\r\n                 * @function\r\n                 * @return {!Buffer}\r\n                 * @throws {Error} If the message cannot be encoded, not running under node.js or if required fields are\r\n                 *  missing. The later still returns the encoded node Buffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeNB = function() {\r\n                    try {\r\n                        return this.encode().toBuffer();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toBuffer();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as a node Buffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeNB}.\r\n                 * @name ProtoBuf.Builder.Message#toBuffer\r\n                 * @function\r\n                 * @return {!Buffer}\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded node Buffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toBuffer = MessagePrototype.encodeNB;\r\n\r\n                /**\r\n                 * Directly encodes the message to a base64 encoded string.\r\n                 * @name ProtoBuf.Builder.Message#encode64\r\n                 * @function\r\n                 * @return {string} Base64 encoded string\r\n                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later\r\n                 *  still returns the encoded base64 string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encode64 = function() {\r\n                    try {\r\n                        return this.encode().toBase64();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toBase64();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as a base64 encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encode64}.\r\n                 * @name ProtoBuf.Builder.Message#toBase64\r\n                 * @function\r\n                 * @return {string} Base64 encoded string\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded base64 string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toBase64 = MessagePrototype.encode64;\r\n\r\n                /**\r\n                 * Directly encodes the message to a hex encoded string.\r\n                 * @name ProtoBuf.Builder.Message#encodeHex\r\n                 * @function\r\n                 * @return {string} Hex encoded string\r\n                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later\r\n                 *  still returns the encoded hex string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeHex = function() {\r\n                    try {\r\n                        return this.encode().toHex();\r\n                    } catch (e) {\r\n                        if (e[\"encoded\"]) e[\"encoded\"] = e[\"encoded\"].toHex();\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Returns the message as a hex encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encodeHex}.\r\n                 * @name ProtoBuf.Builder.Message#toHex\r\n                 * @function\r\n                 * @return {string} Hex encoded string\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded hex string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toHex = MessagePrototype.encodeHex;\r\n\r\n                /**\r\n                 * Clones a message object or field value to a raw object.\r\n                 * @param {*} obj Object to clone\r\n                 * @param {boolean} binaryAsBase64 Whether to include binary data as base64 strings or as a buffer otherwise\r\n                 * @param {boolean} longsAsStrings Whether to encode longs as strings\r\n                 * @param {!ProtoBuf.Reflect.T=} resolvedType The resolved field type if a field\r\n                 * @returns {*} Cloned object\r\n                 * @inner\r\n                 */\r\n                function cloneRaw(obj, binaryAsBase64, longsAsStrings, resolvedType) {\r\n                    if (obj === null || typeof obj !== 'object') {\r\n                        // Convert enum values to their respective names\r\n                        if (resolvedType && resolvedType instanceof ProtoBuf.Reflect.Enum) {\r\n                            var name = ProtoBuf.Reflect.Enum.getName(resolvedType.object, obj);\r\n                            if (name !== null)\r\n                                return name;\r\n                        }\r\n                        // Pass-through string, number, boolean, null...\r\n                        return obj;\r\n                    }\r\n                    // Convert ByteBuffers to raw buffer or strings\r\n                    if (ByteBuffer.isByteBuffer(obj))\r\n                        return binaryAsBase64 ? obj.toBase64() : obj.toBuffer();\r\n                    // Convert Longs to proper objects or strings\r\n                    if (ProtoBuf.Long.isLong(obj))\r\n                        return longsAsStrings ? obj.toString() : ProtoBuf.Long.fromValue(obj);\r\n                    var clone;\r\n                    // Clone arrays\r\n                    if (Array.isArray(obj)) {\r\n                        clone = [];\r\n                        obj.forEach(function(v, k) {\r\n                            clone[k] = cloneRaw(v, binaryAsBase64, longsAsStrings, resolvedType);\r\n                        });\r\n                        return clone;\r\n                    }\r\n                    clone = {};\r\n                    // Convert maps to objects\r\n                    if (obj instanceof ProtoBuf.Map) {\r\n                        var it = obj.entries();\r\n                        for (var e = it.next(); !e.done; e = it.next())\r\n                            clone[obj.keyElem.valueToString(e.value[0])] = cloneRaw(e.value[1], binaryAsBase64, longsAsStrings, obj.valueElem.resolvedType);\r\n                        return clone;\r\n                    }\r\n                    // Everything else is a non-null object\r\n                    var type = obj.$type,\r\n                        field = undefined;\r\n                    for (var i in obj)\r\n                        if (obj.hasOwnProperty(i)) {\r\n                            if (type && (field = type.getChild(i)))\r\n                                clone[i] = cloneRaw(obj[i], binaryAsBase64, longsAsStrings, field.resolvedType);\r\n                            else\r\n                                clone[i] = cloneRaw(obj[i], binaryAsBase64, longsAsStrings);\r\n                        }\r\n                    return clone;\r\n                }\r\n\r\n                /**\r\n                 * Returns the message's raw payload.\r\n                 * @param {boolean=} binaryAsBase64 Whether to include binary data as base64 strings instead of Buffers, defaults to `false`\r\n                 * @param {boolean} longsAsStrings Whether to encode longs as strings\r\n                 * @returns {Object.<string,*>} Raw payload\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toRaw = function(binaryAsBase64, longsAsStrings) {\r\n                    return cloneRaw(this, !!binaryAsBase64, !!longsAsStrings, this.$type);\r\n                };\r\n\r\n                /**\r\n                 * Encodes a message to JSON.\r\n                 * @returns {string} JSON string\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.encodeJSON = function() {\r\n                    return JSON.stringify(\r\n                        cloneRaw(this,\r\n                             /* binary-as-base64 */ true,\r\n                             /* longs-as-strings */ true,\r\n                             this.$type\r\n                        )\r\n                    );\r\n                };\r\n\r\n                /**\r\n                 * Decodes a message from the specified buffer or string.\r\n                 * @name ProtoBuf.Builder.Message.decode\r\n                 * @function\r\n                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from\r\n                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 * @see ProtoBuf.Builder.Message.decode64\r\n                 * @see ProtoBuf.Builder.Message.decodeHex\r\n                 */\r\n                Message.decode = function(buffer, enc) {\r\n                    if (typeof buffer === 'string')\r\n                        buffer = ByteBuffer.wrap(buffer, enc ? enc : \"base64\");\r\n                    buffer = ByteBuffer.isByteBuffer(buffer) ? buffer : ByteBuffer.wrap(buffer); // May throw\r\n                    var le = buffer.littleEndian;\r\n                    try {\r\n                        var msg = T.decode(buffer.LE());\r\n                        buffer.LE(le);\r\n                        return msg;\r\n                    } catch (e) {\r\n                        buffer.LE(le);\r\n                        throw(e);\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Decodes a varint32 length-delimited message from the specified buffer or string.\r\n                 * @name ProtoBuf.Builder.Message.decodeDelimited\r\n                 * @function\r\n                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from\r\n                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64\r\n                 * @return {ProtoBuf.Builder.Message} Decoded message or `null` if not enough bytes are available yet\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                Message.decodeDelimited = function(buffer, enc) {\r\n                    if (typeof buffer === 'string')\r\n                        buffer = ByteBuffer.wrap(buffer, enc ? enc : \"base64\");\r\n                    buffer = ByteBuffer.isByteBuffer(buffer) ? buffer : ByteBuffer.wrap(buffer); // May throw\r\n                    if (buffer.remaining() < 1)\r\n                        return null;\r\n                    var off = buffer.offset,\r\n                        len = buffer.readVarint32();\r\n                    if (buffer.remaining() < len) {\r\n                        buffer.offset = off;\r\n                        return null;\r\n                    }\r\n                    try {\r\n                        var msg = T.decode(buffer.slice(buffer.offset, buffer.offset + len).LE());\r\n                        buffer.offset += len;\r\n                        return msg;\r\n                    } catch (err) {\r\n                        buffer.offset += len;\r\n                        throw err;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Decodes the message from the specified base64 encoded string.\r\n                 * @name ProtoBuf.Builder.Message.decode64\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                Message.decode64 = function(str) {\r\n                    return Message.decode(str, \"base64\");\r\n                };\r\n\r\n                /**\r\n                 * Decodes the message from the specified hex encoded string.\r\n                 * @name ProtoBuf.Builder.Message.decodeHex\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */\r\n                Message.decodeHex = function(str) {\r\n                    return Message.decode(str, \"hex\");\r\n                };\r\n\r\n                /**\r\n                 * Decodes the message from a JSON string.\r\n                 * @name ProtoBuf.Builder.Message.decodeJSON\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are\r\n                 * missing.\r\n                 * @expose\r\n                 */\r\n                Message.decodeJSON = function(str) {\r\n                    return new Message(JSON.parse(str));\r\n                };\r\n\r\n                // Utility\r\n\r\n                /**\r\n                 * Returns a string representation of this Message.\r\n                 * @name ProtoBuf.Builder.Message#toString\r\n                 * @function\r\n                 * @return {string} String representation as of \".Fully.Qualified.MessageName\"\r\n                 * @expose\r\n                 */\r\n                MessagePrototype.toString = function() {\r\n                    return T.toString();\r\n                };\r\n\r\n                // Properties\r\n\r\n                /**\r\n                 * Message options.\r\n                 * @name ProtoBuf.Builder.Message.$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $optionsS; // cc needs this\r\n\r\n                /**\r\n                 * Message options.\r\n                 * @name ProtoBuf.Builder.Message#$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $options;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Message.$type\r\n                 * @type {!ProtoBuf.Reflect.Message}\r\n                 * @expose\r\n                 */\r\n                var $typeS;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Message#$type\r\n                 * @type {!ProtoBuf.Reflect.Message}\r\n                 * @expose\r\n                 */\r\n                var $type;\r\n\r\n                if (Object.defineProperty)\r\n                    Object.defineProperty(Message, '$options', { \"value\": T.buildOpt() }),\r\n                    Object.defineProperty(MessagePrototype, \"$options\", { \"value\": Message[\"$options\"] }),\r\n                    Object.defineProperty(Message, \"$type\", { \"value\": T }),\r\n                    Object.defineProperty(MessagePrototype, \"$type\", { \"value\": T });\r\n\r\n                return Message;\r\n\r\n            })(ProtoBuf, this);\r\n\r\n            // Static enums and prototyped sub-messages / cached collections\r\n            this._fields = [];\r\n            this._fieldsById = {};\r\n            this._fieldsByName = {};\r\n            for (var i=0, k=this.children.length, child; i<k; i++) {\r\n                child = this.children[i];\r\n                if (child instanceof Enum || child instanceof Message || child instanceof Service) {\r\n                    if (clazz.hasOwnProperty(child.name))\r\n                        throw Error(\"Illegal reflect child of \"+this.toString(true)+\": \"+child.toString(true)+\" cannot override static property '\"+child.name+\"'\");\r\n                    clazz[child.name] = child.build();\r\n                } else if (child instanceof Message.Field)\r\n                    child.build(),\r\n                    this._fields.push(child),\r\n                    this._fieldsById[child.id] = child,\r\n                    this._fieldsByName[child.name] = child;\r\n                else if (!(child instanceof Message.OneOf) && !(child instanceof Extension)) // Not built\r\n                    throw Error(\"Illegal reflect child of \"+this.toString(true)+\": \"+this.children[i].toString(true));\r\n            }\r\n\r\n            return this.clazz = clazz;\r\n        };\r\n\r\n        /**\r\n         * Encodes a runtime message's contents to the specified buffer.\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode\r\n         * @param {ByteBuffer} buffer ByteBuffer to write to\r\n         * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If required fields are missing or the message cannot be encoded for another reason\r\n         * @expose\r\n         */\r\n        MessagePrototype.encode = function(message, buffer, noVerify) {\r\n            var fieldMissing = null,\r\n                field;\r\n            for (var i=0, k=this._fields.length, val; i<k; ++i) {\r\n                field = this._fields[i];\r\n                val = message[field.name];\r\n                if (field.required && val === null) {\r\n                    if (fieldMissing === null)\r\n                        fieldMissing = field;\r\n                } else\r\n                    field.encode(noVerify ? val : field.verifyValue(val), buffer, message);\r\n            }\r\n            if (fieldMissing !== null) {\r\n                var err = Error(\"Missing at least one required field for \"+this.toString(true)+\": \"+fieldMissing);\r\n                err[\"encoded\"] = buffer; // Still expose what we got\r\n                throw(err);\r\n            }\r\n            return buffer;\r\n        };\r\n\r\n        /**\r\n         * Calculates a runtime message's byte length.\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode\r\n         * @returns {number} Byte length\r\n         * @throws {Error} If required fields are missing or the message cannot be calculated for another reason\r\n         * @expose\r\n         */\r\n        MessagePrototype.calculate = function(message) {\r\n            for (var n=0, i=0, k=this._fields.length, field, val; i<k; ++i) {\r\n                field = this._fields[i];\r\n                val = message[field.name];\r\n                if (field.required && val === null)\r\n                   throw Error(\"Missing at least one required field for \"+this.toString(true)+\": \"+field);\r\n                else\r\n                    n += field.calculate(val, message);\r\n            }\r\n            return n;\r\n        };\r\n\r\n        /**\r\n         * Skips all data until the end of the specified group has been reached.\r\n         * @param {number} expectedId Expected GROUPEND id\r\n         * @param {!ByteBuffer} buf ByteBuffer\r\n         * @returns {boolean} `true` if a value as been skipped, `false` if the end has been reached\r\n         * @throws {Error} If it wasn't possible to find the end of the group (buffer overrun or end tag mismatch)\r\n         * @inner\r\n         */\r\n        function skipTillGroupEnd(expectedId, buf) {\r\n            var tag = buf.readVarint32(), // Throws on OOB\r\n                wireType = tag & 0x07,\r\n                id = tag >>> 3;\r\n            switch (wireType) {\r\n                case ProtoBuf.WIRE_TYPES.VARINT:\r\n                    do tag = buf.readUint8();\r\n                    while ((tag & 0x80) === 0x80);\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.BITS64:\r\n                    buf.offset += 8;\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.LDELIM:\r\n                    tag = buf.readVarint32(); // reads the varint\r\n                    buf.offset += tag;        // skips n bytes\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.STARTGROUP:\r\n                    skipTillGroupEnd(id, buf);\r\n                    break;\r\n                case ProtoBuf.WIRE_TYPES.ENDGROUP:\r\n                    if (id === expectedId)\r\n                        return false;\r\n                    else\r\n                        throw Error(\"Illegal GROUPEND after unknown group: \"+id+\" (\"+expectedId+\" expected)\");\r\n                case ProtoBuf.WIRE_TYPES.BITS32:\r\n                    buf.offset += 4;\r\n                    break;\r\n                default:\r\n                    throw Error(\"Illegal wire type in unknown group \"+expectedId+\": \"+wireType);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * Decodes an encoded message and returns the decoded message.\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {number=} length Message length. Defaults to decode all the available data.\r\n         * @param {number=} expectedGroupEndId Expected GROUPEND id if this is a legacy group\r\n         * @return {ProtoBuf.Builder.Message} Decoded message\r\n         * @throws {Error} If the message cannot be decoded\r\n         * @expose\r\n         */\r\n        MessagePrototype.decode = function(buffer, length, expectedGroupEndId) {\r\n            length = typeof length === 'number' ? length : -1;\r\n            var start = buffer.offset,\r\n                msg = new (this.clazz)(),\r\n                tag, wireType, id, field;\r\n            while (buffer.offset < start+length || (length === -1 && buffer.remaining() > 0)) {\r\n                tag = buffer.readVarint32();\r\n                wireType = tag & 0x07;\r\n                id = tag >>> 3;\r\n                if (wireType === ProtoBuf.WIRE_TYPES.ENDGROUP) {\r\n                    if (id !== expectedGroupEndId)\r\n                        throw Error(\"Illegal group end indicator for \"+this.toString(true)+\": \"+id+\" (\"+(expectedGroupEndId ? expectedGroupEndId+\" expected\" : \"not a group\")+\")\");\r\n                    break;\r\n                }\r\n                if (!(field = this._fieldsById[id])) {\r\n                    // \"messages created by your new code can be parsed by your old code: old binaries simply ignore the new field when parsing.\"\r\n                    switch (wireType) {\r\n                        case ProtoBuf.WIRE_TYPES.VARINT:\r\n                            buffer.readVarint32();\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.BITS32:\r\n                            buffer.offset += 4;\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.BITS64:\r\n                            buffer.offset += 8;\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.LDELIM:\r\n                            var len = buffer.readVarint32();\r\n                            buffer.offset += len;\r\n                            break;\r\n                        case ProtoBuf.WIRE_TYPES.STARTGROUP:\r\n                            while (skipTillGroupEnd(id, buffer)) {}\r\n                            break;\r\n                        default:\r\n                            throw Error(\"Illegal wire type for unknown field \"+id+\" in \"+this.toString(true)+\"#decode: \"+wireType);\r\n                    }\r\n                    continue;\r\n                }\r\n                if (field.repeated && !field.options[\"packed\"]) {\r\n                    msg[field.name].push(field.decode(wireType, buffer));\r\n                } else if (field.map) {\r\n                    var keyval = field.decode(wireType, buffer);\r\n                    msg[field.name].set(keyval[0], keyval[1]);\r\n                } else {\r\n                    msg[field.name] = field.decode(wireType, buffer);\r\n                    if (field.oneof) { // Field is part of an OneOf (not a virtual OneOf field)\r\n                        var currentField = msg[field.oneof.name]; // Virtual field references currently set field\r\n                        if (currentField !== null && currentField !== field.name)\r\n                            msg[currentField] = null; // Clear currently set field\r\n                        msg[field.oneof.name] = field.name; // Point virtual field at this field\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check if all required fields are present and set default values for optional fields that are not\r\n            for (var i=0, k=this._fields.length; i<k; ++i) {\r\n                field = this._fields[i];\r\n                if (msg[field.name] === null) {\r\n                    if (this.syntax === \"proto3\") { // Proto3 sets default values by specification\r\n                        msg[field.name] = field.defaultValue;\r\n                    } else if (field.required) {\r\n                        var err = Error(\"Missing at least one required field for \" + this.toString(true) + \": \" + field.name);\r\n                        err[\"decoded\"] = msg; // Still expose what we got\r\n                        throw(err);\r\n                    } else if (ProtoBuf.populateDefaults && field.defaultValue !== null)\r\n                        msg[field.name] = field.defaultValue;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message\r\n         * @expose\r\n         */\r\n        Reflect.Message = Message;\r\n\r\n        /**\r\n         * Constructs a new Message Field.\r\n         * @exports ProtoBuf.Reflect.Message.Field\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} rule Rule, one of requried, optional, repeated\r\n         * @param {string?} keytype Key data type, if any.\r\n         * @param {string} type Data type, e.g. int32\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @param {Object.<string,*>=} options Options\r\n         * @param {!ProtoBuf.Reflect.Message.OneOf=} oneof Enclosing OneOf\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Field = function(builder, message, rule, keytype, type, name, id, options, oneof, syntax) {\r\n            T.call(this, builder, message, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Message.Field\";\r\n\r\n            /**\r\n             * Message field required flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.required = rule === \"required\";\r\n\r\n            /**\r\n             * Message field repeated flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.repeated = rule === \"repeated\";\r\n\r\n            /**\r\n             * Message field map flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.map = rule === \"map\";\r\n\r\n            /**\r\n             * Message field key type. Type reference string if unresolved, protobuf\r\n             * type if resolved. Valid only if this.map === true, null otherwise.\r\n             * @type {string|{name: string, wireType: number}|null}\r\n             * @expose\r\n             */\r\n            this.keyType = keytype || null;\r\n\r\n            /**\r\n             * Message field type. Type reference string if unresolved, protobuf type if\r\n             * resolved. In a map field, this is the value type.\r\n             * @type {string|{name: string, wireType: number}}\r\n             * @expose\r\n             */\r\n            this.type = type;\r\n\r\n            /**\r\n             * Resolved type reference inside the global namespace.\r\n             * @type {ProtoBuf.Reflect.T|null}\r\n             * @expose\r\n             */\r\n            this.resolvedType = null;\r\n\r\n            /**\r\n             * Unique message field id.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.id = id;\r\n\r\n            /**\r\n             * Message field options.\r\n             * @type {!Object.<string,*>}\r\n             * @dict\r\n             * @expose\r\n             */\r\n            this.options = options || {};\r\n\r\n            /**\r\n             * Default value.\r\n             * @type {*}\r\n             * @expose\r\n             */\r\n            this.defaultValue = null;\r\n\r\n            /**\r\n             * Enclosing OneOf.\r\n             * @type {?ProtoBuf.Reflect.Message.OneOf}\r\n             * @expose\r\n             */\r\n            this.oneof = oneof || null;\r\n\r\n            /**\r\n             * Syntax level of this definition (e.g., proto3).\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.syntax = syntax || 'proto2';\r\n\r\n            /**\r\n             * Original field name.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.originalName = this.name; // Used to revert camelcase transformation on naming collisions\r\n\r\n            /**\r\n             * Element implementation. Created in build() after types are resolved.\r\n             * @type {ProtoBuf.Element}\r\n             * @expose\r\n             */\r\n            this.element = null;\r\n\r\n            /**\r\n             * Key element implementation, for map fields. Created in build() after\r\n             * types are resolved.\r\n             * @type {ProtoBuf.Element}\r\n             * @expose\r\n             */\r\n            this.keyElement = null;\r\n\r\n            // Convert field names to camel case notation if the override is set\r\n            if (this.builder.options['convertFieldsToCamelCase'] && !(this instanceof Message.ExtensionField))\r\n                this.name = ProtoBuf.Util.toCamelCase(this.name);\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.Field.prototype\r\n         * @inner\r\n         */\r\n        var FieldPrototype = Field.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * Builds the field.\r\n         * @override\r\n         * @expose\r\n         */\r\n        FieldPrototype.build = function() {\r\n            this.element = new Element(this.type, this.resolvedType, false, this.syntax);\r\n            if (this.map)\r\n                this.keyElement = new Element(this.keyType, undefined, true, this.syntax);\r\n\r\n            // In proto3, fields do not have field presence, and every field is set to\r\n            // its type's default value (\"\", 0, 0.0, or false).\r\n            if (this.syntax === 'proto3' && !this.repeated && !this.map)\r\n                this.defaultValue = Element.defaultFieldValue(this.type);\r\n\r\n            // Otherwise, default values are present when explicitly specified\r\n            else if (typeof this.options['default'] !== 'undefined')\r\n                this.defaultValue = this.verifyValue(this.options['default']);\r\n        };\r\n\r\n        /**\r\n         * Checks if the given value can be set for this field.\r\n         * @param {*} value Value to check\r\n         * @param {boolean=} skipRepeated Whether to skip the repeated value check or not. Defaults to false.\r\n         * @return {*} Verified, maybe adjusted, value\r\n         * @throws {Error} If the value cannot be set for this field\r\n         * @expose\r\n         */\r\n        FieldPrototype.verifyValue = function(value, skipRepeated) {\r\n            skipRepeated = skipRepeated || false;\r\n            var fail = function(val, msg) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\" of type \"+this.type.name+\": \"+val+\" (\"+msg+\")\");\r\n            }.bind(this);\r\n            if (value === null) { // NULL values for optional fields\r\n                if (this.required)\r\n                    fail(typeof value, \"required\");\r\n                if (this.syntax === 'proto3' && this.type !== ProtoBuf.TYPES[\"message\"])\r\n                    fail(typeof value, \"proto3 field without field presence cannot be null\");\r\n                return null;\r\n            }\r\n            var i;\r\n            if (this.repeated && !skipRepeated) { // Repeated values as arrays\r\n                if (!Array.isArray(value))\r\n                    value = [value];\r\n                var res = [];\r\n                for (i=0; i<value.length; i++)\r\n                    res.push(this.element.verifyValue(value[i]));\r\n                return res;\r\n            }\r\n            if (this.map && !skipRepeated) { // Map values as objects\r\n                if (!(value instanceof ProtoBuf.Map)) {\r\n                    // If not already a Map, attempt to convert.\r\n                    if (!(value instanceof Object)) {\r\n                        fail(typeof value,\r\n                             \"expected ProtoBuf.Map or raw object for map field\");\r\n                    }\r\n                    return new ProtoBuf.Map(this, value);\r\n                } else {\r\n                    return value;\r\n                }\r\n            }\r\n            // All non-repeated fields expect no array\r\n            if (!this.repeated && Array.isArray(value))\r\n                fail(typeof value, \"no array expected\");\r\n\r\n            return this.element.verifyValue(value);\r\n        };\r\n\r\n        /**\r\n         * Determines whether the field will have a presence on the wire given its\r\n         * value.\r\n         * @param {*} value Verified field value\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @return {boolean} Whether the field will be present on the wire\r\n         */\r\n        FieldPrototype.hasWirePresence = function(value, message) {\r\n            if (this.syntax !== 'proto3')\r\n                return (value !== null);\r\n            if (this.oneof && message[this.oneof.name] === this.name)\r\n                return true;\r\n            switch (this.type) {\r\n                case ProtoBuf.TYPES[\"int32\"]:\r\n                case ProtoBuf.TYPES[\"sint32\"]:\r\n                case ProtoBuf.TYPES[\"sfixed32\"]:\r\n                case ProtoBuf.TYPES[\"uint32\"]:\r\n                case ProtoBuf.TYPES[\"fixed32\"]:\r\n                    return value !== 0;\r\n\r\n                case ProtoBuf.TYPES[\"int64\"]:\r\n                case ProtoBuf.TYPES[\"sint64\"]:\r\n                case ProtoBuf.TYPES[\"sfixed64\"]:\r\n                case ProtoBuf.TYPES[\"uint64\"]:\r\n                case ProtoBuf.TYPES[\"fixed64\"]:\r\n                    return value.low !== 0 || value.high !== 0;\r\n\r\n                case ProtoBuf.TYPES[\"bool\"]:\r\n                    return value;\r\n\r\n                case ProtoBuf.TYPES[\"float\"]:\r\n                case ProtoBuf.TYPES[\"double\"]:\r\n                    return value !== 0.0;\r\n\r\n                case ProtoBuf.TYPES[\"string\"]:\r\n                    return value.length > 0;\r\n\r\n                case ProtoBuf.TYPES[\"bytes\"]:\r\n                    return value.remaining() > 0;\r\n\r\n                case ProtoBuf.TYPES[\"enum\"]:\r\n                    return value !== 0;\r\n\r\n                case ProtoBuf.TYPES[\"message\"]:\r\n                    return value !== null;\r\n                default:\r\n                    return true;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified field value to the specified buffer.\r\n         * @param {*} value Verified field value\r\n         * @param {ByteBuffer} buffer ByteBuffer to encode to\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If the field cannot be encoded\r\n         * @expose\r\n         */\r\n        FieldPrototype.encode = function(value, buffer, message) {\r\n            if (this.type === null || typeof this.type !== 'object')\r\n                throw Error(\"[INTERNAL] Unresolved type in \"+this.toString(true)+\": \"+this.type);\r\n            if (value === null || (this.repeated && value.length == 0))\r\n                return buffer; // Optional omitted\r\n            try {\r\n                if (this.repeated) {\r\n                    var i;\r\n                    // \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire\r\n                    // types) can be declared 'packed'.\"\r\n                    if (this.options[\"packed\"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {\r\n                        // \"All of the elements of the field are packed into a single key-value pair with wire type 2\r\n                        // (length-delimited). Each element is encoded the same way it would be normally, except without a\r\n                        // tag preceding it.\"\r\n                        buffer.writeVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        buffer.ensureCapacity(buffer.offset += 1); // We do not know the length yet, so let's assume a varint of length 1\r\n                        var start = buffer.offset; // Remember where the contents begin\r\n                        for (i=0; i<value.length; i++)\r\n                            this.element.encodeValue(this.id, value[i], buffer);\r\n                        var len = buffer.offset-start,\r\n                            varintLen = ByteBuffer.calculateVarint32(len);\r\n                        if (varintLen > 1) { // We need to move the contents\r\n                            var contents = buffer.slice(start, buffer.offset);\r\n                            start += varintLen-1;\r\n                            buffer.offset = start;\r\n                            buffer.append(contents);\r\n                        }\r\n                        buffer.writeVarint32(len, start-varintLen);\r\n                    } else {\r\n                        // \"If your message definition has repeated elements (without the [packed=true] option), the encoded\r\n                        // message has zero or more key-value pairs with the same tag number\"\r\n                        for (i=0; i<value.length; i++)\r\n                            buffer.writeVarint32((this.id << 3) | this.type.wireType),\r\n                            this.element.encodeValue(this.id, value[i], buffer);\r\n                    }\r\n                } else if (this.map) {\r\n                    // Write out each map entry as a submessage.\r\n                    value.forEach(function(val, key, m) {\r\n                        // Compute the length of the submessage (key, val) pair.\r\n                        var length =\r\n                            ByteBuffer.calculateVarint32((1 << 3) | this.keyType.wireType) +\r\n                            this.keyElement.calculateLength(1, key) +\r\n                            ByteBuffer.calculateVarint32((2 << 3) | this.type.wireType) +\r\n                            this.element.calculateLength(2, val);\r\n\r\n                        // Submessage with wire type of length-delimited.\r\n                        buffer.writeVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        buffer.writeVarint32(length);\r\n\r\n                        // Write out the key and val.\r\n                        buffer.writeVarint32((1 << 3) | this.keyType.wireType);\r\n                        this.keyElement.encodeValue(1, key, buffer);\r\n                        buffer.writeVarint32((2 << 3) | this.type.wireType);\r\n                        this.element.encodeValue(2, val, buffer);\r\n                    }, this);\r\n                } else {\r\n                    if (this.hasWirePresence(value, message)) {\r\n                        buffer.writeVarint32((this.id << 3) | this.type.wireType);\r\n                        this.element.encodeValue(this.id, value, buffer);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value+\" (\"+e+\")\");\r\n            }\r\n            return buffer;\r\n        };\r\n\r\n        /**\r\n         * Calculates the length of this field's value on the network level.\r\n         * @param {*} value Field value\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @returns {number} Byte length\r\n         * @expose\r\n         */\r\n        FieldPrototype.calculate = function(value, message) {\r\n            value = this.verifyValue(value); // May throw\r\n            if (this.type === null || typeof this.type !== 'object')\r\n                throw Error(\"[INTERNAL] Unresolved type in \"+this.toString(true)+\": \"+this.type);\r\n            if (value === null || (this.repeated && value.length == 0))\r\n                return 0; // Optional omitted\r\n            var n = 0;\r\n            try {\r\n                if (this.repeated) {\r\n                    var i, ni;\r\n                    if (this.options[\"packed\"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {\r\n                        n += ByteBuffer.calculateVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        ni = 0;\r\n                        for (i=0; i<value.length; i++)\r\n                            ni += this.element.calculateLength(this.id, value[i]);\r\n                        n += ByteBuffer.calculateVarint32(ni);\r\n                        n += ni;\r\n                    } else {\r\n                        for (i=0; i<value.length; i++)\r\n                            n += ByteBuffer.calculateVarint32((this.id << 3) | this.type.wireType),\r\n                            n += this.element.calculateLength(this.id, value[i]);\r\n                    }\r\n                } else if (this.map) {\r\n                    // Each map entry becomes a submessage.\r\n                    value.forEach(function(val, key, m) {\r\n                        // Compute the length of the submessage (key, val) pair.\r\n                        var length =\r\n                            ByteBuffer.calculateVarint32((1 << 3) | this.keyType.wireType) +\r\n                            this.keyElement.calculateLength(1, key) +\r\n                            ByteBuffer.calculateVarint32((2 << 3) | this.type.wireType) +\r\n                            this.element.calculateLength(2, val);\r\n\r\n                        n += ByteBuffer.calculateVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);\r\n                        n += ByteBuffer.calculateVarint32(length);\r\n                        n += length;\r\n                    }, this);\r\n                } else {\r\n                    if (this.hasWirePresence(value, message)) {\r\n                        n += ByteBuffer.calculateVarint32((this.id << 3) | this.type.wireType);\r\n                        n += this.element.calculateLength(this.id, value);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value+\" (\"+e+\")\");\r\n            }\r\n            return n;\r\n        };\r\n\r\n        /**\r\n         * Decode the field value from the specified buffer.\r\n         * @param {number} wireType Leading wire type\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {boolean=} skipRepeated Whether to skip the repeated check or not. Defaults to false.\r\n         * @return {*} Decoded value: array for packed repeated fields, [key, value] for\r\n         *             map fields, or an individual value otherwise.\r\n         * @throws {Error} If the field cannot be decoded\r\n         * @expose\r\n         */\r\n        FieldPrototype.decode = function(wireType, buffer, skipRepeated) {\r\n            var value, nBytes;\r\n\r\n            // We expect wireType to match the underlying type's wireType unless we see\r\n            // a packed repeated field, or unless this is a map field.\r\n            var wireTypeOK =\r\n                (!this.map && wireType == this.type.wireType) ||\r\n                (!skipRepeated && this.repeated && this.options[\"packed\"] &&\r\n                 wireType == ProtoBuf.WIRE_TYPES.LDELIM) ||\r\n                (this.map && wireType == ProtoBuf.WIRE_TYPES.LDELIM);\r\n            if (!wireTypeOK)\r\n                throw Error(\"Illegal wire type for field \"+this.toString(true)+\": \"+wireType+\" (\"+this.type.wireType+\" expected)\");\r\n\r\n            // Handle packed repeated fields.\r\n            if (wireType == ProtoBuf.WIRE_TYPES.LDELIM && this.repeated && this.options[\"packed\"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {\r\n                if (!skipRepeated) {\r\n                    nBytes = buffer.readVarint32();\r\n                    nBytes = buffer.offset + nBytes; // Limit\r\n                    var values = [];\r\n                    while (buffer.offset < nBytes)\r\n                        values.push(this.decode(this.type.wireType, buffer, true));\r\n                    return values;\r\n                }\r\n                // Read the next value otherwise...\r\n            }\r\n\r\n            // Handle maps.\r\n            if (this.map) {\r\n                // Read one (key, value) submessage, and return [key, value]\r\n                var key = Element.defaultFieldValue(this.keyType);\r\n                value = Element.defaultFieldValue(this.type);\r\n\r\n                // Read the length\r\n                nBytes = buffer.readVarint32();\r\n                if (buffer.remaining() < nBytes)\r\n                    throw Error(\"Illegal number of bytes for \"+this.toString(true)+\": \"+nBytes+\" required but got only \"+buffer.remaining());\r\n\r\n                // Get a sub-buffer of this key/value submessage\r\n                var msgbuf = buffer.clone();\r\n                msgbuf.limit = msgbuf.offset + nBytes;\r\n                buffer.offset += nBytes;\r\n\r\n                while (msgbuf.remaining() > 0) {\r\n                    var tag = msgbuf.readVarint32();\r\n                    wireType = tag & 0x07;\r\n                    var id = tag >>> 3;\r\n                    if (id === 1) {\r\n                        key = this.keyElement.decode(msgbuf, wireType, id);\r\n                    } else if (id === 2) {\r\n                        value = this.element.decode(msgbuf, wireType, id);\r\n                    } else {\r\n                        throw Error(\"Unexpected tag in map field key/value submessage\");\r\n                    }\r\n                }\r\n\r\n                return [key, value];\r\n            }\r\n\r\n            // Handle singular and non-packed repeated field values.\r\n            return this.element.decode(buffer, wireType, this.id);\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.Field\r\n         * @expose\r\n         */\r\n        Reflect.Message.Field = Field;\r\n\r\n        /**\r\n         * Constructs a new Message ExtensionField.\r\n         * @exports ProtoBuf.Reflect.Message.ExtensionField\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} rule Rule, one of requried, optional, repeated\r\n         * @param {string} type Data type, e.g. int32\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @param {!Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Message.Field\r\n         */\r\n        var ExtensionField = function(builder, message, rule, type, name, id, options) {\r\n            Field.call(this, builder, message, rule, /* keytype = */ null, type, name, id, options);\r\n\r\n            /**\r\n             * Extension reference.\r\n             * @type {!ProtoBuf.Reflect.Extension}\r\n             * @expose\r\n             */\r\n            this.extension;\r\n        };\r\n\r\n        // Extends Field\r\n        ExtensionField.prototype = Object.create(Field.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.ExtensionField\r\n         * @expose\r\n         */\r\n        Reflect.Message.ExtensionField = ExtensionField;\r\n\r\n        /**\r\n         * Constructs a new Message OneOf.\r\n         * @exports ProtoBuf.Reflect.Message.OneOf\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} name OneOf name\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var OneOf = function(builder, message, name) {\r\n            T.call(this, builder, message, name);\r\n\r\n            /**\r\n             * Enclosed fields.\r\n             * @type {!Array.<!ProtoBuf.Reflect.Message.Field>}\r\n             * @expose\r\n             */\r\n            this.fields = [];\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Message.OneOf\r\n         * @expose\r\n         */\r\n        Reflect.Message.OneOf = OneOf;\r\n\r\n        /**\r\n         * Constructs a new Enum.\r\n         * @exports ProtoBuf.Reflect.Enum\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.T} parent Parent Reflect object\r\n         * @param {string} name Enum name\r\n         * @param {Object.<string,*>=} options Enum options\r\n         * @param {string?} syntax The syntax level (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */\r\n        var Enum = function(builder, parent, name, options, syntax) {\r\n            Namespace.call(this, builder, parent, name, options, syntax);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Enum\";\r\n\r\n            /**\r\n             * Runtime enum object.\r\n             * @type {Object.<string,number>|null}\r\n             * @expose\r\n             */\r\n            this.object = null;\r\n        };\r\n\r\n        /**\r\n         * Gets the string name of an enum value.\r\n         * @param {!ProtoBuf.Builder.Enum} enm Runtime enum\r\n         * @param {number} value Enum value\r\n         * @returns {?string} Name or `null` if not present\r\n         * @expose\r\n         */\r\n        Enum.getName = function(enm, value) {\r\n            var keys = Object.keys(enm);\r\n            for (var i=0, key; i<keys.length; ++i)\r\n                if (enm[key = keys[i]] === value)\r\n                    return key;\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Enum.prototype\r\n         * @inner\r\n         */\r\n        var EnumPrototype = Enum.prototype = Object.create(Namespace.prototype);\r\n\r\n        /**\r\n         * Builds this enum and returns the runtime counterpart.\r\n         * @param {boolean} rebuild Whether to rebuild or not, defaults to false\r\n         * @returns {!Object.<string,number>}\r\n         * @expose\r\n         */\r\n        EnumPrototype.build = function(rebuild) {\r\n            if (this.object && !rebuild)\r\n                return this.object;\r\n            var enm = new ProtoBuf.Builder.Enum(),\r\n                values = this.getChildren(Enum.Value);\r\n            for (var i=0, k=values.length; i<k; ++i)\r\n                enm[values[i]['name']] = values[i]['id'];\r\n            if (Object.defineProperty)\r\n                Object.defineProperty(enm, '$options', {\r\n                    \"value\": this.buildOpt(),\r\n                    \"enumerable\": false\r\n                });\r\n            return this.object = enm;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Enum\r\n         * @expose\r\n         */\r\n        Reflect.Enum = Enum;\r\n\r\n        /**\r\n         * Constructs a new Enum Value.\r\n         * @exports ProtoBuf.Reflect.Enum.Value\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Enum} enm Enum reference\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Value = function(builder, enm, name, id) {\r\n            T.call(this, builder, enm, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Enum.Value\";\r\n\r\n            /**\r\n             * Unique enum value id.\r\n             * @type {number}\r\n             * @expose\r\n             */\r\n            this.id = id;\r\n        };\r\n\r\n        // Extends T\r\n        Value.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Enum.Value\r\n         * @expose\r\n         */\r\n        Reflect.Enum.Value = Value;\r\n\r\n        /**\r\n         * An extension (field).\r\n         * @exports ProtoBuf.Reflect.Extension\r\n         * @constructor\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.T} parent Parent object\r\n         * @param {string} name Object name\r\n         * @param {!ProtoBuf.Reflect.Message.Field} field Extension field\r\n         */\r\n        var Extension = function(builder, parent, name, field) {\r\n            T.call(this, builder, parent, name);\r\n\r\n            /**\r\n             * Extended message field.\r\n             * @type {!ProtoBuf.Reflect.Message.Field}\r\n             * @expose\r\n             */\r\n            this.field = field;\r\n        };\r\n\r\n        // Extends T\r\n        Extension.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Extension\r\n         * @expose\r\n         */\r\n        Reflect.Extension = Extension;\r\n\r\n        /**\r\n         * Constructs a new Service.\r\n         * @exports ProtoBuf.Reflect.Service\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Namespace} root Root\r\n         * @param {string} name Service name\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */\r\n        var Service = function(builder, root, name, options) {\r\n            Namespace.call(this, builder, root, name, options);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Service\";\r\n\r\n            /**\r\n             * Built runtime service class.\r\n             * @type {?function(new:ProtoBuf.Builder.Service)}\r\n             */\r\n            this.clazz = null;\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.prototype\r\n         * @inner\r\n         */\r\n        var ServicePrototype = Service.prototype = Object.create(Namespace.prototype);\r\n\r\n        /**\r\n         * Builds the service and returns the runtime counterpart, which is a fully functional class.\r\n         * @see ProtoBuf.Builder.Service\r\n         * @param {boolean=} rebuild Whether to rebuild or not\r\n         * @return {Function} Service class\r\n         * @throws {Error} If the message cannot be built\r\n         * @expose\r\n         */\r\n        ServicePrototype.build = function(rebuild) {\r\n            if (this.clazz && !rebuild)\r\n                return this.clazz;\r\n\r\n            // Create the runtime Service class in its own scope\r\n            return this.clazz = (function(ProtoBuf, T) {\r\n\r\n                /**\r\n                 * Constructs a new runtime Service.\r\n                 * @name ProtoBuf.Builder.Service\r\n                 * @param {function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))=} rpcImpl RPC implementation receiving the method name and the message\r\n                 * @class Barebone of all runtime services.\r\n                 * @constructor\r\n                 * @throws {Error} If the service cannot be created\r\n                 */\r\n                var Service = function(rpcImpl) {\r\n                    ProtoBuf.Builder.Service.call(this);\r\n\r\n                    /**\r\n                     * Service implementation.\r\n                     * @name ProtoBuf.Builder.Service#rpcImpl\r\n                     * @type {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))}\r\n                     * @expose\r\n                     */\r\n                    this.rpcImpl = rpcImpl || function(name, msg, callback) {\r\n                        // This is what a user has to implement: A function receiving the method name, the actual message to\r\n                        // send (type checked) and the callback that's either provided with the error as its first\r\n                        // argument or null and the actual response message.\r\n                        setTimeout(callback.bind(this, Error(\"Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services\")), 0); // Must be async!\r\n                    };\r\n                };\r\n\r\n                /**\r\n                 * @alias ProtoBuf.Builder.Service.prototype\r\n                 * @inner\r\n                 */\r\n                var ServicePrototype = Service.prototype = Object.create(ProtoBuf.Builder.Service.prototype);\r\n\r\n                /**\r\n                 * Asynchronously performs an RPC call using the given RPC implementation.\r\n                 * @name ProtoBuf.Builder.Service.[Method]\r\n                 * @function\r\n                 * @param {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))} rpcImpl RPC implementation\r\n                 * @param {ProtoBuf.Builder.Message} req Request\r\n                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving\r\n                 *  the error if any and the response either as a pre-parsed message or as its raw bytes\r\n                 * @abstract\r\n                 */\r\n\r\n                /**\r\n                 * Asynchronously performs an RPC call using the instance's RPC implementation.\r\n                 * @name ProtoBuf.Builder.Service#[Method]\r\n                 * @function\r\n                 * @param {ProtoBuf.Builder.Message} req Request\r\n                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving\r\n                 *  the error if any and the response either as a pre-parsed message or as its raw bytes\r\n                 * @abstract\r\n                 */\r\n\r\n                var rpc = T.getChildren(ProtoBuf.Reflect.Service.RPCMethod);\r\n                for (var i=0; i<rpc.length; i++) {\r\n                    (function(method) {\r\n\r\n                        // service#Method(message, callback)\r\n                        ServicePrototype[method.name] = function(req, callback) {\r\n                            try {\r\n                                try {\r\n                                    // If given as a buffer, decode the request. Will throw a TypeError if not a valid buffer.\r\n                                    req = method.resolvedRequestType.clazz.decode(ByteBuffer.wrap(req));\r\n                                } catch (err) {\r\n                                    if (!(err instanceof TypeError))\r\n                                        throw err;\r\n                                }\r\n                                if (req === null || typeof req !== 'object')\r\n                                    throw Error(\"Illegal arguments\");\r\n                                if (!(req instanceof method.resolvedRequestType.clazz))\r\n                                    req = new method.resolvedRequestType.clazz(req);\r\n                                this.rpcImpl(method.fqn(), req, function(err, res) { // Assumes that this is properly async\r\n                                    if (err) {\r\n                                        callback(err);\r\n                                        return;\r\n                                    }\r\n                                    try { res = method.resolvedResponseType.clazz.decode(res); } catch (notABuffer) {}\r\n                                    if (!res || !(res instanceof method.resolvedResponseType.clazz)) {\r\n                                        callback(Error(\"Illegal response type received in service method \"+ T.name+\"#\"+method.name));\r\n                                        return;\r\n                                    }\r\n                                    callback(null, res);\r\n                                });\r\n                            } catch (err) {\r\n                                setTimeout(callback.bind(this, err), 0);\r\n                            }\r\n                        };\r\n\r\n                        // Service.Method(rpcImpl, message, callback)\r\n                        Service[method.name] = function(rpcImpl, req, callback) {\r\n                            new Service(rpcImpl)[method.name](req, callback);\r\n                        };\r\n\r\n                        if (Object.defineProperty)\r\n                            Object.defineProperty(Service[method.name], \"$options\", { \"value\": method.buildOpt() }),\r\n                            Object.defineProperty(ServicePrototype[method.name], \"$options\", { \"value\": Service[method.name][\"$options\"] });\r\n                    })(rpc[i]);\r\n                }\r\n\r\n                // Properties\r\n\r\n                /**\r\n                 * Service options.\r\n                 * @name ProtoBuf.Builder.Service.$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $optionsS; // cc needs this\r\n\r\n                /**\r\n                 * Service options.\r\n                 * @name ProtoBuf.Builder.Service#$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */\r\n                var $options;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Service.$type\r\n                 * @type {!ProtoBuf.Reflect.Service}\r\n                 * @expose\r\n                 */\r\n                var $typeS;\r\n\r\n                /**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Service#$type\r\n                 * @type {!ProtoBuf.Reflect.Service}\r\n                 * @expose\r\n                 */\r\n                var $type;\r\n\r\n                if (Object.defineProperty)\r\n                    Object.defineProperty(Service, \"$options\", { \"value\": T.buildOpt() }),\r\n                    Object.defineProperty(ServicePrototype, \"$options\", { \"value\": Service[\"$options\"] }),\r\n                    Object.defineProperty(Service, \"$type\", { \"value\": T }),\r\n                    Object.defineProperty(ServicePrototype, \"$type\", { \"value\": T });\r\n\r\n                return Service;\r\n\r\n            })(ProtoBuf, this);\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service\r\n         * @expose\r\n         */\r\n        Reflect.Service = Service;\r\n\r\n        /**\r\n         * Abstract service method.\r\n         * @exports ProtoBuf.Reflect.Service.Method\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Service} svc Service\r\n         * @param {string} name Method name\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */\r\n        var Method = function(builder, svc, name, options) {\r\n            T.call(this, builder, svc, name);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Service.Method\";\r\n\r\n            /**\r\n             * Options.\r\n             * @type {Object.<string, *>}\r\n             * @expose\r\n             */\r\n            this.options = options || {};\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.Method.prototype\r\n         * @inner\r\n         */\r\n        var MethodPrototype = Method.prototype = Object.create(T.prototype);\r\n\r\n        /**\r\n         * Builds the method's '$options' property.\r\n         * @name ProtoBuf.Reflect.Service.Method#buildOpt\r\n         * @function\r\n         * @return {Object.<string,*>}\r\n         */\r\n        MethodPrototype.buildOpt = NamespacePrototype.buildOpt;\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.Method\r\n         * @expose\r\n         */\r\n        Reflect.Service.Method = Method;\r\n\r\n        /**\r\n         * RPC service method.\r\n         * @exports ProtoBuf.Reflect.Service.RPCMethod\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Service} svc Service\r\n         * @param {string} name Method name\r\n         * @param {string} request Request message name\r\n         * @param {string} response Response message name\r\n         * @param {boolean} request_stream Whether requests are streamed\r\n         * @param {boolean} response_stream Whether responses are streamed\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Service.Method\r\n         */\r\n        var RPCMethod = function(builder, svc, name, request, response, request_stream, response_stream, options) {\r\n            Method.call(this, builder, svc, name, options);\r\n\r\n            /**\r\n             * @override\r\n             */\r\n            this.className = \"Service.RPCMethod\";\r\n\r\n            /**\r\n             * Request message name.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.requestName = request;\r\n\r\n            /**\r\n             * Response message name.\r\n             * @type {string}\r\n             * @expose\r\n             */\r\n            this.responseName = response;\r\n\r\n            /**\r\n             * Whether requests are streamed\r\n             * @type {bool}\r\n             * @expose\r\n             */\r\n            this.requestStream = request_stream;\r\n\r\n            /**\r\n             * Whether responses are streamed\r\n             * @type {bool}\r\n             * @expose\r\n             */\r\n            this.responseStream = response_stream;\r\n\r\n            /**\r\n             * Resolved request message type.\r\n             * @type {ProtoBuf.Reflect.Message}\r\n             * @expose\r\n             */\r\n            this.resolvedRequestType = null;\r\n\r\n            /**\r\n             * Resolved response message type.\r\n             * @type {ProtoBuf.Reflect.Message}\r\n             * @expose\r\n             */\r\n            this.resolvedResponseType = null;\r\n        };\r\n\r\n        // Extends Method\r\n        RPCMethod.prototype = Object.create(Method.prototype);\r\n\r\n        /**\r\n         * @alias ProtoBuf.Reflect.Service.RPCMethod\r\n         * @expose\r\n         */\r\n        Reflect.Service.RPCMethod = RPCMethod;\r\n\r\n        return Reflect;\r\n\r\n    })(ProtoBuf);\r\n\r\n    /**\r\n     * @alias ProtoBuf.Builder\r\n     * @expose\r\n     */\r\n    ProtoBuf.Builder = (function(ProtoBuf, Lang, Reflect) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Constructs a new Builder.\r\n         * @exports ProtoBuf.Builder\r\n         * @class Provides the functionality to build protocol messages.\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         */\r\n        var Builder = function(options) {\r\n\r\n            /**\r\n             * Namespace.\r\n             * @type {ProtoBuf.Reflect.Namespace}\r\n             * @expose\r\n             */\r\n            this.ns = new Reflect.Namespace(this, null, \"\"); // Global namespace\r\n\r\n            /**\r\n             * Namespace pointer.\r\n             * @type {ProtoBuf.Reflect.T}\r\n             * @expose\r\n             */\r\n            this.ptr = this.ns;\r\n\r\n            /**\r\n             * Resolved flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */\r\n            this.resolved = false;\r\n\r\n            /**\r\n             * The current building result.\r\n             * @type {Object.<string,ProtoBuf.Builder.Message|Object>|null}\r\n             * @expose\r\n             */\r\n            this.result = null;\r\n\r\n            /**\r\n             * Imported files.\r\n             * @type {Array.<string>}\r\n             * @expose\r\n             */\r\n            this.files = {};\r\n\r\n            /**\r\n             * Import root override.\r\n             * @type {?string}\r\n             * @expose\r\n             */\r\n            this.importRoot = null;\r\n\r\n            /**\r\n             * Options.\r\n             * @type {!Object.<string, *>}\r\n             * @expose\r\n             */\r\n            this.options = options || {};\r\n        };\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.prototype\r\n         * @inner\r\n         */\r\n        var BuilderPrototype = Builder.prototype;\r\n\r\n        // ----- Definition tests -----\r\n\r\n        /**\r\n         * Tests if a definition most likely describes a message.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isMessage = function(def) {\r\n            // Messages require a string name\r\n            if (typeof def[\"name\"] !== 'string')\r\n                return false;\r\n            // Messages do not contain values (enum) or rpc methods (service)\r\n            if (typeof def[\"values\"] !== 'undefined' || typeof def[\"rpc\"] !== 'undefined')\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes a message field.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isMessageField = function(def) {\r\n            // Message fields require a string rule, name and type and an id\r\n            if (typeof def[\"rule\"] !== 'string' || typeof def[\"name\"] !== 'string' || typeof def[\"type\"] !== 'string' || typeof def[\"id\"] === 'undefined')\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes an enum.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isEnum = function(def) {\r\n            // Enums require a string name\r\n            if (typeof def[\"name\"] !== 'string')\r\n                return false;\r\n            // Enums require at least one value\r\n            if (typeof def[\"values\"] === 'undefined' || !Array.isArray(def[\"values\"]) || def[\"values\"].length === 0)\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes a service.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isService = function(def) {\r\n            // Services require a string name and an rpc object\r\n            if (typeof def[\"name\"] !== 'string' || typeof def[\"rpc\"] !== 'object' || !def[\"rpc\"])\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Tests if a definition most likely describes an extended message\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */\r\n        Builder.isExtend = function(def) {\r\n            // Extends rquire a string ref\r\n            if (typeof def[\"ref\"] !== 'string')\r\n                return false;\r\n            return true;\r\n        };\r\n\r\n        // ----- Building -----\r\n\r\n        /**\r\n         * Resets the pointer to the root namespace.\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */\r\n        BuilderPrototype.reset = function() {\r\n            this.ptr = this.ns;\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Defines a namespace on top of the current pointer position and places the pointer on it.\r\n         * @param {string} namespace\r\n         * @return {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */\r\n        BuilderPrototype.define = function(namespace) {\r\n            if (typeof namespace !== 'string' || !Lang.TYPEREF.test(namespace))\r\n                throw Error(\"illegal namespace: \"+namespace);\r\n            namespace.split(\".\").forEach(function(part) {\r\n                var ns = this.ptr.getChild(part);\r\n                if (ns === null) // Keep existing\r\n                    this.ptr.addChild(ns = new Reflect.Namespace(this, this.ptr, part));\r\n                this.ptr = ns;\r\n            }, this);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Creates the specified definitions at the current pointer position.\r\n         * @param {!Array.<!Object>} defs Messages, enums or services to create\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @throws {Error} If a message definition is invalid\r\n         * @expose\r\n         */\r\n        BuilderPrototype.create = function(defs) {\r\n            if (!defs)\r\n                return this; // Nothing to create\r\n            if (!Array.isArray(defs))\r\n                defs = [defs];\r\n            else {\r\n                if (defs.length === 0)\r\n                    return this;\r\n                defs = defs.slice();\r\n            }\r\n\r\n            // It's quite hard to keep track of scopes and memory here, so let's do this iteratively.\r\n            var stack = [defs];\r\n            while (stack.length > 0) {\r\n                defs = stack.pop();\r\n\r\n                if (!Array.isArray(defs)) // Stack always contains entire namespaces\r\n                    throw Error(\"not a valid namespace: \"+JSON.stringify(defs));\r\n\r\n                while (defs.length > 0) {\r\n                    var def = defs.shift(); // Namespaces always contain an array of messages, enums and services\r\n\r\n                    if (Builder.isMessage(def)) {\r\n                        var obj = new Reflect.Message(this, this.ptr, def[\"name\"], def[\"options\"], def[\"isGroup\"], def[\"syntax\"]);\r\n\r\n                        // Create OneOfs\r\n                        var oneofs = {};\r\n                        if (def[\"oneofs\"])\r\n                            Object.keys(def[\"oneofs\"]).forEach(function(name) {\r\n                                obj.addChild(oneofs[name] = new Reflect.Message.OneOf(this, obj, name));\r\n                            }, this);\r\n\r\n                        // Create fields\r\n                        if (def[\"fields\"])\r\n                            def[\"fields\"].forEach(function(fld) {\r\n                                if (obj.getChild(fld[\"id\"]|0) !== null)\r\n                                    throw Error(\"duplicate or invalid field id in \"+obj.name+\": \"+fld['id']);\r\n                                if (fld[\"options\"] && typeof fld[\"options\"] !== 'object')\r\n                                    throw Error(\"illegal field options in \"+obj.name+\"#\"+fld[\"name\"]);\r\n                                var oneof = null;\r\n                                if (typeof fld[\"oneof\"] === 'string' && !(oneof = oneofs[fld[\"oneof\"]]))\r\n                                    throw Error(\"illegal oneof in \"+obj.name+\"#\"+fld[\"name\"]+\": \"+fld[\"oneof\"]);\r\n                                fld = new Reflect.Message.Field(this, obj, fld[\"rule\"], fld[\"keytype\"], fld[\"type\"], fld[\"name\"], fld[\"id\"], fld[\"options\"], oneof, def[\"syntax\"]);\r\n                                if (oneof)\r\n                                    oneof.fields.push(fld);\r\n                                obj.addChild(fld);\r\n                            }, this);\r\n\r\n                        // Push children to stack\r\n                        var subObj = [];\r\n                        if (def[\"enums\"])\r\n                            def[\"enums\"].forEach(function(enm) {\r\n                                subObj.push(enm);\r\n                            });\r\n                        if (def[\"messages\"])\r\n                            def[\"messages\"].forEach(function(msg) {\r\n                                subObj.push(msg);\r\n                            });\r\n                        if (def[\"services\"])\r\n                            def[\"services\"].forEach(function(svc) {\r\n                                subObj.push(svc);\r\n                            });\r\n\r\n                        // Set extension range\r\n                        if (def[\"extensions\"]) {\r\n                            obj.extensions = def[\"extensions\"];\r\n                            if (obj.extensions[0] < ProtoBuf.ID_MIN)\r\n                                obj.extensions[0] = ProtoBuf.ID_MIN;\r\n                            if (obj.extensions[1] > ProtoBuf.ID_MAX)\r\n                                obj.extensions[1] = ProtoBuf.ID_MAX;\r\n                        }\r\n\r\n                        // Create on top of current namespace\r\n                        this.ptr.addChild(obj);\r\n                        if (subObj.length > 0) {\r\n                            stack.push(defs); // Push the current level back\r\n                            defs = subObj; // Continue processing sub level\r\n                            subObj = null;\r\n                            this.ptr = obj; // And move the pointer to this namespace\r\n                            obj = null;\r\n                            continue;\r\n                        }\r\n                        subObj = null;\r\n\r\n                    } else if (Builder.isEnum(def)) {\r\n\r\n                        obj = new Reflect.Enum(this, this.ptr, def[\"name\"], def[\"options\"], def[\"syntax\"]);\r\n                        def[\"values\"].forEach(function(val) {\r\n                            obj.addChild(new Reflect.Enum.Value(this, obj, val[\"name\"], val[\"id\"]));\r\n                        }, this);\r\n                        this.ptr.addChild(obj);\r\n\r\n                    } else if (Builder.isService(def)) {\r\n\r\n                        obj = new Reflect.Service(this, this.ptr, def[\"name\"], def[\"options\"]);\r\n                        Object.keys(def[\"rpc\"]).forEach(function(name) {\r\n                            var mtd = def[\"rpc\"][name];\r\n                            obj.addChild(new Reflect.Service.RPCMethod(this, obj, name, mtd[\"request\"], mtd[\"response\"], !!mtd[\"request_stream\"], !!mtd[\"response_stream\"], mtd[\"options\"]));\r\n                        }, this);\r\n                        this.ptr.addChild(obj);\r\n\r\n                    } else if (Builder.isExtend(def)) {\r\n\r\n                        obj = this.ptr.resolve(def[\"ref\"], true);\r\n                        if (obj) {\r\n                            def[\"fields\"].forEach(function(fld) {\r\n                                if (obj.getChild(fld['id']|0) !== null)\r\n                                    throw Error(\"duplicate extended field id in \"+obj.name+\": \"+fld['id']);\r\n                                if (fld['id'] < obj.extensions[0] || fld['id'] > obj.extensions[1])\r\n                                    throw Error(\"illegal extended field id in \"+obj.name+\": \"+fld['id']+\" (\"+obj.extensions.join(' to ')+\" expected)\");\r\n                                // Convert extension field names to camel case notation if the override is set\r\n                                var name = fld[\"name\"];\r\n                                if (this.options['convertFieldsToCamelCase'])\r\n                                    name = ProtoBuf.Util.toCamelCase(name);\r\n                                // see #161: Extensions use their fully qualified name as their runtime key and...\r\n                                var field = new Reflect.Message.ExtensionField(this, obj, fld[\"rule\"], fld[\"type\"], this.ptr.fqn()+'.'+name, fld[\"id\"], fld[\"options\"]);\r\n                                // ...are added on top of the current namespace as an extension which is used for\r\n                                // resolving their type later on (the extension always keeps the original name to\r\n                                // prevent naming collisions)\r\n                                var ext = new Reflect.Extension(this, this.ptr, fld[\"name\"], field);\r\n                                field.extension = ext;\r\n                                this.ptr.addChild(ext);\r\n                                obj.addChild(field);\r\n                            }, this);\r\n\r\n                        } else if (!/\\.?google\\.protobuf\\./.test(def[\"ref\"])) // Silently skip internal extensions\r\n                            throw Error(\"extended message \"+def[\"ref\"]+\" is not defined\");\r\n\r\n                    } else\r\n                        throw Error(\"not a valid definition: \"+JSON.stringify(def));\r\n\r\n                    def = null;\r\n                    obj = null;\r\n                }\r\n                // Break goes here\r\n                defs = null;\r\n                this.ptr = this.ptr.parent; // Namespace done, continue at parent\r\n            }\r\n            this.resolved = false; // Require re-resolve\r\n            this.result = null; // Require re-build\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Propagates syntax to all children.\r\n         * @param {!Object} parent\r\n         * @inner\r\n         */\r\n        function propagateSyntax(parent) {\r\n            if (parent['messages']) {\r\n                parent['messages'].forEach(function(child) {\r\n                    child[\"syntax\"] = parent[\"syntax\"];\r\n                    propagateSyntax(child);\r\n                });\r\n            }\r\n            if (parent['enums']) {\r\n                parent['enums'].forEach(function(child) {\r\n                    child[\"syntax\"] = parent[\"syntax\"];\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Imports another definition into this builder.\r\n         * @param {Object.<string,*>} json Parsed import\r\n         * @param {(string|{root: string, file: string})=} filename Imported file name\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @throws {Error} If the definition or file cannot be imported\r\n         * @expose\r\n         */\r\n        BuilderPrototype[\"import\"] = function(json, filename) {\r\n            var delim = '/';\r\n\r\n            // Make sure to skip duplicate imports\r\n\r\n            if (typeof filename === 'string') {\r\n\r\n                if (ProtoBuf.Util.IS_NODE)\r\n                    filename = require(\"path\")['resolve'](filename);\r\n                if (this.files[filename] === true)\r\n                    return this.reset();\r\n                this.files[filename] = true;\r\n\r\n            } else if (typeof filename === 'object') { // Object with root, file.\r\n\r\n                var root = filename.root;\r\n                if (ProtoBuf.Util.IS_NODE)\r\n                    root = require(\"path\")['resolve'](root);\r\n                if (root.indexOf(\"\\\\\") >= 0 || filename.file.indexOf(\"\\\\\") >= 0)\r\n                    delim = '\\\\';\r\n                var fname = root + delim + filename.file;\r\n                if (this.files[fname] === true)\r\n                    return this.reset();\r\n                this.files[fname] = true;\r\n            }\r\n\r\n            // Import imports\r\n\r\n            if (json['imports'] && json['imports'].length > 0) {\r\n                var importRoot,\r\n                    resetRoot = false;\r\n\r\n                if (typeof filename === 'object') { // If an import root is specified, override\r\n\r\n                    this.importRoot = filename[\"root\"]; resetRoot = true; // ... and reset afterwards\r\n                    importRoot = this.importRoot;\r\n                    filename = filename[\"file\"];\r\n                    if (importRoot.indexOf(\"\\\\\") >= 0 || filename.indexOf(\"\\\\\") >= 0)\r\n                        delim = '\\\\';\r\n\r\n                } else if (typeof filename === 'string') {\r\n\r\n                    if (this.importRoot) // If import root is overridden, use it\r\n                        importRoot = this.importRoot;\r\n                    else { // Otherwise compute from filename\r\n                        if (filename.indexOf(\"/\") >= 0) { // Unix\r\n                            importRoot = filename.replace(/\\/[^\\/]*$/, \"\");\r\n                            if (/* /file.proto */ importRoot === \"\")\r\n                                importRoot = \"/\";\r\n                        } else if (filename.indexOf(\"\\\\\") >= 0) { // Windows\r\n                            importRoot = filename.replace(/\\\\[^\\\\]*$/, \"\");\r\n                            delim = '\\\\';\r\n                        } else\r\n                            importRoot = \".\";\r\n                    }\r\n\r\n                } else\r\n                    importRoot = null;\r\n\r\n                for (var i=0; i<json['imports'].length; i++) {\r\n                    if (typeof json['imports'][i] === 'string') { // Import file\r\n                        if (!importRoot)\r\n                            throw Error(\"cannot determine import root\");\r\n                        var importFilename = json['imports'][i];\r\n                        if (importFilename === \"google/protobuf/descriptor.proto\")\r\n                            continue; // Not needed and therefore not used\r\n                        importFilename = importRoot + delim + importFilename;\r\n                        if (this.files[importFilename] === true)\r\n                            continue; // Already imported\r\n                        if (/\\.proto$/i.test(importFilename) && !ProtoBuf.DotProto)       // If this is a light build\r\n                            importFilename = importFilename.replace(/\\.proto$/, \".json\"); // always load the JSON file\r\n                        var contents = ProtoBuf.Util.fetch(importFilename);\r\n                        if (contents === null)\r\n                            throw Error(\"failed to import '\"+importFilename+\"' in '\"+filename+\"': file not found\");\r\n                        if (/\\.json$/i.test(importFilename)) // Always possible\r\n                            this[\"import\"](JSON.parse(contents+\"\"), importFilename); // May throw\r\n                        else\r\n                            this[\"import\"](ProtoBuf.DotProto.Parser.parse(contents), importFilename); // May throw\r\n                    } else // Import structure\r\n                        if (!filename)\r\n                            this[\"import\"](json['imports'][i]);\r\n                        else if (/\\.(\\w+)$/.test(filename)) // With extension: Append _importN to the name portion to make it unique\r\n                            this[\"import\"](json['imports'][i], filename.replace(/^(.+)\\.(\\w+)$/, function($0, $1, $2) { return $1+\"_import\"+i+\".\"+$2; }));\r\n                        else // Without extension: Append _importN to make it unique\r\n                            this[\"import\"](json['imports'][i], filename+\"_import\"+i);\r\n                }\r\n                if (resetRoot) // Reset import root override when all imports are done\r\n                    this.importRoot = null;\r\n            }\r\n\r\n            // Import structures\r\n\r\n            if (json['package'])\r\n                this.define(json['package']);\r\n            if (json['syntax'])\r\n                propagateSyntax(json);\r\n            var base = this.ptr;\r\n            if (json['options'])\r\n                Object.keys(json['options']).forEach(function(key) {\r\n                    base.options[key] = json['options'][key];\r\n                });\r\n            if (json['messages'])\r\n                this.create(json['messages']),\r\n                this.ptr = base;\r\n            if (json['enums'])\r\n                this.create(json['enums']),\r\n                this.ptr = base;\r\n            if (json['services'])\r\n                this.create(json['services']),\r\n                this.ptr = base;\r\n            if (json['extends'])\r\n                this.create(json['extends']);\r\n\r\n            return this.reset();\r\n        };\r\n\r\n        /**\r\n         * Resolves all namespace objects.\r\n         * @throws {Error} If a type cannot be resolved\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */\r\n        BuilderPrototype.resolveAll = function() {\r\n            // Resolve all reflected objects\r\n            var res;\r\n            if (this.ptr == null || typeof this.ptr.type === 'object')\r\n                return this; // Done (already resolved)\r\n\r\n            if (this.ptr instanceof Reflect.Namespace) { // Resolve children\r\n\r\n                this.ptr.children.forEach(function(child) {\r\n                    this.ptr = child;\r\n                    this.resolveAll();\r\n                }, this);\r\n\r\n            } else if (this.ptr instanceof Reflect.Message.Field) { // Resolve type\r\n\r\n                if (!Lang.TYPE.test(this.ptr.type)) {\r\n                    if (!Lang.TYPEREF.test(this.ptr.type))\r\n                        throw Error(\"illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);\r\n                    res = (this.ptr instanceof Reflect.Message.ExtensionField ? this.ptr.extension.parent : this.ptr.parent).resolve(this.ptr.type, true);\r\n                    if (!res)\r\n                        throw Error(\"unresolvable type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);\r\n                    this.ptr.resolvedType = res;\r\n                    if (res instanceof Reflect.Enum) {\r\n                        this.ptr.type = ProtoBuf.TYPES[\"enum\"];\r\n                        if (this.ptr.syntax === 'proto3' && res.syntax !== 'proto3')\r\n                            throw Error(\"proto3 message cannot reference proto2 enum\");\r\n                    }\r\n                    else if (res instanceof Reflect.Message)\r\n                        this.ptr.type = res.isGroup ? ProtoBuf.TYPES[\"group\"] : ProtoBuf.TYPES[\"message\"];\r\n                    else\r\n                        throw Error(\"illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);\r\n                } else\r\n                    this.ptr.type = ProtoBuf.TYPES[this.ptr.type];\r\n\r\n                // If it's a map field, also resolve the key type. The key type can be only a numeric, string, or bool type\r\n                // (i.e., no enums or messages), so we don't need to resolve against the current namespace.\r\n                if (this.ptr.map) {\r\n                    if (!Lang.TYPE.test(this.ptr.keyType))\r\n                        throw Error(\"illegal key type for map field in \"+this.ptr.toString(true)+\": \"+this.ptr.keyType);\r\n                    this.ptr.keyType = ProtoBuf.TYPES[this.ptr.keyType];\r\n                }\r\n\r\n            } else if (this.ptr instanceof ProtoBuf.Reflect.Service.Method) {\r\n\r\n                if (this.ptr instanceof ProtoBuf.Reflect.Service.RPCMethod) {\r\n                    res = this.ptr.parent.resolve(this.ptr.requestName, true);\r\n                    if (!res || !(res instanceof ProtoBuf.Reflect.Message))\r\n                        throw Error(\"Illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.requestName);\r\n                    this.ptr.resolvedRequestType = res;\r\n                    res = this.ptr.parent.resolve(this.ptr.responseName, true);\r\n                    if (!res || !(res instanceof ProtoBuf.Reflect.Message))\r\n                        throw Error(\"Illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.responseName);\r\n                    this.ptr.resolvedResponseType = res;\r\n                } else // Should not happen as nothing else is implemented\r\n                    throw Error(\"illegal service type in \"+this.ptr.toString(true));\r\n\r\n            } else if (\r\n                !(this.ptr instanceof ProtoBuf.Reflect.Message.OneOf) && // Not built\r\n                !(this.ptr instanceof ProtoBuf.Reflect.Extension) && // Not built\r\n                !(this.ptr instanceof ProtoBuf.Reflect.Enum.Value) // Built in enum\r\n            )\r\n                throw Error(\"illegal object in namespace: \"+typeof(this.ptr)+\": \"+this.ptr);\r\n\r\n            return this.reset();\r\n        };\r\n\r\n        /**\r\n         * Builds the protocol. This will first try to resolve all definitions and, if this has been successful,\r\n         * return the built package.\r\n         * @param {(string|Array.<string>)=} path Specifies what to return. If omitted, the entire namespace will be returned.\r\n         * @returns {!ProtoBuf.Builder.Message|!Object.<string,*>}\r\n         * @throws {Error} If a type could not be resolved\r\n         * @expose\r\n         */\r\n        BuilderPrototype.build = function(path) {\r\n            this.reset();\r\n            if (!this.resolved)\r\n                this.resolveAll(),\r\n                this.resolved = true,\r\n                this.result = null; // Require re-build\r\n            if (this.result === null) // (Re-)Build\r\n                this.result = this.ns.build();\r\n            if (!path)\r\n                return this.result;\r\n            var part = typeof path === 'string' ? path.split(\".\") : path,\r\n                ptr = this.result; // Build namespace pointer (no hasChild etc.)\r\n            for (var i=0; i<part.length; i++)\r\n                if (ptr[part[i]])\r\n                    ptr = ptr[part[i]];\r\n                else {\r\n                    ptr = null;\r\n                    break;\r\n                }\r\n            return ptr;\r\n        };\r\n\r\n        /**\r\n         * Similar to {@link ProtoBuf.Builder#build}, but looks up the internal reflection descriptor.\r\n         * @param {string=} path Specifies what to return. If omitted, the entire namespace wiil be returned.\r\n         * @param {boolean=} excludeNonNamespace Excludes non-namespace types like fields, defaults to `false`\r\n         * @returns {?ProtoBuf.Reflect.T} Reflection descriptor or `null` if not found\r\n         */\r\n        BuilderPrototype.lookup = function(path, excludeNonNamespace) {\r\n            return path ? this.ns.resolve(path, excludeNonNamespace) : this.ns;\r\n        };\r\n\r\n        /**\r\n         * Returns a string representation of this object.\r\n         * @return {string} String representation as of \"Builder\"\r\n         * @expose\r\n         */\r\n        BuilderPrototype.toString = function() {\r\n            return \"Builder\";\r\n        };\r\n\r\n        // ----- Base classes -----\r\n        // Exist for the sole purpose of being able to \"... instanceof ProtoBuf.Builder.Message\" etc.\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.Message\r\n         */\r\n        Builder.Message = function() {};\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.Enum\r\n         */\r\n        Builder.Enum = function() {};\r\n\r\n        /**\r\n         * @alias ProtoBuf.Builder.Message\r\n         */\r\n        Builder.Service = function() {};\r\n\r\n        return Builder;\r\n\r\n    })(ProtoBuf, ProtoBuf.Lang, ProtoBuf.Reflect);\r\n\r\n    /**\r\n     * @alias ProtoBuf.Map\r\n     * @expose\r\n     */\r\n    ProtoBuf.Map = (function(ProtoBuf, Reflect) {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * Constructs a new Map. A Map is a container that is used to implement map\r\n         * fields on message objects. It closely follows the ES6 Map API; however,\r\n         * it is distinct because we do not want to depend on external polyfills or\r\n         * on ES6 itself.\r\n         *\r\n         * @exports ProtoBuf.Map\r\n         * @param {!ProtoBuf.Reflect.Field} field Map field\r\n         * @param {Object.<string,*>=} contents Initial contents\r\n         * @constructor\r\n         */\r\n        var Map = function(field, contents) {\r\n            if (!field.map)\r\n                throw Error(\"field is not a map\");\r\n\r\n            /**\r\n             * The field corresponding to this map.\r\n             * @type {!ProtoBuf.Reflect.Field}\r\n             */\r\n            this.field = field;\r\n\r\n            /**\r\n             * Element instance corresponding to key type.\r\n             * @type {!ProtoBuf.Reflect.Element}\r\n             */\r\n            this.keyElem = new Reflect.Element(field.keyType, null, true, field.syntax);\r\n\r\n            /**\r\n             * Element instance corresponding to value type.\r\n             * @type {!ProtoBuf.Reflect.Element}\r\n             */\r\n            this.valueElem = new Reflect.Element(field.type, field.resolvedType, false, field.syntax);\r\n\r\n            /**\r\n             * Internal map: stores mapping of (string form of key) -> (key, value)\r\n             * pair.\r\n             *\r\n             * We provide map semantics for arbitrary key types, but we build on top\r\n             * of an Object, which has only string keys. In order to avoid the need\r\n             * to convert a string key back to its native type in many situations,\r\n             * we store the native key value alongside the value. Thus, we only need\r\n             * a one-way mapping from a key type to its string form that guarantees\r\n             * uniqueness and equality (i.e., str(K1) === str(K2) if and only if K1\r\n             * === K2).\r\n             *\r\n             * @type {!Object<string, {key: *, value: *}>}\r\n             */\r\n            this.map = {};\r\n\r\n            /**\r\n             * Returns the number of elements in the map.\r\n             */\r\n            Object.defineProperty(this, \"size\", {\r\n                get: function() { return Object.keys(this.map).length; }\r\n            });\r\n\r\n            // Fill initial contents from a raw object.\r\n            if (contents) {\r\n                var keys = Object.keys(contents);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    var key = this.keyElem.valueFromString(keys[i]);\r\n                    var val = this.valueElem.verifyValue(contents[keys[i]]);\r\n                    this.map[this.keyElem.valueToString(key)] =\r\n                        { key: key, value: val };\r\n                }\r\n            }\r\n        };\r\n\r\n        var MapPrototype = Map.prototype;\r\n\r\n        /**\r\n         * Helper: return an iterator over an array.\r\n         * @param {!Array<*>} arr the array\r\n         * @returns {!Object} an iterator\r\n         * @inner\r\n         */\r\n        function arrayIterator(arr) {\r\n            var idx = 0;\r\n            return {\r\n                next: function() {\r\n                    if (idx < arr.length)\r\n                        return { done: false, value: arr[idx++] };\r\n                    return { done: true };\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Clears the map.\r\n         */\r\n        MapPrototype.clear = function() {\r\n            this.map = {};\r\n        };\r\n\r\n        /**\r\n         * Deletes a particular key from the map.\r\n         * @returns {boolean} Whether any entry with this key was deleted.\r\n         */\r\n        MapPrototype[\"delete\"] = function(key) {\r\n            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));\r\n            var hadKey = keyValue in this.map;\r\n            delete this.map[keyValue];\r\n            return hadKey;\r\n        };\r\n\r\n        /**\r\n         * Returns an iterator over [key, value] pairs in the map.\r\n         * @returns {Object} The iterator\r\n         */\r\n        MapPrototype.entries = function() {\r\n            var entries = [];\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0, entry; i < strKeys.length; i++)\r\n                entries.push([(entry=this.map[strKeys[i]]).key, entry.value]);\r\n            return arrayIterator(entries);\r\n        };\r\n\r\n        /**\r\n         * Returns an iterator over keys in the map.\r\n         * @returns {Object} The iterator\r\n         */\r\n        MapPrototype.keys = function() {\r\n            var keys = [];\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0; i < strKeys.length; i++)\r\n                keys.push(this.map[strKeys[i]].key);\r\n            return arrayIterator(keys);\r\n        };\r\n\r\n        /**\r\n         * Returns an iterator over values in the map.\r\n         * @returns {!Object} The iterator\r\n         */\r\n        MapPrototype.values = function() {\r\n            var values = [];\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0; i < strKeys.length; i++)\r\n                values.push(this.map[strKeys[i]].value);\r\n            return arrayIterator(values);\r\n        };\r\n\r\n        /**\r\n         * Iterates over entries in the map, calling a function on each.\r\n         * @param {function(this:*, *, *, *)} cb The callback to invoke with value, key, and map arguments.\r\n         * @param {Object=} thisArg The `this` value for the callback\r\n         */\r\n        MapPrototype.forEach = function(cb, thisArg) {\r\n            var strKeys = Object.keys(this.map);\r\n            for (var i = 0, entry; i < strKeys.length; i++)\r\n                cb.call(thisArg, (entry=this.map[strKeys[i]]).value, entry.key, this);\r\n        };\r\n\r\n        /**\r\n         * Sets a key in the map to the given value.\r\n         * @param {*} key The key\r\n         * @param {*} value The value\r\n         * @returns {!ProtoBuf.Map} The map instance\r\n         */\r\n        MapPrototype.set = function(key, value) {\r\n            var keyValue = this.keyElem.verifyValue(key);\r\n            var valValue = this.valueElem.verifyValue(value);\r\n            this.map[this.keyElem.valueToString(keyValue)] =\r\n                { key: keyValue, value: valValue };\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Gets the value corresponding to a key in the map.\r\n         * @param {*} key The key\r\n         * @returns {*|undefined} The value, or `undefined` if key not present\r\n         */\r\n        MapPrototype.get = function(key) {\r\n            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));\r\n            if (!(keyValue in this.map))\r\n                return undefined;\r\n            return this.map[keyValue].value;\r\n        };\r\n\r\n        /**\r\n         * Determines whether the given key is present in the map.\r\n         * @param {*} key The key\r\n         * @returns {boolean} `true` if the key is present\r\n         */\r\n        MapPrototype.has = function(key) {\r\n            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));\r\n            return (keyValue in this.map);\r\n        };\r\n\r\n        return Map;\r\n    })(ProtoBuf, ProtoBuf.Reflect);\r\n\r\n\r\n    /**\r\n     * Loads a .proto string and returns the Builder.\r\n     * @param {string} proto .proto file contents\r\n     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadProto = function(proto, builder, filename) {\r\n        if (typeof builder === 'string' || (builder && typeof builder[\"file\"] === 'string' && typeof builder[\"root\"] === 'string'))\r\n            filename = builder,\r\n            builder = undefined;\r\n        return ProtoBuf.loadJson(ProtoBuf.DotProto.Parser.parse(proto), builder, filename);\r\n    };\r\n\r\n    /**\r\n     * Loads a .proto string and returns the Builder. This is an alias of {@link ProtoBuf.loadProto}.\r\n     * @function\r\n     * @param {string} proto .proto file contents\r\n     * @param {(ProtoBuf.Builder|string)=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */\r\n    ProtoBuf.protoFromString = ProtoBuf.loadProto; // Legacy\r\n\r\n    /**\r\n     * Loads a .proto file and returns the Builder.\r\n     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadProtoFile = function(filename, callback, builder) {\r\n        if (callback && typeof callback === 'object')\r\n            builder = callback,\r\n            callback = null;\r\n        else if (!callback || typeof callback !== 'function')\r\n            callback = null;\r\n        if (callback)\r\n            return ProtoBuf.Util.fetch(typeof filename === 'string' ? filename : filename[\"root\"]+\"/\"+filename[\"file\"], function(contents) {\r\n                if (contents === null) {\r\n                    callback(Error(\"Failed to fetch file\"));\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(null, ProtoBuf.loadProto(contents, builder, filename));\r\n                } catch (e) {\r\n                    callback(e);\r\n                }\r\n            });\r\n        var contents = ProtoBuf.Util.fetch(typeof filename === 'object' ? filename[\"root\"]+\"/\"+filename[\"file\"] : filename);\r\n        return contents === null ? null : ProtoBuf.loadProto(contents, builder, filename);\r\n    };\r\n\r\n    /**\r\n     * Loads a .proto file and returns the Builder. This is an alias of {@link ProtoBuf.loadProtoFile}.\r\n     * @function\r\n     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {!ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */\r\n    ProtoBuf.protoFromFile = ProtoBuf.loadProtoFile; // Legacy\r\n\r\n\r\n    /**\r\n     * Constructs a new empty Builder.\r\n     * @param {Object.<string,*>=} options Builder options, defaults to global options set on ProtoBuf\r\n     * @return {!ProtoBuf.Builder} Builder\r\n     * @expose\r\n     */\r\n    ProtoBuf.newBuilder = function(options) {\r\n        options = options || {};\r\n        if (typeof options['convertFieldsToCamelCase'] === 'undefined')\r\n            options['convertFieldsToCamelCase'] = ProtoBuf.convertFieldsToCamelCase;\r\n        if (typeof options['populateAccessors'] === 'undefined')\r\n            options['populateAccessors'] = ProtoBuf.populateAccessors;\r\n        return new ProtoBuf.Builder(options);\r\n    };\r\n\r\n    /**\r\n     * Loads a .json definition and returns the Builder.\r\n     * @param {!*|string} json JSON definition\r\n     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadJson = function(json, builder, filename) {\r\n        if (typeof builder === 'string' || (builder && typeof builder[\"file\"] === 'string' && typeof builder[\"root\"] === 'string'))\r\n            filename = builder,\r\n            builder = null;\r\n        if (!builder || typeof builder !== 'object')\r\n            builder = ProtoBuf.newBuilder();\r\n        if (typeof json === 'string')\r\n            json = JSON.parse(json);\r\n        builder[\"import\"](json, filename);\r\n        builder.resolveAll();\r\n        return builder;\r\n    };\r\n\r\n    /**\r\n     * Loads a .json file and returns the Builder.\r\n     * @param {string|!{root: string, file: string}} filename Path to json file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */\r\n    ProtoBuf.loadJsonFile = function(filename, callback, builder) {\r\n        if (callback && typeof callback === 'object')\r\n            builder = callback,\r\n            callback = null;\r\n        else if (!callback || typeof callback !== 'function')\r\n            callback = null;\r\n        if (callback)\r\n            return ProtoBuf.Util.fetch(typeof filename === 'string' ? filename : filename[\"root\"]+\"/\"+filename[\"file\"], function(contents) {\r\n                if (contents === null) {\r\n                    callback(Error(\"Failed to fetch file\"));\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(null, ProtoBuf.loadJson(JSON.parse(contents), builder, filename));\r\n                } catch (e) {\r\n                    callback(e);\r\n                }\r\n            });\r\n        var contents = ProtoBuf.Util.fetch(typeof filename === 'object' ? filename[\"root\"]+\"/\"+filename[\"file\"] : filename);\r\n        return contents === null ? null : ProtoBuf.loadJson(JSON.parse(contents), builder, filename);\r\n    };\r\n\r\n    return ProtoBuf;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/protobufjs/dist/protobuf.js\n// module id = 72\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 73\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-proto',\n    'phenix-rtc',\n    './protocol/pcastProto.json',\n    './protocol/chatProto.json'\n], function(_, assert, observable, proto, phenixRTC, pcastProto, chatProto) {\n    'use strict';\n\n    var apiVersion = 5;\n\n    function PCastProtocol(uri, deviceId, version, logger) {\n        assert.isStringNotEmpty(uri, 'uri');\n        assert.isString(deviceId, 'deviceId');\n        assert.isStringNotEmpty(version, 'version');\n        assert.isObject(logger, 'logger');\n\n        this._deviceId = deviceId;\n        this._version = version;\n        this._logger = logger;\n        this._mqWebSocket = new proto.MQWebSocket(uri, this._logger, [pcastProto, chatProto], apiVersion);\n        this._observableSessionId = new observable.Observable(null).extend({rateLimit: 0});\n    }\n\n    PCastProtocol.prototype.onEvent = function(eventName, handler) {\n        return this._mqWebSocket.onEvent(eventName, handler);\n    };\n\n    PCastProtocol.prototype.disconnect = function() {\n        this._observableSessionId.setValue(null);\n\n        return this._mqWebSocket.disconnect();\n    };\n\n    PCastProtocol.prototype.authenticate = function(authToken, callback) {\n        assert.isStringNotEmpty(authToken, 'authToken');\n        assert.isFunction(callback, 'callback');\n\n        var authenticate = {\n            apiVersion: this._mqWebSocket.getApiVersion(),\n            clientVersion: this._version,\n            deviceId: this._deviceId,\n            platform: phenixRTC.browser,\n            platformVersion: phenixRTC.browserVersion.toString(),\n            authenticationToken: authToken\n        };\n\n        if (this.getSessionId()) {\n            authenticate.sessionId = this.getSessionId();\n        }\n\n        var that = this;\n\n        return this._mqWebSocket.sendRequest('pcast.Authenticate', authenticate, function(error, response) {\n            if (response) {\n                var previousSessionId = that._observableSessionId.getValue();\n\n                if (previousSessionId && previousSessionId !== response.sessionId) {\n                    that._mqWebSocket.disposeOfPendingRequests();\n                }\n\n                that._observableSessionId.setValue(response.sessionId);\n            }\n\n            return callback(error, response);\n        });\n    };\n\n    PCastProtocol.prototype.getSessionId = function() {\n        return this._observableSessionId.getValue();\n    };\n\n    PCastProtocol.prototype.getObservableSessionId = function() {\n        return this._observableSessionId;\n    };\n\n    PCastProtocol.prototype.bye = function(reason, callback) {\n        assert.isStringNotEmpty(reason, 'reason');\n        assert.isFunction(callback, 'callback');\n\n        var bye = {\n            sessionId: this.getSessionId(),\n            reason: reason\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.Bye', bye, callback);\n    };\n\n    PCastProtocol.prototype.setupStream = function(streamType, streamToken, options, rtt, callback) {\n        assert.isStringNotEmpty(streamType, 'streamType');\n        assert.isStringNotEmpty(streamToken, 'streamToken');\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var browser = phenixRTC.browser || 'UnknownBrowser';\n        var browserWithVersion = browser + '-' + (phenixRTC.browserVersion || 0);\n        var rttString = 'rtt[http]=' + rtt;\n        var setupStream = {\n            streamToken: streamToken,\n            createStream: {\n                sessionId: this.getSessionId(),\n                options: ['data-quality-notifications'],\n                connectUri: options.connectUri,\n                connectOptions: options.connectOptions || [],\n                tags: options.tags || [],\n                userAgent: _.get(phenixRTC, ['global', 'navigator', 'userAgent'], browserWithVersion)\n            }\n        };\n\n        if (options.negotiate) {\n            setupStream.createStream.createOfferDescription = {\n                streamId: '',\n                options: [streamType, browser, browserWithVersion, rttString],\n                apiVersion: this._mqWebSocket.getApiVersion()\n            };\n\n            if (isAndroid() && streamType === 'download') {\n                setupStream.createStream.createOfferDescription.options.push('prefer-vp8');\n            }\n\n            if (typeof screen !== undefined) {\n                setupStream.createStream.createOfferDescription.options.push('screen=' + screen.width + 'x' + screen.height);\n            }\n        }\n\n        if (options.receiveAudio === false) {\n            setupStream.createStream.options.push('no-audio');\n        }\n\n        if (options.receiveVideo === false) {\n            setupStream.createStream.options.push('no-video');\n        }\n\n        return this._mqWebSocket.sendRequest('pcast.SetupStream', setupStream, callback);\n    };\n\n    PCastProtocol.prototype.setAnswerDescription = function(streamId, sdp, callback) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n        assert.isStringNotEmpty(sdp, 'sdp');\n        assert.isFunction(callback, 'callback');\n\n        var setRemoteDescription = {\n            streamId: streamId,\n            sessionDescription: {\n                type: 'Answer',\n                sdp: sdp\n            },\n            apiVersion: this._mqWebSocket.getApiVersion()\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.SetRemoteDescription', setRemoteDescription, callback);\n    };\n\n    PCastProtocol.prototype.addIceCandidates = function(streamId, candidates, options, callback) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n        assert.isArray(candidates, 'candidates');\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var sanitizedCandidates = _.map(candidates, function(candidate, index) {\n            assert.isStringNotEmpty(candidate.candidate, 'candidate[' + index + '].candidate');\n            assert.isNumber(candidate.sdpMLineIndex, 'candidate[' + index + '].sdpMLineIndex');\n            assert.isStringNotEmpty(candidate.sdpMid, 'candidate[' + index + '].sdpMid');\n\n            return {\n                candidate: candidate.candidate,\n                sdpMLineIndex: candidate.sdpMLineIndex,\n                sdpMid: candidate.sdpMid\n            };\n        });\n\n        var addIceCandidates = {\n            streamId: streamId,\n            candidates: sanitizedCandidates,\n            options: options,\n            apiVersion: this._mqWebSocket.getApiVersion()\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.AddIceCandidates', addIceCandidates, callback);\n    };\n\n    PCastProtocol.prototype.updateStreamState = function(streamId, signalingState, iceGatheringState, iceConnectionState, callback) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n        assert.isStringNotEmpty(signalingState, 'signalingState');\n        assert.isStringNotEmpty(iceGatheringState, 'iceGatheringState');\n        assert.isStringNotEmpty(iceConnectionState, 'iceConnectionState');\n        assert.isFunction(callback, 'callback');\n\n        var updateStreamState = {\n            streamId: streamId,\n            signalingState: signalingState,\n            iceGatheringState: iceGatheringState,\n            iceConnectionState: iceConnectionState,\n            apiVersion: this._mqWebSocket.getApiVersion()\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.UpdateStreamState', updateStreamState, callback);\n    };\n\n    PCastProtocol.prototype.destroyStream = function(streamId, reason, callback) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n        assert.isString(reason, 'reason');\n        assert.isFunction(callback, 'callback');\n\n        var destroyStream = {\n            streamId: streamId,\n            reason: reason\n        };\n\n        return this._mqWebSocket.sendRequest('pcast.DestroyStream', destroyStream, callback);\n    };\n\n    PCastProtocol.prototype.getRoomInfo = function(roomId, alias, callback) {\n        if (roomId) {\n            assert.isString(roomId, 'roomId');\n        } else {\n            assert.isString(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        var getRoomInfo = {\n            roomId: roomId,\n            alias: alias,\n            sessionId: this.getSessionId()\n        };\n\n        return this._mqWebSocket.sendRequest('chat.GetRoomInfo', getRoomInfo, callback);\n    };\n\n    PCastProtocol.prototype.createRoom = function(room, callback) {\n        assert.isObject(room, 'room');\n        assert.isStringNotEmpty(room.name, 'room.name');\n        assert.isStringNotEmpty(room.type, 'room.type');\n        assert.isStringNotEmpty(room.description, 'room.description');\n        assert.isFunction(callback, 'callback');\n\n        var createRoom = {\n            sessionId: this.getSessionId(),\n            room: room\n        };\n\n        return this._mqWebSocket.sendRequest('chat.CreateRoom', createRoom, callback);\n    };\n\n    PCastProtocol.prototype.enterRoom = function(roomId, alias, member, timestamp, callback) {\n        if (roomId) {\n            assert.isString(roomId, 'roomId');\n        } else {\n            assert.isString(alias, 'alias');\n        }\n\n        assert.isObject(member, 'member');\n        assert.isNumber(timestamp, 'timestamp');\n        assert.isFunction(callback, 'callback');\n\n        var joinRoom = {\n            roomId: roomId,\n            alias: alias,\n            sessionId: this.getSessionId(),\n            member: member,\n            timestamp: timestamp\n        };\n\n        return this._mqWebSocket.sendRequest('chat.JoinRoom', joinRoom, callback);\n    };\n\n    PCastProtocol.prototype.leaveRoom = function(roomId, timestamp, callback) {\n        assert.isString(roomId, 'roomId');\n        assert.isNumber(timestamp, 'timestamp');\n        assert.isFunction(callback, 'callback');\n\n        var leaveRoom = {\n            roomId: roomId,\n            sessionId: this.getSessionId(),\n            timestamp: timestamp\n        };\n\n        return this._mqWebSocket.sendRequest('chat.LeaveRoom', leaveRoom, callback);\n    };\n\n    PCastProtocol.prototype.updateMember = function(member, timestamp, callback) {\n        assert.isObject(member, 'member');\n        assert.isNumber(timestamp, 'timestamp');\n        assert.isFunction(callback, 'callback');\n\n        member.updateStreams = member.hasOwnProperty('streams');\n\n        var updateMember = {\n            sessionId: this.getSessionId(),\n            member: member,\n            timestamp: timestamp\n        };\n\n        return this._mqWebSocket.sendRequest('chat.UpdateMember', updateMember, callback);\n    };\n\n    PCastProtocol.prototype.updateRoom = function(room, timestamp, callback) {\n        assert.isObject(room, 'room');\n        assert.isNumber(timestamp, 'timestamp');\n        assert.isFunction(callback, 'callback');\n\n        var updateRoom = {\n            sessionId: this.getSessionId(),\n            room: room,\n            timestamp: timestamp\n        };\n\n        return this._mqWebSocket.sendRequest('chat.UpdateRoom', updateRoom, callback);\n    };\n\n    PCastProtocol.prototype.sendMessageToRoom = function(roomId, chatMessage, callback) {\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isObject(chatMessage, 'chatMessage');\n\n        var sendMessage = {\n            roomId: roomId,\n            chatMessage: chatMessage\n        };\n\n        return this._mqWebSocket.sendRequest('chat.SendMessageToRoom', sendMessage, callback);\n    };\n\n    PCastProtocol.prototype.subscribeToRoomConversation = function(sessionId, roomId, batchSize, callback) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isNumber(batchSize, 'batchSize');\n\n        var fetchRoomConversation = {\n            sessionId: sessionId,\n            roomId: roomId,\n            limit: batchSize,\n            options: ['Subscribe']\n        };\n\n        return this._mqWebSocket.sendRequest('chat.FetchRoomConversation', fetchRoomConversation, callback);\n    };\n\n    PCastProtocol.prototype.getMessages = function(sessionId, roomId, batchSize, afterMessageId, beforeMessageId, callback) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n        assert.isStringNotEmpty(roomId, 'roomId');\n\n        if (!beforeMessageId || !afterMessageId) {\n            assert.isNumber(batchSize, 'batchSize');\n        }\n\n        var fetchRoomConversation = {\n            sessionId: sessionId,\n            roomId: roomId,\n            limit: batchSize || 0,\n            options: []\n        };\n\n        if (beforeMessageId) {\n            assert.isStringNotEmpty(beforeMessageId, 'beforeMessageId');\n\n            fetchRoomConversation.beforeMessageId = beforeMessageId;\n        }\n\n        if (afterMessageId) {\n            assert.isStringNotEmpty(afterMessageId, 'afterMessageId');\n\n            fetchRoomConversation.afterMessageId = afterMessageId;\n        }\n\n        return this._mqWebSocket.sendRequest('chat.FetchRoomConversation', fetchRoomConversation, callback);\n    };\n\n    PCastProtocol.prototype.toString = function() {\n        return 'PCastProtocol[' + this._mqWebSocket.toString() + ']';\n    };\n\n    function isAndroid() {\n        return /(android)/i.test(_.get(phenixRTC, ['global', 'navigator', 'userAgent'], ''));\n    }\n\n    return PCastProtocol;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/PCastProtocol.js\n// module id = 74\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    var defaultSpeakingHysteresisInterval = 50;\n    var defaultSilenceHysteresisInterval = 1500;\n\n    function AudioSpeakerDetectionAlgorithm(logger) {\n        assert.isObject(logger, 'logger');\n\n        this._logger = logger;\n\n        this.init();\n    }\n\n    AudioSpeakerDetectionAlgorithm.prototype.init = function init() {\n\n    };\n\n    AudioSpeakerDetectionAlgorithm.prototype.onValue = function onValue(callback) {\n        this._callback = callback;\n    };\n\n    AudioSpeakerDetectionAlgorithm.prototype.startDetection = function startDetection(audioVolumeMeter, options) {\n        var that = this;\n\n        return startAudioDetection.call(that, audioVolumeMeter, options);\n    };\n\n    AudioSpeakerDetectionAlgorithm.prototype.toString = function toString() {\n        return 'AudioSpeakerDetection';\n    };\n\n    function startAudioDetection(audioVolumeMeter, options) {\n        assert.isObject(audioVolumeMeter, 'audioVolumeMeter');\n\n        options = options || {};\n\n        var that = this;\n        var stopped = false;\n        var speakingHysteresisInterval = options.speakingHysteresisInterval || defaultSpeakingHysteresisInterval;\n        var silenceHysteresisInterval = options.silenceHysteresisInterval || defaultSilenceHysteresisInterval;\n\n        assert.isNumber(speakingHysteresisInterval, 'options.speakingHysteresisInterval');\n        assert.isNumber(silenceHysteresisInterval, 'options.silenceHysteresisInterval');\n\n        var speaking = false;\n        var nextSpeakingDeadline = _.now() + speakingHysteresisInterval;\n        var nextSilenceDeadline = _.now() + silenceHysteresisInterval;\n\n        audioVolumeMeter.onValue(function(value) {\n            if (stopped) {\n                return;\n            }\n\n            assert.isObject(audioVolumeMeter, 'audioVolumeMeter');\n            assert.isNumber(value.date, 'value.date');\n            assert.isNumber(value.value, 'value.value');\n            assert.isNumber(value.smoothedValue, 'value.smoothedValue');\n            assert.isNumber(value.smoothedPeakValue, 'value.smoothedPeakValue');\n            assert.isNumber(value.clipped, 'value.clipped');\n\n            var speakingThreshold = value.value > 0.01 && value.value > 2 * value.smoothedValue && value.value > 0.25 * value.smoothedPeakValue;\n            var speakingContinuationThreshold = value.value > 0.8 * value.smoothedValue;\n            var notSpeakingThreshold = value.value < 0.5 * value.smoothedValue;\n            var notSpeakingContinuationThreshold = !speakingThreshold;\n\n            if ((speakingThreshold || (speaking && speakingContinuationThreshold)) && nextSpeakingDeadline < value.date) {\n                nextSilenceDeadline = _.utc(value.date) + silenceHysteresisInterval;\n\n                if (!speaking) {\n                    speaking = true;\n\n                    that._logger.info('Speaking detected');\n\n                    if (that._callback) {\n                        that._callback('speaking');\n                    }\n                }\n            } else if ((notSpeakingThreshold || (!speaking && notSpeakingContinuationThreshold)) && nextSilenceDeadline < value.date) {\n                nextSpeakingDeadline = _.utc(value.date) + speakingHysteresisInterval;\n\n                if (speaking) {\n                    speaking = false;\n\n                    that._logger.info('Silence detected');\n\n                    if (that._callback) {\n                        that._callback('silence');\n                    }\n                }\n            }\n        });\n    }\n\n    return AudioSpeakerDetectionAlgorithm;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/audio/AudioSpeakerDetectionAlgorithm.js\n// module id = 75\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    var defaultAlpha = 1 / 16;\n\n    function AudioVolumeMeter(logger) {\n        assert.isObject(logger, 'logger');\n\n        this._logger = logger;\n    }\n\n    AudioVolumeMeter.prototype.init = function init(context, alpha) {\n        assert.isObject(context, 'context');\n        assert.isFunction(context.createScriptProcessor, 'context.createScriptProcessor');\n\n        alpha = parseFloat(alpha || defaultAlpha);\n        assert.isNumber(alpha, 'alpha');\n\n        this._context = context;\n        this._alpha = alpha;\n        this._value = 0.;\n        this._smoothedValue = 0.;\n        this._smoothedPeakValue = 0.;\n        this._clipped = 0.;\n        this._scriptProcessor = context.createScriptProcessor(4096, 1, 1);\n\n        _.addEventListener(this._scriptProcessor, 'audioprocess', _.bind(onAudioProcess, this));\n    };\n\n    AudioVolumeMeter.prototype.onValue = function onValue(callback) {\n        this._callback = callback;\n    };\n\n    AudioVolumeMeter.prototype.getValue = function getValue() {\n        return this._value;\n    };\n\n    AudioVolumeMeter.prototype.getSmoothedValue = function getSmoothedValue() {\n        return this._smoothedValue;\n    };\n\n    AudioVolumeMeter.prototype.getSmoothedPeakValue = function getSmoothedPeakValue() {\n        return this._smoothedPeakValue;\n    };\n\n    AudioVolumeMeter.prototype.setAlpha = function setAlpha(alpha) {\n        assert.isNumber(alpha, 'alpha');\n\n        this._alpha = parseFloat(alpha);\n    };\n\n    AudioVolumeMeter.prototype.connect = function connect(stream) {\n        var that = this;\n\n        return connectToStream.call(that, stream);\n    };\n\n    AudioVolumeMeter.prototype.stop = function stop() {\n        return stopConnections.call(this);\n    };\n\n    AudioVolumeMeter.prototype.toString = function toString() {\n        return 'AudioVolumeMeter';\n    };\n\n    function onAudioProcess(event) {\n        var input = event.inputBuffer.getChannelData(0);\n        var sum = 0.;\n        var clipped = 0;\n\n        for (var i = 0; i < input.length; i++) {\n            sum += input[i] * input[i];\n\n            if (Math.abs(input[i]) > 0.99) {\n                clipped++;\n            }\n        }\n\n        this._value = Math.sqrt(sum / input.length);\n        this._smoothedValue = this._alpha * this._value + (1. - this._alpha) * this._smoothedValue;\n        this._smoothedPeakValue = Math.max(this._value, this._alpha * this._value + (1. - this._alpha) * this._smoothedPeakValue);\n        this._clipped = clipped;\n\n        if (this._callback) {\n            this._callback.call(this, {\n                date: _.now(),\n                value: this._value,\n                smoothedValue: this._smoothedValue,\n                smoothedPeakValue: this._smoothedPeakValue,\n                clipped: this._clipped\n            });\n        }\n    }\n\n    function connectToStream(stream) {\n        assert.isObject(stream, 'stream');\n\n        var that = this;\n\n        if (stream.getAudioTracks().length > 0) {\n            that._mediaStreamSource = that._context.createMediaStreamSource(stream);\n            that._mediaStreamSource.connect(that._scriptProcessor);\n            that._scriptProcessor.connect(that._context.destination);\n        } else {\n            that._logger.info('Stream has no audio tracks');\n        }\n    }\n\n    function stopConnections() {\n        if (this._mediaStreamSource) {\n            this._mediaStreamSource.disconnect();\n        }\n\n        this._scriptProcessor.disconnect();\n    }\n\n    return AudioVolumeMeter;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/audio/AudioVolumeMeter.js\n// module id = 76\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './AudioVolumeMeter'\n], function(_, assert, AudioVolumeMeter) {\n    'use strict';\n\n    function AudioVolumeMeterFactory(logger) {\n        assert.isObject(logger, 'logger');\n\n        this._logger = logger;\n        this._audioVolumeMeters = {};\n    }\n\n    AudioVolumeMeterFactory.prototype.stopAllMeters = function stopAllMeters() {\n        _.forOwn(this._audioVolumeMeters, function stopAudioVolumeMeters(meter) {\n            meter.stop();\n        });\n    };\n\n    AudioVolumeMeterFactory.prototype.getAudioVolumeMeter = function getAudioVolumeMeter(stream) {\n        assert.isObject(stream, 'stream');\n        assert.isStringNotEmpty(stream.id, 'streamId');\n\n        if (!this._audioVolumeMeters[stream.id]) {\n            this._audioVolumeMeters[stream.id] = new AudioVolumeMeter(this._logger);\n        }\n\n        return this._audioVolumeMeters[stream.id];\n    };\n\n    AudioVolumeMeterFactory.prototype.getAudioVolumeMeters = function getAudioVolumeMeters() {\n        return _.values(this._audioVolumeMeters);\n    };\n\n    AudioVolumeMeterFactory.prototype.toString = function toString() {\n        return 'AudioVolumeMeterFactory';\n    };\n\n    return AudioVolumeMeterFactory;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/audio/AudioVolumeMeterFactory.js\n// module id = 77\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    var defaultRoomBandwidthLimit = 5000000;\n\n    function PublisherBandwidthAdjuster(publisher) {\n        this.init(publisher);\n    }\n\n    PublisherBandwidthAdjuster.prototype.init = function init(publisher) {\n        assert.isObject(publisher, 'publisher');\n\n        this._publisher = publisher;\n        this._roomMemberCount = 0;\n        this._roomSubscription = null;\n        this._membersSubscription = null;\n    };\n\n    PublisherBandwidthAdjuster.prototype.connect = function connect(roomService, options) {\n        assert.isObject(roomService, 'roomService');\n\n        options = options || {};\n\n        var roomObservable = roomService.getObservableActiveRoom();\n        var roomBandwidthLimit = options.roomBandwidthLimit || defaultRoomBandwidthLimit;\n\n        this._roomSubscription = roomObservable.subscribe(_.bind(onRoomChange, this, roomBandwidthLimit), {initial: 'notify'});\n    };\n\n    PublisherBandwidthAdjuster.prototype.close = function close() {\n        if (this._roomSubscription) {\n            this._roomSubscription.dispose();\n        }\n\n        if (this._membersSubscription) {\n            this._membersSubscription.dispose();\n        }\n\n        this._roomSubscription = null;\n        this._membersSubscription = null;\n    };\n\n    PublisherBandwidthAdjuster.prototype.toString = function toString() {\n        return 'PublisherBandwidthAdjuster';\n    };\n\n    function onRoomChange(roomBandwidthLimit, room) {\n        if (this._membersSubscription) {\n            this._membersSubscription.dispose();\n        }\n\n        if (!room) {\n            return this._publisher.limitBandwidth(roomBandwidthLimit);\n        }\n\n        var membersObservable = room.getObservableMembers();\n\n        this._membersSubscription = membersObservable.subscribe(_.bind(onRoomMembersChanged, this, roomBandwidthLimit), {initial: 'notify'});\n    }\n\n    function onRoomMembersChanged(roomBandwidthLimit, members) {\n        if (members.length === this._roomMemberCount) {\n            return;\n        }\n\n        this._roomMemberCount = members.length;\n\n        var targetBitRate = roomBandwidthLimit / Math.max(1, this._roomMemberCount - 1);\n\n        this._publisher.limitBandwidth(targetBitRate);\n    }\n\n    return PublisherBandwidthAdjuster;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/bandwidth/PublisherBandwidthAdjuster.js\n// module id = 78\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    '../authentication/AuthenticationService'\n], function(_, assert, observable, disposable, AuthenticationService) {\n    'use strict';\n\n    function ChatService(pcast) {\n        assert.isObject(pcast, 'pcast');\n        assert.isFunction(pcast.getLogger, 'pcast.getLogger');\n        assert.isFunction(pcast.getProtocol, 'pcast.getProtocol');\n\n        this._pcast = pcast;\n        this._logger = pcast.getLogger();\n        this._protocol = pcast.getProtocol();\n        this._enabled = new observable.Observable(false);\n        this._lastSubscribedSessionId = null;\n\n        assert.isObject(this._logger, 'this._logger');\n        assert.isObject(this._protocol, 'this._protocol');\n\n        this._authService = new AuthenticationService(this._pcast);\n    }\n\n    ChatService.prototype.start = function start() {\n        if (this._enabled.getValue()) {\n            return;\n        }\n\n        this._disposables = new disposable.DisposableList();\n        this._roomMessagesListeners = {};\n\n        this._enabled.setValue(true);\n        setupSubscriptions.call(this);\n\n        var disposeOfConversationHandler = this._protocol.onEvent('chat.RoomConversationEvent', _.bind(onRoomConversationEvent, this));\n\n        this._disposables.add(disposeOfConversationHandler);\n    };\n\n    ChatService.prototype.stop = function stop() {\n        if (!this._enabled.getValue()) {\n            return;\n        }\n\n        if (this._disposables) {\n            this._disposables.dispose();\n        }\n    };\n\n    ChatService.prototype.getObservableChatEnabled = function getObservableChatEnabled() {\n        return this._enabled;\n    };\n\n    ChatService.prototype.sendMessageToRoom = function sendMessageToRoom(roomId, screenName, role, lastUpdate, message, callback) {\n        sendMessageRequest.call(this, roomId, screenName, role, lastUpdate, message, callback);\n    };\n\n    ChatService.prototype.subscribeAndLoadMessages = function subscribeAndLoadMessages(roomId, batchSize, onReceiveMessages) {\n        var disposeOfListener = setupChatListener.call(this, roomId, onReceiveMessages);\n\n        subscribeToRoomConversationRequest.call(this, roomId, batchSize);\n\n        return disposeOfListener;\n    };\n\n    ChatService.prototype.getMessages = function getMessages(roomId, batchSize, afterMessageId, beforeMessageId, onReceiveMessages) {\n        getMessagesRequest.call(this, roomId, batchSize, afterMessageId, beforeMessageId, onReceiveMessages);\n    };\n\n    ChatService.prototype.toString = function toString() {\n        return 'ChatService';\n    };\n\n    function setupSubscriptions() {\n        var pcastStatusSubscription = this._authService.getObservableStatus().subscribe(_.bind(onStatusChange, this));\n        var pcastSessionIdSubscription = this._authService.getObservableSessionId().subscribe(_.bind(onSessionIdChange, this));\n\n        this._disposables.add(pcastStatusSubscription);\n        this._disposables.add(pcastSessionIdSubscription);\n    }\n\n    function setupChatListener(roomId, onReceiveMessages) {\n        var that = this;\n\n        this._roomMessagesListeners[roomId] = onReceiveMessages;\n\n        var disposeOfHandler = new disposable.Disposable(function() {\n            if (that._roomMessagesListeners[roomId] === onReceiveMessages) {\n                delete that._roomMessagesListeners[roomId];\n            }\n        });\n\n        this._disposables.add(disposeOfHandler);\n\n        return disposeOfHandler;\n    }\n\n    function onRoomConversationEvent(event) {\n        assert.isObject(event, 'event');\n        assert.isStringNotEmpty(event.roomId, 'event.roomId');\n        assert.isStringNotEmpty(event.eventType, 'event.eventType');\n        assert.isArray(event.chatMessages, 'event.chatMessages');\n\n        switch (event.eventType) {\n        case 'Message':\n            this._logger.debug('[%s] Room messages [%s]', event.roomId, event.chatMessages);\n\n            var listener = this._roomMessagesListeners[event.roomId];\n\n            convertTimeFromLongInChatMessages(event.chatMessages);\n\n            if (listener) {\n                listener(null, {\n                    status: 'ok',\n                    chatMessages: event.chatMessages\n                });\n            }\n\n            break;\n        default:\n            this._logger.warn('Unsupported room conversation event [%s]', event.eventType);\n        }\n    }\n\n    function onStatusChange(status) { // eslint-disable-line no-unused-vars\n        // Only reason to redo subscriptions is if sessionId changes, which infers status changed\n    }\n\n    function onSessionIdChange(sessionId) {\n        if (!this._lastSubscribedSessionId || this._lastSubscribedSessionId === sessionId) {\n            return;\n        }\n\n        refreshMessageSubscriptions.call(this);\n    }\n\n    function refreshMessageSubscriptions() {\n        var that = this;\n\n        _.forOwn(this._roomMessagesListeners, function(listener, roomId) {\n            subscribeToRoomConversationRequest.call(that, roomId, 1);\n        });\n    }\n\n    function getMessagesRequest(roomId, batchSize, afterMessageId, beforeMessageId, callback) {\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isFunction(callback, 'callback');\n\n        if (!beforeMessageId || !afterMessageId) {\n            assert.isNumber(batchSize, 'batchSize');\n        }\n\n        if (beforeMessageId) {\n            assert.isStringNotEmpty(beforeMessageId, 'beforeMessageId');\n        }\n\n        if (afterMessageId) {\n            assert.isStringNotEmpty(afterMessageId, 'afterMessageId');\n        }\n\n        assertEnabled.call(this);\n        this._authService.assertAuthorized();\n\n        var sessionId = this._authService.getPCastSessionId();\n\n        this._logger.info('Get messages from room [%s] conversation with batch size of [%s], after [%s], and before [%s]', roomId, batchSize, afterMessageId, beforeMessageId);\n\n        var that = this;\n\n        this._protocol.getMessages(sessionId, roomId, batchSize, afterMessageId, beforeMessageId,\n            function(error, response) {\n                if (error) {\n                    that._logger.error('Get messages from room conversation failed with error [%s]', error);\n\n                    return callback(error, null);\n                }\n\n                var result = {status: response.status};\n\n                if (response.status !== 'ok') {\n                    that._logger.warn('Get messages from room conversation failed with status [%s]', response.status);\n\n                    return callback(null, result);\n                }\n\n                result.chatMessages = response.chatMessages;\n\n                convertTimeFromLongInChatMessages(result.chatMessages);\n\n                callback(null, result);\n            }\n        );\n    }\n\n    function subscribeToRoomConversationRequest(roomId, batchSize) {\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isNumber(batchSize, 'batchSize');\n\n        assertEnabled.call(this);\n        this._authService.assertAuthorized();\n\n        var sessionId = this._authService.getPCastSessionId();\n\n        this._lastSubscribedSessionId = sessionId;\n\n        this._logger.info('Subscribe to room [%s] conversation with batch size of [%s]', roomId, batchSize);\n\n        var that = this;\n\n        this._protocol.subscribeToRoomConversation(sessionId, roomId, batchSize, function(error, response) {\n            var onReceiveMessages = that._roomMessagesListeners[roomId];\n\n            if (!onReceiveMessages) {\n                return that._logger.warn('No subscription callback set for room [%s]', roomId);\n            }\n\n            if (error) {\n                that._logger.error('Subscribe to room conversation failed with error [%s]', error);\n\n                return onReceiveMessages(error, null);\n            }\n\n            var result = {status: response.status};\n\n            if (response.status !== 'ok') {\n                delete that._roomMessagesListeners[roomId];\n\n                that._logger.warn('Subscribe to room conversation failed with status [%s]', response.status);\n\n                return onReceiveMessages(null, result);\n            }\n\n            result.chatMessages = response.chatMessages;\n\n            convertTimeFromLongInChatMessages(result.chatMessages);\n\n            onReceiveMessages(null, result);\n        });\n    }\n\n    function sendMessageRequest(roomId, screenName, role, lastUpdate, message, callback) {\n        assert.isStringNotEmpty(roomId, 'roomId');\n        assert.isStringNotEmpty(screenName, 'screenName');\n        assert.isStringNotEmpty(role, 'role');\n        assert.isNumber(lastUpdate, 'lastUpdate');\n        assert.isStringNotEmpty(message, 'message');\n        assert.isFunction(callback, 'callback');\n\n        assertEnabled.call(this);\n        this._authService.assertAuthorized();\n\n        var sessionId = this._authService.getPCastSessionId();\n\n        var chatMessage = {\n            messageId: '',\n            timestamp: 0,\n            from: {\n                sessionId: sessionId,\n                screenName: screenName,\n                role: role,\n                lastUpdate: lastUpdate\n            },\n            message: message\n        };\n\n        this._logger.info('Send message to room [%s] from [%s]', roomId, screenName);\n\n        var that = this;\n\n        return this._protocol.sendMessageToRoom(roomId, chatMessage, function(error, response) {\n            if (error) {\n                that._logger.error('Send message to room failed with error [%s]', error);\n\n                return callback(error, null);\n            }\n\n            var result = {status: response.status};\n\n            if (response.status !== 'ok') {\n                that._logger.warn('Send message to room failed with status [%s]', response.status);\n            }\n\n            callback(null, result);\n        });\n    }\n\n    function assertEnabled() {\n        if (!this._enabled.getValue()) {\n            throw new Error('ChatService not Enabled. Please start before performing actions.');\n        }\n    }\n\n    function convertTimeFromLongInChatMessages(chatMessages) {\n        _.forEach(chatMessages, function(chatMessage) {\n            convertTimeFromLongInChatMessage(chatMessage);\n        });\n    }\n\n    function convertTimeFromLongInChatMessage(chatMessage) {\n        if (chatMessage.timestamp) {\n            chatMessage.timestamp = _.utc(chatMessage.timestamp);\n        }\n\n        if (chatMessage.from) {\n            chatMessage.from.lastUpdate = _.utc(chatMessage.from.lastUpdate);\n        }\n    }\n\n    return ChatService;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/chat/ChatService.js\n// module id = 79\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-web-disposable',\n    './ChatService'\n], function(_, assert, observable, disposable, ChatService) {\n    'use strict';\n\n    var defaultBatchSize = 0;\n    var maxCachedQueueSize = 100;\n\n    function RoomChatService(roomService) {\n        assert.isObject(roomService, 'roomService');\n        assert.isObject(roomService._pcast, 'roomService._pcast');\n        assert.isObject(roomService._logger, 'roomService._logger');\n\n        this._roomService = roomService;\n        this._pcast = roomService._pcast;\n        this._logger = roomService._logger;\n        this._chatService = new ChatService(this._pcast);\n        this._chatMessages = new observable.ObservableArray([]);\n        this._latestMessageQueue = [];\n        this._disposables = new disposable.DisposableList();\n        this._chatRoomId = null;\n    }\n\n    RoomChatService.prototype.start = function start(batchSize) {\n        this._batchSize = batchSize || defaultBatchSize;\n        this._chatService.start();\n\n        setupSubscriptions.call(this);\n        setupMessageSubscription.call(this);\n    };\n\n    RoomChatService.prototype.stop = function stop() {\n        this._chatService.stop();\n\n        disposeOfMessageSubscription.call(this);\n\n        if (this._disposables) {\n            this._disposables.dispose();\n        }\n    };\n\n    RoomChatService.prototype.getObservableChatMessages = function getObservableChatMessages() {\n        return this._chatMessages;\n    };\n\n    RoomChatService.prototype.getObservableChatEnabled = function getObservableChatEnabled() {\n        return this._chatService.getObservableChatEnabled();\n    };\n\n    RoomChatService.prototype.sendMessageToRoom = function sendMessageToRoom(message, callback) {\n        var room = this._roomService.getObservableActiveRoom().getValue();\n        var roomId = room.getRoomId();\n        var self = this._roomService._self.getValue();\n        var screenName = self.getObservableScreenName().getValue();\n        var role = self.getObservableRole().getValue();\n        var lastUpdate = self.getLastUpdate();\n\n        this._chatService.sendMessageToRoom(roomId, screenName, role, lastUpdate, message, callback);\n    };\n\n    RoomChatService.prototype.getMessages = function getMessages(batchSize, afterMessageId, beforeMessageId, callback) {\n        var room = this._roomService.getObservableActiveRoom().getValue();\n        var roomId = room.getRoomId();\n\n        return this._chatService.getMessages(roomId, batchSize, afterMessageId, beforeMessageId, callback);\n    };\n\n    RoomChatService.prototype.toString = function toString() {\n        return 'RoomChatService';\n    };\n\n    function onRoomChange(room) {\n        if (room && this._chatRoomId === room.getRoomId()) {\n            return;\n        }\n\n        disposeOfMessageSubscription.call(this);\n\n        if (room) {\n            setupMessageSubscription.call(this);\n        }\n    }\n\n    function setupSubscriptions() {\n        var roomSubscription = this._roomService.getObservableActiveRoom().subscribe(_.bind(onRoomChange, this));\n\n        this._disposables.add(roomSubscription);\n    }\n\n    function setupMessageSubscription() {\n        disposeOfMessageSubscription.call(this);\n\n        this._roomChatSubscription = subscribeAndLoadMessages.call(this, this._batchSize);\n    }\n\n    function disposeOfMessageSubscription() {\n        if (this._roomChatSubscription && this._roomChatSubscription.dispose) {\n            this._roomChatSubscription.dispose();\n        }\n    }\n\n    function subscribeAndLoadMessages(batchSize) {\n        var room = this._roomService.getObservableActiveRoom().getValue();\n        var roomId = room.getRoomId();\n\n        this._chatRoomId = roomId;\n\n        var that = this;\n\n        this._chatMessages.setValue([]);\n\n        return this._chatService.subscribeAndLoadMessages(roomId, batchSize, function onReceiveMessages(error, response) {\n            if (error) {\n                throw error;\n            }\n\n            if (response.status !== 'ok') {\n                throw new Error('Unable to subscribe to room chat. Status ' + status);\n            }\n\n            var messages = that._chatMessages.getValue();\n\n            _.forEach(response.chatMessages, function addMessage(message) {\n                messages.push(message);\n            });\n\n            if (messages.length > maxCachedQueueSize) {\n                messages.splice(0, messages.length - maxCachedQueueSize);\n            }\n\n            that._chatMessages.setValue(messages);\n        });\n    }\n\n    return RoomChatService;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/chat/RoomChatService.js\n// module id = 80\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-rtc',\n    'phenix-web-logging',\n    'phenix-web-proto',\n    '../protocol/telemetryProto.json'\n], function(_, assert, rtc, logging, proto, telemetryProto) {\n    function TelemetryAppender(uri) {\n        assert.isString(uri, 'uri');\n\n        this._loggingUrl = '/telemetry/logs';\n        this._domain = typeof location === 'object' ? location.hostname : rtc.browser + '-' + rtc.browserVersion + '-unknown';\n        this._minLevel = logging.level.TRACE;\n        this._isEnabled = true;\n        this._browser = (rtc.browser || 'Browser') + '/' + (rtc.browserVersion || '?');\n        this._mostRecentRuntime = 0;\n        this._batchHttpProtocol = new proto.BatchHttpProto(uri + this._loggingUrl, [telemetryProto], 'telemetry.StoreLogRecords', {\n            maxAttempts: 3,\n            maxBufferedRecords: 1000,\n            maxBatchSize: 512\n        });\n\n        this._batchHttpProtocol.on('capacity', _.bind(onCapacity, this));\n    }\n\n    TelemetryAppender.prototype.setThreshold = function setThreshold(level) {\n        assert.isNumber(level, 'level');\n\n        this._minLevel = level;\n    };\n\n    TelemetryAppender.prototype.getThreshold = function getThreshold() {\n        return this._minLevel;\n    };\n\n    TelemetryAppender.prototype.isEnabled = function isEnabled() {\n        return this._isEnabled;\n    };\n\n    TelemetryAppender.prototype.setEnabled = function setEnabled(enabled) {\n        assert.isBoolean(enabled, 'enabled');\n\n        this._isEnabled = enabled;\n    };\n\n    TelemetryAppender.prototype.log = function log(since, level, category, messages, sessionId, userId, environment, version, context) {\n        if (context.level < this._minLevel || !this._isEnabled) {\n            return;\n        }\n\n        assert.isArray(messages, 'messages');\n\n        this._mostRecentRuntime = since;\n        this._mostRecentSessionId = sessionId;\n        this._mostRecentUserId = userId;\n        this._mostRecentEnvironment = environment;\n        this._mostRecentVersion = version;\n\n        addMessagesToRecords.call(this, level, category, messages);\n    };\n\n    function addMessagesToRecords(level, category, messages) {\n        this._batchHttpProtocol.addRecord({\n            level: level,\n            timestamp: _.isoString(),\n            category: category,\n            message: messages.join(' '),\n            source: this._browser,\n            fullQualifiedName: this._domain,\n            sessionId: this._mostRecentSessionId,\n            userId: this._mostRecentUserId,\n            environment: this._mostRecentEnvironment,\n            version: this._mostRecentVersion,\n            runtime: this._mostRecentRuntime\n        });\n    }\n\n    function onCapacity(deleteRecords) {\n        this._batchHttpProtocol.addRecordToBeginning({\n            level: 'Warn',\n            timestamp: _.isoString(),\n            category: 'websdk/telemetryLogger',\n            message: 'Deleted ' + deleteRecords + ' records',\n            source: this._browser,\n            fullQualifiedName: this._domain,\n            sessionId: this._mostRecentSessionId,\n            userId: this._mostRecentUserId,\n            environment: this._mostRecentEnvironment,\n            version: this._mostRecentVersion,\n            runtime: this._mostRecentRuntime\n        });\n    }\n\n    return TelemetryAppender;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/logging/TelemetryAppender.js\n// module id = 81\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    '../environment',\n    './TelemetryAppender'\n], function(_, assert, environment, TelemetryAppender) {\n    var config = {\n        urls: {\n            local: '',\n            staging: 'https://telemetry-stg.phenixp2p.com',\n            production: 'https://telemetry.phenixp2p.com'\n        }\n    };\n\n    function TelemetryAppenderFactory() {\n        this._telemetryAppenders = {};\n    }\n\n    TelemetryAppenderFactory.prototype.getAppender = function getAppender(pcastBaseUri) {\n        var env = environment.parseEnvFromPcastBaseUri(pcastBaseUri || '');\n\n        var telemetryServerUrl = config.urls[env];\n\n        if (!this._telemetryAppenders[env]) {\n            this._telemetryAppenders[env] = createNewAppender.call(this, telemetryServerUrl);\n        }\n\n        return this._telemetryAppenders[env];\n    };\n\n    function createNewAppender(uri) {\n        var appender = new TelemetryAppender(uri);\n\n        if (!uri) {\n            appender.setEnabled(false);\n        }\n\n        return appender;\n    }\n\n    return new TelemetryAppenderFactory();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/logging/telemetryAppenderFactory.js\n// module id = 82\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var chatProto = {\n        \"package\": \"chat\",\n        \"options\": {\"optimize_for\": \"LITE_RUNTIME\"},\n        \"messages\": [\n            {\n                \"name\": \"Room\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"alias\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"name\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"description\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"RoomType\",\n                        \"name\": \"type\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"bridgeId\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"pin\",\n                        \"id\": 8\n                    }\n                ]\n            },\n            {\n                \"name\": \"Stream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"StreamType\",\n                        \"name\": \"type\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"uri\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"TrackState\",\n                        \"name\": \"audioState\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"TrackState\",\n                        \"name\": \"videoState\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"Member\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"screenName\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"MemberRole\",\n                        \"name\": \"role\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Stream\",\n                        \"name\": \"streams\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"MemberState\",\n                        \"name\": \"state\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"lastUpdate\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"MemberUpdate\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"screenName\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MemberRole\",\n                        \"name\": \"role\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bool\",\n                        \"name\": \"updateStreams\",\n                        \"id\": 7,\n                        \"options\": {\"default\": false}\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Stream\",\n                        \"name\": \"streams\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"MemberState\",\n                        \"name\": \"state\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"lastUpdate\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"ChatUser\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"screenName\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"MemberRole\",\n                        \"name\": \"role\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"lastUpdate\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"ChatMessage\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"messageId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"ChatUser\",\n                        \"name\": \"from\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"message\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"JoinRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"alias\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Member\",\n                        \"name\": \"member\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"JoinRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Member\",\n                        \"name\": \"members\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Member\",\n                        \"name\": \"self\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateMember\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"MemberUpdate\",\n                        \"name\": \"member\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateMemberResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"lastUpdate\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"LeaveRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"LeaveRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"DestroyRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"DestroyRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"GetRoomInfo\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"alias\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"GetRoomInfoResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Member\",\n                        \"name\": \"members\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomEvent\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"RoomEventType\",\n                        \"name\": \"eventType\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Member\",\n                        \"name\": \"members\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"Room\",\n                        \"name\": \"room\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 7\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendMessageToRoom\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"ChatMessage\",\n                        \"name\": \"chatMessage\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendMessageToRoomResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"FetchRoomConversation\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"afterMessageId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"beforeMessageId\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"limit\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"RoomConversationOption\",\n                        \"name\": \"options\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"FetchRoomConversationResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"ChatMessage\",\n                        \"name\": \"chatMessages\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomConversationEvent\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"RoomConversationEventType\",\n                        \"name\": \"eventType\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"ChatMessage\",\n                        \"name\": \"chatMessages\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomBridgeIdle\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"roomId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"bridgeId\",\n                        \"id\": 2\n                    }\n                ]\n            }\n        ],\n        \"enums\": [\n            {\n                \"name\": \"RoomType\",\n                \"values\": [\n                    {\n                        \"name\": \"DirectChat\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"MultiPartyChat\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"ModeratedChat\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"TownHall\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"Channel\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"MemberRole\",\n                \"values\": [\n                    {\n                        \"name\": \"Participant\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"Moderator\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"Presenter\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"Audience\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"MemberState\",\n                \"values\": [\n                    {\n                        \"name\": \"Active\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"Passive\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"HandRaised\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"Inactive\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"Offline\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomEventType\",\n                \"values\": [\n                    {\n                        \"name\": \"MemberJoined\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"MemberLeft\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"MemberUpdated\",\n                        \"id\": 2\n                    },\n                    {\n                        \"name\": \"RoomUpdated\",\n                        \"id\": 3\n                    },\n                    {\n                        \"name\": \"RoomEnded\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"TrackState\",\n                \"values\": [\n                    {\n                        \"name\": \"TrackEnabled\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"TrackDisabled\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"TrackEnded\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamType\",\n                \"values\": [\n                    {\n                        \"name\": \"User\",\n                        \"id\": 0\n                    },\n                    {\n                        \"name\": \"Presentation\",\n                        \"id\": 1\n                    },\n                    {\n                        \"name\": \"Audio\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomConversationOption\",\n                \"values\": [\n                    {\n                        \"name\": \"Subscribe\",\n                        \"id\": 0\n                    }\n                ]\n            },\n            {\n                \"name\": \"RoomConversationEventType\",\n                \"values\": [\n                    {\n                        \"name\": \"Message\",\n                        \"id\": 0\n                    }\n                ]\n            }\n        ]\n    };\n\n    return chatProto;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/protocol/chatProto.json.js\n// module id = 83\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var pcastProto = {\n        \"package\": \"pcast\",\n        \"options\": {\"optimize_for\": \"LITE_RUNTIME\"},\n        \"messages\": [\n            {\n                \"name\": \"Authenticate\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 9,\n                        \"options\": {\"default\": 0}\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"clientVersion\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"device\",\n                        \"id\": 12\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"deviceId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"manufacturer\",\n                        \"id\": 13\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"platform\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"platformVersion\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"authenticationToken\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionId\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionRouteKey\",\n                        \"id\": 10\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"remoteAddress\",\n                        \"id\": 11\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 8\n                    }\n                ]\n            },\n            {\n                \"name\": \"AuthenticateResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"redirect\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"roles\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"Bye\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"ByeResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"SessionDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Type\",\n                        \"name\": \"type\",\n                        \"id\": 1,\n                        \"options\": {\"default\": \"Offer\"}\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sdp\",\n                        \"id\": 2\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"Type\",\n                        \"values\": [\n                            {\n                                \"name\": \"Offer\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"Answer\",\n                                \"id\": 1\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"originStreamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"originStreamIds\",\n                        \"id\": 10\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"connectUri\",\n                        \"id\": 8\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"connectOptions\",\n                        \"id\": 9\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"userAgent\",\n                        \"id\": 11\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SetRemoteDescription\",\n                        \"name\": \"setRemoteDescription\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateOfferDescription\",\n                        \"name\": \"createOfferDescription\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateAnswerDescription\",\n                        \"name\": \"createAnswerDescription\",\n                        \"id\": 7\n                    }\n                ]\n            },\n            {\n                \"name\": \"IceServer\",\n                \"fields\": [\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"urls\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"username\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"credential\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"RtcConfiguration\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"BundlePolicy\",\n                        \"name\": \"bundlePolicy\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"iceCandidatePoolSize\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"IceServer\",\n                        \"name\": \"iceServers\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"IceTransportPolicy\",\n                        \"name\": \"iceTransportPolicy\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"peerIdentity\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"RtcpMuxPolicy\",\n                        \"name\": \"rtcpMuxPolicy\",\n                        \"id\": 7\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"BundlePolicy\",\n                        \"values\": [\n                            {\n                                \"name\": \"BundlePolicyBalanced\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"BundlePolicyMaxCompat\",\n                                \"id\": 2\n                            },\n                            {\n                                \"name\": \"BundlePolicyMaxBundle\",\n                                \"id\": 3\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"IceTransportPolicy\",\n                        \"values\": [\n                            {\n                                \"name\": \"IceTransportPolicyAll\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"IceTransportPolicyPublic\",\n                                \"id\": 2\n                            },\n                            {\n                                \"name\": \"IceTransportPolicyRelay\",\n                                \"id\": 3\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"RtcpMuxPolicy\",\n                        \"values\": [\n                            {\n                                \"name\": \"RtcpMuxPolicyNegotiate\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"RtcpMuxPolicyRequire\",\n                                \"id\": 2\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"instanceRouteKey\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"streamUris\",\n                        \"id\": 8\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"RtcConfiguration\",\n                        \"name\": \"rtcConfiguration\",\n                        \"id\": 9\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SetRemoteDescriptionResponse\",\n                        \"name\": \"setRemoteDescriptionResponse\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateOfferDescriptionResponse\",\n                        \"name\": \"createOfferDescriptionResponse\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateAnswerDescriptionResponse\",\n                        \"name\": \"createAnswerDescriptionResponse\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 7\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"offset\",\n                        \"id\": 10,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetLocalDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetLocalDescriptionResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetRemoteDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetRemoteDescriptionResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateOfferDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateOfferDescriptionResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateAnswerDescription\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"CreateAnswerDescriptionResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"SessionDescription\",\n                        \"name\": \"sessionDescription\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"IceCandidate\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"candidate\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"sdpMLineIndex\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sdpMid\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"AddIceCandidates\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"IceCandidate\",\n                        \"name\": \"candidates\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 4,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"AddIceCandidatesResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateStreamState\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"signalingState\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"iceGatheringState\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"iceConnectionState\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 5,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"UpdateStreamStateResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"DestroyStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"DestroyStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"ConnectionDisconnected\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"reasonCode\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"description\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"ConnectionDisconnectedResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamStarted\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SourceStreamStarted\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamEnded\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"continuationId\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"routeKey\",\n                        \"id\": 6\n                    }\n                ]\n            },\n            {\n                \"name\": \"SourceStreamEnded\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamEndedResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"continuationId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"routeKey\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamIdle\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamArchived\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"startTime\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"uri\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SessionEnded\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"float\",\n                        \"name\": \"duration\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"ResourceIdle\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"routeKey\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"ResourceIdleResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamPlaylist\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"PlaylistType\",\n                        \"name\": \"playlistType\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"uri\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bool\",\n                        \"name\": \"isVariant\",\n                        \"id\": 5,\n                        \"options\": {\"default\": true}\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"PlaylistType\",\n                        \"values\": [\n                            {\n                                \"name\": \"Live\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"OnDemand\",\n                                \"id\": 1\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamRtmp\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"uri\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"height\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"bitrate\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendEventToClient\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"type\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bytes\",\n                        \"name\": \"payload\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendEventToClientResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendRequestToClient\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"connectionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"type\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bytes\",\n                        \"name\": \"payload\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SendRequestToClientResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"type\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"bytes\",\n                        \"name\": \"payload\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetupStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"CreateStream\",\n                        \"name\": \"createStream\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetupStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"CreateStreamResponse\",\n                        \"name\": \"createStreamResponse\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetupPlaylistStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"tags\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"PlaylistStreamManifest\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"manifest\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"bool\",\n                        \"name\": \"isProtectedContent\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"drmToken\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetupPlaylistStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"PlaylistStreamManifest\",\n                        \"name\": \"manifests\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint64\",\n                        \"name\": \"offset\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 0}\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamDataQuality\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint64\",\n                        \"name\": \"timestamp\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"DataQualityStatus\",\n                        \"name\": \"status\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"DataQualityReason\",\n                        \"name\": \"reason\",\n                        \"id\": 5\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"DataQualityStatus\",\n                        \"values\": [\n                            {\n                                \"name\": \"NoData\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"AudioOnly\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"All\",\n                                \"id\": 2\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"DataQualityReason\",\n                        \"values\": [\n                            {\n                                \"name\": \"None\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"UploadLimited\",\n                                \"id\": 1\n                            },\n                            {\n                                \"name\": \"DownloadLimited\",\n                                \"id\": 2\n                            },\n                            {\n                                \"name\": \"PublisherLimited\",\n                                \"id\": 3\n                            },\n                            {\n                                \"name\": \"NetworkLimited\",\n                                \"id\": 4\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"StreamDataQualityResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"CallbackEvent\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"apiVersion\",\n                        \"id\": 1,\n                        \"options\": {\"default\": 0}\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"entity\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"what\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"data\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"Uri\",\n                \"fields\": [\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"protocol\",\n                        \"id\": 1,\n                        \"options\": {\"default\": \"http\"}\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"host\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"port\",\n                        \"id\": 3,\n                        \"options\": {\"default\": 80}\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"method\",\n                        \"id\": 4,\n                        \"options\": {\"default\": \"POST\"}\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"path\",\n                        \"id\": 5,\n                        \"options\": {\"default\": \"/\"}\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetApplicationCallback\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"Uri\",\n                        \"name\": \"callback\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"SetApplicationCallbackResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"endpoint\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueAuthenticationToken\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 3\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueAuthenticationTokenResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"authenticationToken\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueStreamToken\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"originStreamId\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"alternateOriginStreamIds\",\n                        \"id\": 6\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 5\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"bool\",\n                        \"name\": \"permissive\",\n                        \"id\": 7,\n                        \"options\": {\"default\": false}\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueStreamTokenResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueDrmToken\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"sessionId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"originStreamId\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"capabilities\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"IssueDrmTokenResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"drmToken\",\n                        \"id\": 2\n                    }\n                ]\n            },\n            {\n                \"name\": \"TerminateStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 3,\n                        \"oneof\": \"streamOrToken\"\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 5,\n                        \"oneof\": \"streamOrToken\"\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 4\n                    }\n                ],\n                \"oneofs\": {\n                    \"streamOrToken\": [\n                        3,\n                        5\n                    ]\n                }\n            },\n            {\n                \"name\": \"TerminateStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"DeleteStream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 3,\n                        \"oneof\": \"streamOrToken\"\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"streamToken\",\n                        \"id\": 5,\n                        \"oneof\": \"streamOrToken\"\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"reason\",\n                        \"id\": 4\n                    }\n                ],\n                \"oneofs\": {\n                    \"streamOrToken\": [\n                        3,\n                        5\n                    ]\n                }\n            },\n            {\n                \"name\": \"DeleteStreamResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"Stream\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 1\n                    }\n                ]\n            },\n            {\n                \"name\": \"ListStreams\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"start\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"uint32\",\n                        \"name\": \"length\",\n                        \"id\": 4\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 5\n                    }\n                ]\n            },\n            {\n                \"name\": \"ListStreamsResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"string\",\n                        \"name\": \"start\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"uint32\",\n                        \"name\": \"length\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Stream\",\n                        \"name\": \"streams\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"GetPlaylistUris\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"applicationId\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"secret\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"streamId\",\n                        \"id\": 3\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"string\",\n                        \"name\": \"options\",\n                        \"id\": 4\n                    }\n                ]\n            },\n            {\n                \"name\": \"GetPlaylistUrisResponse\",\n                \"fields\": [\n                    {\n                        \"rule\": \"required\",\n                        \"type\": \"string\",\n                        \"name\": \"status\",\n                        \"id\": 1\n                    },\n                    {\n                        \"rule\": \"repeated\",\n                        \"type\": \"Playlist\",\n                        \"name\": \"playlists\",\n                        \"id\": 2\n                    },\n                    {\n                        \"rule\": \"optional\",\n                        \"type\": \"StreamMetadata\",\n                        \"name\": \"streamInfo\",\n                        \"id\": 3\n                    }\n                ],\n                \"messages\": [\n                    {\n                        \"name\": \"PlaylistMetadata\",\n                        \"fields\": [\n                            {\n                                \"rule\": \"optional\",\n                                \"type\": \"uint32\",\n                                \"name\": \"bitrate\",\n                                \"id\": 1\n                            },\n                            {\n                                \"rule\": \"optional\",\n                                \"type\": \"uint32\",\n                                \"name\": \"height\",\n                                \"id\": 2\n                            },\n                            {\n                                \"rule\": \"optional\",\n                                \"type\": \"float\",\n                                \"name\": \"framesPerSecond\",\n                                \"id\": 3\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"StreamMetadata\",\n                        \"fields\": [\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"string\",\n                                \"name\": \"startTime\",\n                                \"id\": 1\n                            },\n                            {\n                                \"rule\": \"optional\",\n                                \"type\": \"string\",\n                                \"name\": \"endTime\",\n                                \"id\": 2\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Playlist\",\n                        \"fields\": [\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"string\",\n                                \"name\": \"name\",\n                                \"id\": 1\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"PlaylistType\",\n                                \"name\": \"type\",\n                                \"id\": 2\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"string\",\n                                \"name\": \"uri\",\n                                \"id\": 3\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"bool\",\n                                \"name\": \"isVariant\",\n                                \"id\": 4\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"bool\",\n                                \"name\": \"isProtected\",\n                                \"id\": 5\n                            },\n                            {\n                                \"rule\": \"required\",\n                                \"type\": \"PlaylistMetadata\",\n                                \"name\": \"info\",\n                                \"id\": 6\n                            }\n                        ]\n                    }\n                ],\n                \"enums\": [\n                    {\n                        \"name\": \"PlaylistType\",\n                        \"values\": [\n                            {\n                                \"name\": \"Hls\",\n                                \"id\": 0\n                            },\n                            {\n                                \"name\": \"Dash\",\n                                \"id\": 1\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    };\n\n    return pcastProto;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/protocol/pcastProto.json.js\n// module id = 84\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './Channel'\n], function(_, assert, Channel) {\n    'use strict';\n\n    function ChannelService(roomService) {\n        assert.isObject(roomService, 'roomService');\n\n        this._roomService = roomService;\n    }\n\n    ChannelService.prototype.start = function start() {\n        return this._roomService.start.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.getChannelInfo = function getChannelInfo(channelId, alias, callback) {\n        if (channelId) {\n            assert.isStringNotEmpty(channelId, 'channelId');\n        } else {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        return this._roomService.getRoomInfo(channelId, alias, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelService.prototype.createChannel = function createChannel(channel, callback) {\n        assert.isObject(channel, 'channel');\n        assert.isStringNotEmpty(channel.name, 'channel.name');\n        assert.isStringNotEmpty(channel.type, 'channel.type');\n        assert.isString(channel.description, 'channel.description');\n        assert.isFunction(callback, 'callback');\n\n        return this._roomService.createRoom(channel, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelService.prototype.enterChannel = function enterChannel(channelId, alias, callback) {\n        if (channelId) {\n            assert.isStringNotEmpty(channelId, 'roomId');\n        } else {\n            assert.isStringNotEmpty(alias, 'alias');\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        return this._roomService.enterRoom(channelId, alias, _.bind(wrapResponseWithChannelPrefixesAndContinue, null, callback));\n    };\n\n    ChannelService.prototype.leaveChannel = function leaveChannel() {\n        return this._roomService.leaveRoom.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.getChatService = function getChatService() {\n        return this._roomService.getChatService.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.getSelf = function getSelf() {\n        return this._roomService.getSelf.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.getObservableActiveChannel = function getObservableActiveChannel() {\n        return this._roomService.getObservableActiveRoom.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.updateSelf = function updateSelf() {\n        return this._roomService.updateSelf.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.updateMember = function updateMember() {\n        return this._roomService.updateMember.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.updateChannel = function updateChannel() {\n        return this._roomService.updateRoom.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.revertChannelChanges = function revertChannelChanges() {\n        return this._roomService.revertRoomChanges.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.revertMemberChanges = function revertMemberChanges() {\n        return this._roomService.revertMemberChanges.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.isInChannel = function isInChannel() {\n        return this._roomService.isInRoom.apply(this._roomService, arguments);\n    };\n\n    ChannelService.prototype.toString = function toString() {\n        return 'ChannelService';\n    };\n\n    ChannelService.prototype.stop = function stop() {\n        return this._roomService.stop.apply(this._roomService, arguments);\n    };\n\n    function wrapResponseWithChannelPrefixesAndContinue(callback, error, response) {\n        if (response && response.room) {\n            response.channel = new Channel(response.room);\n\n            delete response.room;\n        }\n\n        return callback(error, response);\n    }\n\n    return ChannelService;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/ChannelService.js\n// module id = 85\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    './Room'\n], function(_, assert, observable, Room) {\n    'use strict';\n\n    function ImmutableRoom(roomService, id, alias, name, description, type, members, bridgeId, pin) {\n        this.init(roomService, id, alias, name, description, type, members, bridgeId, pin);\n    }\n\n    ImmutableRoom.prototype.init = function init(roomService, id, alias, name, description, type, members, bridgeId, pin) {\n        // Don't pass roomService.\n        this._room = new Room(null, id, alias, name, description, type, members, bridgeId, pin);\n\n        makeArrayOrObjectObservablesImmutable(this._room);\n    };\n\n    ImmutableRoom.prototype.getRoomId = function getImmutableRoomId() {\n        return this._room.getRoomId();\n    };\n\n    ImmutableRoom.prototype.getObservableAlias = function getObservableAlias() {\n        return this._room.getObservableAlias();\n    };\n\n    ImmutableRoom.prototype.getObservableName = function getObservableName() {\n        return this._room.getObservableName();\n    };\n\n    ImmutableRoom.prototype.getObservableDescription = function getObservableDescription() {\n        return this._room.getObservableDescription();\n    };\n\n    ImmutableRoom.prototype.getObservableType = function getObservableType() {\n        return this._room.getObservableType();\n    };\n\n    ImmutableRoom.prototype.getObservableMembers = function getObservableMembers() {\n        return this._room.getObservableMembers();\n    };\n\n    ImmutableRoom.prototype.getObservableBridgeId = function getObservableBridgeId() {\n        return this._room.getObservableBridgeId();\n    };\n\n    ImmutableRoom.prototype.getObservablePin = function getObservablePin() {\n        return this._room.getObservablePin();\n    };\n\n    ImmutableRoom.prototype.toString = function toString() {\n        return this._room.toString();\n    };\n\n    ImmutableRoom.prototype.toJson = function toJson() {\n        return this._room.toJson();\n    };\n\n    ImmutableRoom.prototype.commitChanges = throwImmutableError;\n    ImmutableRoom.prototype.reload = throwImmutableError;\n    ImmutableRoom.prototype._update = throwImmutableError;\n    ImmutableRoom.prototype._addMembers = throwImmutableError;\n    ImmutableRoom.prototype._removeMembers = throwImmutableError;\n    ImmutableRoom.prototype._updateMembers = throwImmutableError;\n\n    function throwImmutableError() {\n        throw new Error('ImmutableRoom is Immutable');\n    }\n\n    function throwImmutableSubscribeError() {\n        throw new Error('Unable to subscribe to Immutable [ImmutableRoom]');\n    }\n\n    function makeArrayOrObjectObservablesImmutable(collection) {\n        if (_.isArray(collection)) {\n            _.forEach(collection, function(value) {\n                wrapObservableAndAnyObservableProperties(value);\n            });\n        } else if (_.isObject(collection)) {\n            _.forOwn(collection, function(value) {\n                wrapObservableAndAnyObservableProperties(value);\n            });\n        }\n    }\n\n    function wrapObservableAndAnyObservableProperties(value) {\n        wrapObservable(value);\n        makeArrayOrObjectObservablesImmutable(value);\n    }\n\n    function wrapObservable(value) {\n        if (value instanceof observable.Observable || value instanceof observable.ObservableArray) {\n            value.setValue = throwImmutableError;\n            value.subscribe = throwImmutableSubscribeError;\n\n            var observableValue = value.getValue();\n\n            makeArrayOrObjectObservablesImmutable(observableValue);\n        }\n    }\n\n    return ImmutableRoom;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/room/ImmutableRoom.js\n// module id = 86\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-rtc'\n], function(_, assert) {\n    'use strict';\n\n    var h264ProfileIdRegex = /profile-level-id=[^;\\n]*/;\n\n    function sdpUtil() {\n\n    }\n\n    sdpUtil.prototype.getH264ProfileId = function getUserMedia(offerSdp) {\n        assert.isStringNotEmpty(offerSdp, 'offerSdp');\n\n        var h264ProfileIdMatch = _.get(offerSdp.match(h264ProfileIdRegex), '0', '');\n\n        return _.get(h264ProfileIdMatch.split('='), '1', null);\n    };\n\n    sdpUtil.prototype.replaceH264ProfileId = function getUserMedia(offerSdp, newProfileId) {\n        assert.isStringNotEmpty(offerSdp, 'offerSdp');\n        assert.isStringNotEmpty(newProfileId, 'newProfileId');\n\n        var currentProfileId = this.getH264ProfileId(offerSdp);\n\n        if (!currentProfileId) {\n            return offerSdp;\n        }\n\n        return offerSdp.replace('profile-level-id=' + currentProfileId, 'profile-level-id=' + newProfileId);\n    };\n\n    return new sdpUtil();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/sdpUtil.js\n// module id = 87\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-http',\n    'phenix-web-disposable',\n    'phenix-rtc',\n    'phenix-web-application-activity-detector',\n    '../DimensionsChangedMonitor',\n    './stream.json'\n], function(_, assert, event, http, disposable, rtc, applicationActivityDetector, DimensionsChangedMonitor, streamEnums) {\n    'use strict';\n\n    var streamEndedBeforeSetupTimeout = 5000;\n    var numberOfTimesToRetryHlsStalledHlsStream = 5;\n    var originStreamReadyDuration = 6000;\n    var defaultUnreadableContentErrorTimeout = 250;\n    var timeoutForStallWithoutProgressToRestart = 6000;\n    var minTimeBeforeNextReload = 15000;\n    var defaultTimeoutForBackgroundTabBeforeDispose = 3000;\n\n    function HlsRenderer(streamId, uri, streamTelemetry, options, logger) {\n        this._logger = logger;\n        this._streamId = streamId;\n        this._playlistUri = encodeURI(uri).replace(/[#]/g, '%23');\n        this._bufferSizeHistory = [];\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._element = null;\n        this._dimensionsChangedMonitor = new DimensionsChangedMonitor(logger);\n        this._lastProgress = {\n            time: 0,\n            buffered: null,\n            averageLength: 0,\n            count: 0,\n            setupRetry: 0,\n            lastCurrentTime: 0,\n            lastCurrentTimeOccurenceTimestamp: 0\n        };\n        this._namedEvents = new event.NamedEvents();\n\n        this._onStalled = _.bind(stalled, this);\n        this._onProgress = _.bind(onProgress, this);\n        this._onEnded = _.bind(ended, this);\n        this._onError = _.bind(onError, this);\n        this._onWaiting = _.bind(waiting, this);\n    }\n\n    HlsRenderer.prototype.on = function(name, callback) {\n        return this._namedEvents.listen(name, callback);\n    };\n\n    HlsRenderer.prototype.start = function(elementToAttachTo) {\n        try {\n            var timeSinceOriginStreamStart = _.now() - this._options.originStartTime;\n\n            this._disposables = new disposable.DisposableList();\n\n            this._disposables.add(applicationActivityDetector.onBackground(_.bind(handleForegroundChange, this, false)));\n            this._disposables.add(applicationActivityDetector.onForeground(_.bind(handleForegroundChange, this, true)));\n\n            this._streamTelemetry.recordTimeToFirstFrame(elementToAttachTo);\n            this._streamTelemetry.recordRebuffering(elementToAttachTo);\n            this._streamTelemetry.recordVideoResolutionChanges(this, elementToAttachTo);\n\n            if (timeSinceOriginStreamStart < originStreamReadyDuration && this._options.isDrmProtectedContent) {\n                setTimeout(_.bind(setupPlayer, this, elementToAttachTo), originStreamReadyDuration);\n            } else {\n                setupPlayer.call(this, elementToAttachTo);\n            }\n        } catch (e) {\n            this._logger.error('[%s] Error while loading HLS live stream [%s]', this._streamId, e.code, e);\n\n            this._namedEvents.fire(streamEnums.rendererEvents.error.name, ['hls', e]);\n        }\n\n        return elementToAttachTo;\n    };\n\n    HlsRenderer.prototype.stop = function(reason, waitForLastChunk) {\n        var that = this;\n\n        if (that._waitingForFinalization) {\n            return;\n        }\n\n        if (waitForLastChunk) {\n            return that._waitForLastChunk = true;\n        }\n\n        this._dimensionsChangedMonitor.stop();\n\n        this._streamTelemetry.stop();\n\n        this._disposables.dispose();\n\n        if (this._element) {\n            var finalizeStreamEnded = function finalizeStreamEnded() {\n                if (that._element) {\n                    _.removeEventListener(that._element, 'error', that._onError, true);\n                    _.removeEventListener(that._element, 'stalled', that._onStalled, false);\n                    _.removeEventListener(that._element, 'pause', that._onStalled, false);\n                    _.removeEventListener(that._element, 'suspend', that._onStalled, false);\n                    _.removeEventListener(that._element, 'progress', that._onProgress, false);\n                    _.removeEventListener(that._element, 'ended', that._onEnded, false);\n                    _.removeEventListener(that._element, 'waiting', that._onWaiting, false);\n\n                    if (rtc.browser === 'Safari' && rtc.browserVersion >= 11) {\n                        that._element.setAttribute('src', '');\n                    } else {\n                        that._element.src = '';\n                    }\n\n                    that._element = null;\n                }\n\n                var reason = '';\n\n                that._namedEvents.fire(streamEnums.rendererEvents.ended.name, [reason]);\n            };\n\n            try {\n                that._element.pause();\n\n                that._logger.info('[%s] HLS live stream has been destroyed', that._streamId);\n\n                finalizeStreamEnded();\n            } catch (e) {\n                that._logger.error('[%s] Error while destroying HLS live stream [%s]', that._streamId, e.code, e);\n\n                finalizeStreamEnded();\n\n                that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['hls', e]);\n            }\n\n            that._waitingForFinalization = true;\n        }\n    };\n\n    HlsRenderer.prototype.getStats = function() {\n        if (!this._element) {\n            return {\n                width: 0,\n                height: 0,\n                currentTime: 0.0,\n                lag: 0.0,\n                networkState: streamEnums.networkStates.networkNoSource.id\n            };\n        }\n\n        var currentTime = this._element ? this._element.currentTime || 0.0 : 0.0;\n        var buffered = (this._element && this._element.buffered && this._element.buffered.length > 0) ? this._element.buffered.end(this._element.buffered.length - 1) : 0;\n        var currentBufferSize = Math.max(0, buffered - currentTime);\n\n        this._bufferSizeHistory.push(currentBufferSize);\n\n        if (this._bufferSizeHistory.length > 15) {\n            this._bufferSizeHistory.shift();\n        }\n\n        var estimatedBufferSize = 0;\n\n        for (var i = 0, len = this._bufferSizeHistory.length; i < len; i++) {\n            estimatedBufferSize = Math.max(estimatedBufferSize, this._bufferSizeHistory[i]);\n        }\n\n        var chunkDuration = 2.0; // TODO (sbi) Parse chunk duration from manifest\n        var trueCurrentTime = (_.now() - this._options.originStartTime) / 1000;\n        var lag = 2.0 * chunkDuration + estimatedBufferSize;\n        var estimatedCurrentTime = trueCurrentTime - lag;\n\n        return {\n            width: this._element.videoWidth || this._element.width,\n            height: this._element.videoHeight || this._element.height,\n            currentTime: estimatedCurrentTime,\n            originTime: trueCurrentTime,\n            lag: lag,\n            networkState: this._element.networkState\n        };\n    };\n\n    HlsRenderer.prototype.setDataQualityChangedCallback = function(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.dataQualityChangedCallback = callback;\n    };\n\n    HlsRenderer.prototype.getPlayer = function() {\n        return null;\n    };\n\n    HlsRenderer.prototype.addVideoDisplayDimensionsChangedCallback = function(callback, options) {\n        this._dimensionsChangedMonitor.addVideoDisplayDimensionsChangedCallback(callback, options);\n    };\n\n    function setupPlayer(elementToAttachTo) {\n        rtc.attachUriStream(elementToAttachTo, this._playlistUri);\n\n        if (this._options.receiveAudio === false) {\n            elementToAttachTo.muted = true;\n        }\n\n        _.addEventListener(elementToAttachTo, 'error', this._onError, true);\n        _.addEventListener(elementToAttachTo, 'stalled', this._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'pause', this._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'suspend', this._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'progress', this._onProgress, false);\n        _.addEventListener(elementToAttachTo, 'ended', this._onEnded, false);\n        _.addEventListener(elementToAttachTo, 'waiting', this._onWaiting, false);\n\n        this._element = elementToAttachTo;\n\n        this._dimensionsChangedMonitor.start(this, this._element);\n    }\n\n    function onError(e) {\n        var that = this;\n        var timeout = defaultUnreadableContentErrorTimeout * that._lastProgress.setupRetry * that._lastProgress.setupRetry;\n        var hasNotStartedYet = that._lastProgress.count === 0;\n        var hasNotExceededMaxRetries = that._lastProgress.setupRetry <= numberOfTimesToRetryHlsStalledHlsStream;\n\n        if (_.get(this._element, ['error', 'code']) === 4 && hasNotStartedYet && hasNotExceededMaxRetries) {\n            return setTimeout(function() {\n                that._lastProgress.setupRetry++;\n                reload.call(that);\n            }, Math.max(timeout, defaultUnreadableContentErrorTimeout));\n        }\n\n        this._namedEvents.fire(streamEnums.rendererEvents.error.name, ['player', e]);\n    }\n\n    function onProgress() {\n        this._lastProgress.time = _.now();\n\n        if (this._element.buffered.length === 0) {\n            return this._logger.debug('[%s] Hls stream progress event fired without any buffered content', this._streamId);\n        }\n\n        var bufferedEnd = this._element.buffered.end(this._element.buffered.length - 1);\n\n        if (this._lastProgress.buffered === bufferedEnd) {\n            return;\n        }\n\n        // Start and end times are unreliable for overall length of stream.\n        if (this._lastProgress.buffered !== null) {\n            var oldTimeElapsed = this._lastProgress.averageLength * this._lastProgress.count;\n            var newTimeElapsed = oldTimeElapsed + (bufferedEnd - this._lastProgress.buffered);\n\n            this._lastProgress.count += 1;\n            this._lastProgress.averageLength = newTimeElapsed / this._lastProgress.count;\n\n            if (this._lastProgress.lastCurrentTime !== this._element.currentTime) {\n                this._lastProgress.lastCurrentTimeOccurenceTimestamp = _.now();\n            }\n\n            var hasExceededStallTimeout = this._lastProgress.lastCurrentTimeOccurenceTimestamp && _.now() - this._lastProgress.lastCurrentTimeOccurenceTimestamp > timeoutForStallWithoutProgressToRestart;\n\n            if (hasExceededStallTimeout && this._element && !this._element.paused && canReload.call(this)) {\n                this._logger.warn('Reloading stream after current time has not changed for [%s] seconds due to unregistered stall.', timeoutForStallWithoutProgressToRestart / 1000);\n\n                reloadIfAble.call(this);\n            }\n        }\n\n        this._lastProgress.buffered = bufferedEnd;\n        this._lastProgress.setupRetry = 0;\n        this._lastProgress.lastCurrentTime = this._element.currentTime;\n    }\n\n    function stalled() {\n        this._logger.info('[%s] Loading Hls stream stalled.', this._streamId);\n\n        if (this._lastProgress.setupRetry > numberOfTimesToRetryHlsStalledHlsStream) {\n            return this._logger.warn('[%s] Unable to recover from stalled Hls Stream.', this._streamId);\n        }\n\n        var that = this;\n        var currentVideoTime = this._element.currentTime;\n\n        if (this._lastProgress.count === 0) {\n            this._lastProgress.setupRetry++;\n            reload.call(that);\n        } else {\n            setTimeout(function() {\n                if (that._lastProgress.count === 0) {\n                    that._lastProgress.setupRetry++;\n                    reload.call(that);\n                }\n            }, getTimeoutOrMinimum.call(that));\n\n            setTimeout(function() {\n                if (that._element && that._element.currentTime === currentVideoTime && !that._element.paused && canReload.call(that)) {\n                    that._logger.warn('Reloading stream after being stalled for [%s] seconds', timeoutForStallWithoutProgressToRestart / 1000);\n\n                    reloadIfAble.call(that);\n                }\n            }, timeoutForStallWithoutProgressToRestart);\n\n            setTimeout(_.bind(endIfReady, that), streamEndedBeforeSetupTimeout);\n        }\n    }\n\n    function ended() {\n        this._logger.info('[%s] Hls stream ended', this._streamId);\n        this.stop('ended');\n    }\n\n    function waiting() {\n        this._logger.info('Time elapsed since last progress [%s]', _.now() - this._lastProgress.time);\n\n        setTimeout(_.bind(endIfReady, this), getTimeoutOrMinimum.call(this));\n    }\n\n    function canReload() {\n        var hasElapsedMinTimeSinceLastReload = !this._lastReloadTime || _.now() - this._lastReloadTime > minTimeBeforeNextReload;\n\n        return this._element && !this._waitForLastChunk && this._element.buffered.length !== 0 && hasElapsedMinTimeSinceLastReload;\n    }\n\n    function reloadIfAble() {\n        if (!canReload.call(this)) {\n            return;\n        }\n\n        this._logger.warn('Reloading unhealthy stream that was active for at least [%s] seconds', minTimeBeforeNextReload / 1000);\n\n        this._lastReloadTime = _.now();\n\n        reload.call(this);\n    }\n\n    function reload() {\n        this._logger.info('[%s] Attempting to reload Hls stream.', this._streamId);\n\n        try {\n            this._element.setAttribute('src', '');\n\n            this._element.setAttribute('src', this._playlistUri);\n        } catch (e) {\n            this._logger.warn('Error while reloading Hls stream [%s]', e);\n        }\n    }\n\n    function getTimeoutOrMinimum() {\n        return this._lastProgress.averageLength * 1.5 < 2000 ? 2000 : this._lastProgress.averageLength * 1.5;\n    }\n\n    function endIfReady() {\n        if (_.now() - this._lastProgress.time > getTimeoutOrMinimum.call(this) && this._waitForLastChunk) {\n            this.stop('ended');\n        }\n    }\n\n    function handleForegroundChange(isForeground) {\n        if (isForeground) {\n            clearTimeout(this._backgroundTimeout);\n\n            this._backgroundTimeout = null;\n\n            if (!this._backgroundThrottled) {\n                return;\n            }\n\n            this._backgroundThrottled = false;\n\n            this.start(this._element);\n\n            return;\n        }\n\n        var that = this;\n\n        this._backgroundTimeout = setTimeout(function() {\n            if (applicationActivityDetector.isForeground()) {\n                return;\n            }\n\n            if (!webkitVideoHasAudio(that._element)) {\n                that._logger.info('Detecting application [background] with muted video. Pausing playback until application focused again.');\n\n                that._element.pause();\n\n                that._backgroundThrottled = true;\n            }\n        }, defaultTimeoutForBackgroundTabBeforeDispose);\n    }\n\n    function webkitVideoHasAudio(video) {\n        if (video.muted) {\n            return false;\n        }\n\n        return _.get(video, ['webkitAudioDecodedByteCount'], 0) > 0 || _.get(video, ['audioTracks', 'length'], 0) > 0 || video.webkitHasAudio;\n    }\n\n    return HlsRenderer;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/HlsRenderer.js\n// module id = 88\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-rtc',\n    './ShakaRenderer',\n    './HlsRenderer',\n    './PhenixPlayerRenderer',\n    './stream.json'\n], function(_, assert, event, rtc, ShakaRenderer, HlsRenderer, PhenixPlayerRenderer, streamEnums) {\n    'use strict';\n\n    function PhenixLiveStream(type, streamId, uri, streamTelemetry, options, shaka, logger) {\n        this._type = type;\n        this._streamId = streamId;\n        this._uri = uri;\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._shaka = shaka;\n        this._logger = logger;\n        this._renderer = null;\n        this._element = null;\n        this._dimensionsChangedMonitor = null;\n        this._namedEvents = new event.NamedEvents();\n    }\n\n    PhenixLiveStream.prototype.on = function(name, callback) {\n        this._namedEvents.listen(name, callback);\n    };\n\n    PhenixLiveStream.prototype.createRenderer = function() {\n        switch (this._type) {\n        case streamEnums.types.dash.name:\n            if (this._shaka) {\n                this._renderer = new ShakaRenderer(this._streamId, this._uri, this._streamTelemetry, this._options, this._shaka, this._logger);\n            } else {\n                this._renderer = new PhenixPlayerRenderer(this._streamId, this._uri, this._streamTelemetry, this._options, this._logger);\n            }\n\n            break;\n        case streamEnums.types.hls.name:\n            if (PhenixPlayerRenderer.isSupported() && !this._options.useNativeHlsPlayer) {\n                this._renderer = new PhenixPlayerRenderer(this._streamId, this._uri, this._streamTelemetry, this._options, this._logger);\n            } else {\n                this._renderer = new HlsRenderer(this._streamId, this._uri, this._streamTelemetry, this._options, this._logger);\n            }\n\n            break;\n        default:\n            throw new Error('Unsupported Live stream Type ' + this._type);\n        }\n\n        var that = this;\n\n        this._renderer.on(streamEnums.rendererEvents.error.name, function(type, error) {\n            that._namedEvents.fire(streamEnums.streamEvents.playerError.name, [type, error]);\n        });\n        this._renderer.on(streamEnums.rendererEvents.ended.name, function(reason) {\n            that._namedEvents.fire(streamEnums.streamEvents.playerEnded.name, [reason]);\n        });\n\n        return this._renderer;\n    };\n\n    PhenixLiveStream.prototype.select = function select(trackSelectCallback) { // eslint-disable-line no-unused-vars\n        this._logger.warn('[%s] selection of tracks not supported for [%s] live streams', this._streamId, this._type);\n\n        return this;\n    };\n\n    PhenixLiveStream.prototype.setStreamEndedCallback = function setStreamEndedCallback(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.streamEndedCallback = callback;\n    };\n\n    PhenixLiveStream.prototype.setStreamErrorCallback = function setStreamErrorCallback(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.streamErrorCallback = callback;\n    };\n\n    PhenixLiveStream.prototype.stop = function stop(reason) {\n        if (!this.isActive()) {\n            return;\n        }\n\n        this._logger.info('[%s] stop media stream', this._streamId);\n\n        this._namedEvents.fire(streamEnums.streamEvents.stopped.name, [reason]);\n\n        this._isStopped = true;\n    };\n\n    PhenixLiveStream.prototype.monitor = function monitor(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n    };\n\n    PhenixLiveStream.prototype.getMonitor = function getMonitor() {\n        return null;\n    };\n\n    PhenixLiveStream.prototype.getStream = function getStream() {\n        this._logger.debug('[%s] stream not available for [%s] live streams', this._streamId, this._type);\n\n        return null;\n    };\n\n    PhenixLiveStream.prototype.isActive = function isActive() {\n        return !this._isStopped;\n    };\n\n    PhenixLiveStream.prototype.getStreamId = function getStreamId() {\n        return this._streamId;\n    };\n\n    PhenixLiveStream.prototype.getStats = function getStats() {\n        this._logger.debug('[%s] stats not available for [%s] live streams', this._streamId, this._type);\n\n        return null;\n    };\n\n    PhenixLiveStream.prototype.getRenderer = function getRenderer() {\n        return this._renderer;\n    };\n\n    return PhenixLiveStream;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/PhenixLiveStream.js\n// module id = 89\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-logging',\n    'phenix-web-event',\n    'phenix-web-http',\n    'phenix-web-player',\n    'phenix-rtc',\n    '../DimensionsChangedMonitor',\n    './stream.json'\n], function(_, assert, logging, event, http, phenixWebPlayer, rtc, DimensionsChangedMonitor, streamEnums) {\n    'use strict';\n\n    var bandwidthAt720 = 3000000;\n    var timeoutForStallWithoutProgressToRestart = 6000;\n    var minTimeBeforeNextReload = 15000;\n    var originStreamReadyDuration = 6000;\n\n    function PhenixPlayerRenderer(streamId, uri, streamTelemetry, options, logger) {\n        this._logger = logger;\n        this._streamId = streamId;\n        this._manifestUri = encodeURI(uri).replace(/[#]/g, '%23');\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._renderer = null;\n        this._element = null;\n        this._dimensionsChangedMonitor = new DimensionsChangedMonitor(logger);\n        this._lastProgress = {\n            time: 0,\n            buffered: null,\n            averageLength: 0,\n            count: 0,\n            lastCurrentTime: 0,\n            lastCurrentTimeOccurenceTimestamp: 0\n        };\n        this._namedEvents = new event.NamedEvents();\n\n        this._onStalled = _.bind(stalled, this);\n        this._onProgress = _.bind(onProgress, this);\n        this._onEnded = _.bind(ended, this);\n    }\n\n    PhenixPlayerRenderer.isSupported = function() {\n        return phenixWebPlayer.isSupported;\n    };\n\n    PhenixPlayerRenderer.prototype.on = function(name, callback) {\n        return this._namedEvents.listen(name, callback);\n    };\n\n    PhenixPlayerRenderer.prototype.start = function(elementToAttachTo) {\n        var that = this;\n        var loggerAtWarningThreshold = createWarningThresholdLogger(this._logger);\n\n        this._throttledLogger = loggerAtWarningThreshold;\n        this._element = elementToAttachTo;\n\n        this._streamTelemetry.recordTimeToFirstFrame(elementToAttachTo);\n        this._streamTelemetry.recordRebuffering(elementToAttachTo);\n        this._streamTelemetry.recordVideoResolutionChanges(this, elementToAttachTo);\n        this._streamTelemetry.recordVideoPlayingAndPausing(elementToAttachTo);\n\n        setupPlayer.call(that);\n\n        if (that._options.receiveAudio === false) {\n            elementToAttachTo.muted = true;\n        }\n\n        _.addEventListener(elementToAttachTo, 'stalled', that._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'pause', that._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'suspend', that._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'progress', that._onProgress, false);\n        _.addEventListener(elementToAttachTo, 'ended', that._onEnded, false);\n\n        that._dimensionsChangedMonitor.start(this, elementToAttachTo);\n\n        return elementToAttachTo;\n    };\n\n    PhenixPlayerRenderer.prototype.stop = function(reason, waitForLastChunk) {\n        var that = this;\n\n        if (that._waitingForFinalization) {\n            return;\n        }\n\n        if (waitForLastChunk) {\n            return that._waitForLastChunk = true;\n        }\n\n        this._dimensionsChangedMonitor.stop();\n\n        this._streamTelemetry.stop();\n\n        if (this._player) {\n            var finalizeStreamEnded = function finalizeStreamEnded() {\n                var reason = '';\n\n                if (that._element) {\n                    _.removeEventListener(that._element, 'stalled', that._onStalled, false);\n                    _.removeEventListener(that._element, 'pause', that._onStalled, false);\n                    _.removeEventListener(that._element, 'suspend', that._onStalled, false);\n                    _.removeEventListener(that._element, 'progress', that._onProgress, false);\n                    _.removeEventListener(that._element, 'ended', that._onEnded, false);\n\n                    if (rtc.browser === 'Edge') {\n                        that._element.src = '';\n                    }\n                }\n\n                that._namedEvents.fire(streamEnums.rendererEvents.ended.name, [reason]);\n\n                that._player = null;\n                that._element = null;\n            };\n\n            that._waitingForFinalization = true;\n\n            try {\n                that._player.dispose();\n\n                that._logger.info('[%s] Phenix live stream has been destroyed', that._streamId);\n\n                finalizeStreamEnded();\n            } catch (e) {\n                that._logger.error('[%s] Error while destroying Phenix live stream player [%s]', that._streamId, e.code, e);\n\n                finalizeStreamEnded();\n\n                that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['phenix-player', e]);\n            }\n        }\n    };\n\n    PhenixPlayerRenderer.prototype.getStats = function() {\n        if (!this._player) {\n            return {\n                width: 0,\n                height: 0,\n                currentTime: 0.0,\n                lag: 0.0,\n                networkState: streamEnums.networkStates.networkNoSource.id\n            };\n        }\n\n        var stat = this._player.getStats();\n        var currentTime = stat.currentTime || this._element.currentTime;\n        var trueCurrentTime = (_.now() - this._options.originStartTime) / 1000;\n\n        if (stat.isNative && stat.deliveryType === 'Hls') {\n            stat.currentTime = trueCurrentTime - stat.lag;\n        }\n\n        if (!stat.isNative) {\n            stat.lag = Math.max(0.0, trueCurrentTime - currentTime);\n        }\n\n        if (stat.estimatedBandwidth > 0) {\n            stat.networkState = streamEnums.networkStates.networkLoading.id;\n        } else if (stat.playTime > 0) {\n            stat.networkState = streamEnums.networkStates.networkIdle.id;\n        } else if (stat.video) {\n            stat.networkState = streamEnums.networkStates.networkEmpty.id;\n        } else {\n            stat.networkState = streamEnums.networkStates.networkNoSource.id;\n        }\n\n        return stat;\n    };\n\n    PhenixPlayerRenderer.prototype.setDataQualityChangedCallback = function(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.dataQualityChangedCallback = callback;\n    };\n\n    PhenixPlayerRenderer.prototype.getPlayer = function() {\n        return this._player;\n    };\n\n    PhenixPlayerRenderer.prototype.addVideoDisplayDimensionsChangedCallback = function(callback, options) {\n        this._dimensionsChangedMonitor.addVideoDisplayDimensionsChangedCallback(callback, options);\n    };\n\n    function setupPlayer() {\n        var that = this;\n        var playerOptions = _.assign({bandwidthToStartAt: bandwidthAt720}, that._options);\n\n        if (_.isNumber(that._options.targetMinBufferSize)) {\n            playerOptions.targetMinBufferSize = that._options.targetMinBufferSize;\n            playerOptions.targetBufferSizeInMS = that._options.targetMinBufferSize * 1000;\n        }\n\n        if (_.includes(this._manifestUri, '.mpd')) {\n            if (that._options.isDrmProtectedContent) {\n                playerOptions.drm = {\n                    'com.widevine.alpha': {\n                        serverCertificateUrl: that._options.widevineServiceCertificateUrl,\n                        mediaKeySystemConfiguration: {persistentState: 'required'}\n                    },\n                    'com.microsoft.playready': {licenseServerUrl: that._options.playreadyLicenseUrl}\n                };\n            }\n        }\n\n        var webPlayer = new phenixWebPlayer.WebPlayer(this._throttledLogger, this._element, playerOptions);\n        var timeSinceOriginStreamStart = _.now() - this._options.originStartTime;\n\n        if (timeSinceOriginStreamStart < originStreamReadyDuration && this._options.isDrmProtectedContent && _.includes(this._manifestUri, '.m3u8')) {\n            setTimeout(_.bind(webPlayer.start, webPlayer, that._manifestUri), originStreamReadyDuration);\n        } else {\n            webPlayer.start(that._manifestUri);\n        }\n\n        that._player = webPlayer;\n\n        _.addEventListener(that._player, 'error', _.bind(handleError, that));\n    }\n\n    function handleError(e) {\n        if (canReload.call(this) && e && (e.code === 3 || e.severity === phenixWebPlayer.errors.severity.RECOVERABLE)) {\n            return reloadIfAble.call(this);\n        }\n\n        this._namedEvents.fire(streamEnums.rendererEvents.error.name, ['phenix-player', e]);\n    }\n\n    function reload() {\n        this._player.dispose();\n\n        this._player = null;\n\n        this.start(this._element);\n    }\n\n    function reloadIfAble() {\n        if (!canReload.call(this)) {\n            return;\n        }\n\n        this._logger.warn('Reloading unhealthy stream that was active for at least [%s] seconds', minTimeBeforeNextReload / 1000);\n\n        this._lastReloadTime = _.now();\n\n        reload.call(this);\n    }\n\n    function canReload() {\n        var hasElapsedMinTimeSinceLastReload = !this._lastReloadTime || _.now() - this._lastReloadTime > minTimeBeforeNextReload;\n\n        return this._element && !this._waitForLastChunk && this._player && this._element.buffered.length !== 0 && hasElapsedMinTimeSinceLastReload;\n    }\n\n    function onProgress() {\n        this._lastProgress.time = _.now();\n\n        if (this._element.buffered.length === 0) {\n            return this._logger.debug('[%s] Phenix live stream player progress event fired without any buffered content', this._streamId);\n        }\n\n        var bufferedEnd = this._element.buffered.end(this._element.buffered.length - 1);\n\n        if (this._lastProgress.buffered === bufferedEnd) {\n            return;\n        }\n\n        // Start and end times are unreliable for overall length of stream.\n        if (this._lastProgress.buffered !== null) {\n            var oldTimeElapsed = this._lastProgress.averageLength * this._lastProgress.count;\n            var newTimeElapsed = oldTimeElapsed + (bufferedEnd - this._lastProgress.buffered);\n\n            this._lastProgress.count += 1;\n            this._lastProgress.averageLength = newTimeElapsed / this._lastProgress.count;\n\n            if (this._lastProgress.lastCurrentTime !== this._element.currentTime) {\n                this._lastProgress.lastCurrentTimeOccurenceTimestamp = _.now();\n            }\n\n            var hasExceededStallTimeout = this._lastProgress.lastCurrentTimeOccurenceTimestamp && _.now() - this._lastProgress.lastCurrentTimeOccurenceTimestamp > timeoutForStallWithoutProgressToRestart;\n\n            if (hasExceededStallTimeout && this._element && !this._element.paused && canReload.call(this)) {\n                this._logger.warn('Reloading stream after current time has not changed for [%s] seconds due to unregistered stall.', timeoutForStallWithoutProgressToRestart / 1000);\n\n                reloadIfAble.call(this);\n            }\n        }\n\n        this._lastProgress.buffered = bufferedEnd;\n        this._lastProgress.lastCurrentTime = this._element.currentTime;\n    }\n\n    function stalled(event) {\n        var that = this;\n\n        that._logger.info('[%s] Loading Phenix Live stream player stalled caused by [%s] event.', that._streamId, event.type);\n\n        if (that._lastProgress.time === 0) {\n            return;\n        }\n\n        var currentVideoTime = that._element.currentTime;\n\n        setTimeout(function() {\n            if (_.now() - that._lastProgress.time > getTimeoutOrMinimum.call(that) && that._waitForLastChunk) {\n                that.stop('ended');\n            }\n        }, getTimeoutOrMinimum.call(that));\n\n        setTimeout(function() {\n            if (that._element && that._element.currentTime === currentVideoTime && !that._element.paused && canReload.call(that)) {\n                that._logger.warn('Reloading stream after being stalled for [%s] seconds', timeoutForStallWithoutProgressToRestart / 1000);\n\n                reloadIfAble.call(that);\n            }\n        }, timeoutForStallWithoutProgressToRestart);\n    }\n\n    function getTimeoutOrMinimum() {\n        return this._lastProgress.averageLength * 1.5 < 2000 ? 2000 : this._lastProgress.averageLength * 1.5;\n    }\n\n    function ended() {\n        this._logger.info('[%s] Phenix live stream player ended.', this._streamId);\n    }\n\n    // Temporary measure. The phenix-web-player logs a lot of debug, info, and trace data\n    function createWarningThresholdLogger(logger) {\n        var appenders = logger.getAppenders();\n        var throttledLogger = new logging.Logger();\n\n        _.forEach(appenders, function(appender) {\n            if (appender instanceof logging.ConsoleAppender) {\n                appender = new logging.ConsoleAppender();\n\n                appender.setThreshold(logging.level.INFO);\n            }\n\n            throttledLogger.addAppender(appender);\n        });\n\n        throttledLogger.setUserId(logger.getUserId());\n        throttledLogger.setEnvironment(logger.getEnvironment());\n        throttledLogger.setApplicationVersion(logger.getApplicationVersion());\n        throttledLogger.setObservableSessionId(logger.getObservableSessionId());\n\n        return throttledLogger;\n    }\n\n    return PhenixPlayerRenderer;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/PhenixPlayerRenderer.js\n// module id = 90\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-http',\n    'phenix-rtc',\n    '../DimensionsChangedMonitor',\n    './stream.json'\n], function(_, assert, event, http, rtc, DimensionsChangedMonitor, streamEnums) {\n    'use strict';\n\n    function PhenixRealTimeRenderer(streamId, streamSrc, streamTelemetry, options, logger) {\n        this._logger = logger;\n        this._streamId = streamId;\n        this._streamSrc = streamSrc;\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._renderer = null;\n        this._element = null;\n        this._dimensionsChangedMonitor = new DimensionsChangedMonitor(logger);\n        this._namedEvents = new event.NamedEvents();\n\n        this._onStalled = _.bind(stalled, this);\n        this._onEnded = _.bind(ended, this);\n    }\n\n    PhenixRealTimeRenderer.prototype.on = function(name, callback) {\n        return this._namedEvents.listen(name, callback);\n    };\n\n    PhenixRealTimeRenderer.prototype.start = function(elementToAttachTo) {\n        var hasAudioTrack = !!_.find(this._streamSrc.getTracks(), function(track) {\n            return track.kind === 'audio';\n        });\n\n        if (!this._options.canPlaybackAudio) {\n            if (this._options.disableAudioIfNoOutputFound && this._options.forcedAudioDisabled) {\n                this._logger.warn('[%s] Missing audio playback device. Audio has been disabled on stream. Try setting up an audio device and re-subscribe in order to receive audio.', this._streamId);\n            } else if (!this._options.disableAudioIfNoOutputFound && hasAudioTrack) {\n                this._logger.warn('[%s] Missing audio playback device. May experience audio and/or video failure. Try setting up an audio device OR pass the [disableAudioIfNoOutputFound] option when subscribing to disable audio playback when no devices are attached.', this._streamId);\n            }\n        }\n\n        this._element = rtc.attachMediaStream(elementToAttachTo, this._streamSrc);\n\n        this._streamTelemetry.recordTimeToFirstFrame(elementToAttachTo);\n        this._streamTelemetry.recordRebuffering(elementToAttachTo);\n        this._streamTelemetry.recordVideoResolutionChanges(this, elementToAttachTo);\n        this._streamTelemetry.recordVideoPlayingAndPausing(elementToAttachTo);\n\n        if (this._options.receiveAudio === false) {\n            elementToAttachTo.muted = true;\n        }\n\n        _.addEventListener(elementToAttachTo, 'stalled', this._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'pause', this._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'suspend', this._onStalled, false);\n        _.addEventListener(elementToAttachTo, 'ended', this._onEnded, false);\n\n        this._dimensionsChangedMonitor.start(this, elementToAttachTo);\n\n        return elementToAttachTo;\n    };\n\n    PhenixRealTimeRenderer.prototype.stop = function(reason) {\n        this._dimensionsChangedMonitor.stop();\n\n        this._streamTelemetry.stop();\n\n        if (this._element) {\n            _.removeEventListener(this._element, 'stalled', this._onStalled, false);\n            _.removeEventListener(this._element, 'pause', this._onStalled, false);\n            _.removeEventListener(this._element, 'suspend', this._onStalled, false);\n            _.removeEventListener(this._element, 'ended', this._onEnded, false);\n\n            if (typeof this._element.pause === 'function') {\n                this._element.pause();\n            }\n\n            if (rtc.browser === 'Edge') {\n                this._element.src = '';\n            }\n\n            if (this._element.src && (rtc.browser === 'IE')) {\n                this._element.src = null;\n            } else if (this._element.src) {\n                this._element.src = '';\n            }\n\n            if (this._element.srcObject) {\n                this._element.srcObject = null;\n            }\n\n            this._element = null;\n        }\n\n        this._logger.info('[%s] Phenix real-time renderer has been destroyed', this._streamId);\n\n        this._namedEvents.fire(streamEnums.rendererEvents.ended.name, [reason]);\n    };\n\n    PhenixRealTimeRenderer.prototype.getStats = function() {\n        if (!this._element) {\n            return {\n                width: 0,\n                height: 0,\n                currentTime: 0.0,\n                lag: 0.0,\n                networkState: streamEnums.networkStates.networkNoSource.id\n            };\n        }\n\n        var trueCurrentTime = (_.now() - this._options.originStartTime) / 1000;\n        var lag = this._options.networkLag / 1000; // Check RTC stats instead\n\n        return {\n            width: this._element.videoWidth || this._element.width,\n            height: this._element.videoHeight || this._element.height,\n            currentTime: trueCurrentTime,\n            lag: lag,\n            networkState: this._element.networkState\n        };\n    };\n\n    PhenixRealTimeRenderer.prototype.setDataQualityChangedCallback = function(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.dataQualityChangedCallback = callback;\n    };\n\n    PhenixRealTimeRenderer.prototype.addVideoDisplayDimensionsChangedCallback = function(callback, options) {\n        this._dimensionsChangedMonitor.addVideoDisplayDimensionsChangedCallback(callback, options);\n    };\n\n    function stalled(event) {\n        this._logger.info('[%s] Loading Phenix Real-Time stream player stalled caused by [%s] event.', this._streamId, event.type);\n    }\n\n    function ended() {\n        this._logger.info('[%s] Phenix Real-Time stream ended.', this._streamId);\n    }\n\n    return PhenixRealTimeRenderer;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/PhenixRealTimeRenderer.js\n// module id = 91\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-rtc',\n    './PeerConnection',\n    './PeerConnectionMonitor',\n    './PhenixRealTimeRenderer',\n    './stream.json'\n], function(_, assert, event, rtc, PeerConnection, PeerConnectionMonitor, PhenixRealTimeRenderer, streamEnums) {\n    'use strict';\n\n    var iceConnectionTimeout = 5000;\n\n    function PhenixRealTimeStream(streamId, streamSrc, peerConnection, streamTelemetry, options, logger) {\n        this._streamId = streamId;\n        this._streamSrc = streamSrc;\n        this._peerConnection = peerConnection;\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._logger = logger;\n        this._renderer = null;\n        this._element = null;\n        this._dimensionsChangedMonitor = null;\n        this._namedEvents = new event.NamedEvents();\n        this._childrenStreams = [];\n\n        _.addEventListener(peerConnection, 'iceconnectionstatechange', _.bind(onIceConnectionChange, this));\n    }\n\n    PhenixRealTimeStream.prototype.on = function(name, callback) {\n        this._namedEvents.listen(name, callback);\n    };\n\n    PhenixRealTimeStream.prototype.createRenderer = function() {\n        var that = this;\n\n        this._renderer = new PhenixRealTimeRenderer(this._streamId, this._streamSrc, this._streamTelemetry, this._options, this._logger);\n\n        this._renderer.on(streamEnums.rendererEvents.error.name, function(type, error) {\n            that._namedEvents.fire(streamEnums.streamEvents.playerError.name, [type, error]);\n        });\n        this._renderer.on(streamEnums.rendererEvents.ended.name, function(reason) {\n            that._namedEvents.fire(streamEnums.streamEvents.playerEnded.name, [reason]);\n        });\n\n        return this._renderer;\n    };\n\n    PhenixRealTimeStream.prototype.select = function select(trackSelectCallback) {\n        assert.isFunction(trackSelectCallback, 'trackSelectCallback');\n        assert.isFunction(rtc.global.MediaStream, 'rtc.global.MediaStream');\n\n        var tracks = this._streamSrc.getTracks();\n        var streamToAttach = new rtc.global.MediaStream();\n\n        for (var i = 0; i < tracks.length; i++) {\n            if (trackSelectCallback(tracks[i], i)) {\n                streamToAttach.addTrack(tracks[i]);\n            }\n        }\n\n        if (streamToAttach.getTracks().length === 0) {\n            return this._logger.warn('No tracks selected');\n        }\n\n        var that = this;\n        var newMediaStream = new PhenixRealTimeStream(this._streamId, streamToAttach, this._peerConnection, this._streamTelemetry, this._options, this._logger);\n\n        newMediaStream.on(streamEnums.streamEvents.stopped.name, function(reason) {\n            if (isStreamStopped(that._streamSrc)) {\n                that._namedEvents.fire(streamEnums.streamEvents.stopped.name, [reason]);\n            }\n        });\n\n        this._childrenStreams.push(newMediaStream);\n\n        return newMediaStream;\n    };\n\n    PhenixRealTimeStream.prototype.setStreamEndedCallback = function setStreamEndedCallback(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this._streamEndedCallback = callback;\n    };\n\n    PhenixRealTimeStream.prototype.setStreamErrorCallback = function setStreamErrorCallback(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this._streamErrorCallback = callback;\n    };\n\n    PhenixRealTimeStream.prototype.streamEndedCallback = function streamEndedCallback(stream, status, reason) {\n        _.forEach(this._childrenStreams, function(childStream) {\n            childStream.streamEndedCallback(status, reason);\n        });\n\n        if (_.isFunction(this._streamEndedCallback)) {\n            this._streamEndedCallback(this, status, reason);\n        }\n    };\n\n    PhenixRealTimeStream.prototype.streamErrorCallback = function streamErrorCallback(stream, errorSource, error) {\n        _.forEach(this._childrenStreams, function(childStream) {\n            childStream.streamErrorCallback(errorSource, error);\n        });\n\n        if (_.isFunction(this._streamErrorCallback)) {\n            this._streamErrorCallback(stream, errorSource, error);\n        }\n    };\n\n    PhenixRealTimeStream.prototype.stop = function stop(reason) {\n        if (!this.isActive()) {\n            return;\n        }\n\n        stopWebRTCStream(this._streamSrc);\n\n        this._logger.info('[%s] stop media stream', this._streamId);\n\n        this._namedEvents.fire(streamEnums.streamEvents.stopped.name, [reason]);\n\n        this._isStopped = true;\n    };\n\n    PhenixRealTimeStream.prototype.monitor = function monitor(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        var that = this;\n        var monitor = new PeerConnectionMonitor(that._streamId, that._peerConnection, that._logger);\n\n        options.direction = 'inbound';\n\n        monitor.start(options, function activeCallback() {\n            return that.isActive();\n        }, function monitorCallback(error, monitorEvent) {\n            if (error) {\n                that._logger.warn('[%s] Media stream monitor triggered unrecoverable error [%s]', error);\n            }\n\n            that._logger.warn('[%s] Media stream triggered monitor condition for [%s]', that._streamId, monitorEvent.type);\n\n            return callback(that, 'client-side-failure', monitorEvent);\n        });\n\n        this._monitor = monitor;\n\n        return monitor;\n    };\n\n    PhenixRealTimeStream.prototype.getMonitor = function getMonitor() {\n        return this._monitor;\n    };\n\n    PhenixRealTimeStream.prototype.getStream = function getStream() {\n        return this._streamSrc;\n    };\n\n    PhenixRealTimeStream.prototype.isActive = function isActive() {\n        return !this._isStopped && !isStreamStopped(this._streamSrc);\n    };\n\n    PhenixRealTimeStream.prototype.getStreamId = function getStreamId() {\n        return this._streamId;\n    };\n\n    PhenixRealTimeStream.prototype.getStats = function getStats(callback) {\n        assert.isFunction(callback, 'callback');\n\n        if (!this._lastStats) {\n            this._lastStats = {};\n        }\n\n        var that = this;\n\n        return rtc.getStats(this._peerConnection, null, function(stats) {\n            callback(PeerConnection.convertPeerConnectionStats(stats, that._lastStats));\n        });\n    };\n\n    PhenixRealTimeStream.prototype.getRenderer = function getRenderer() {\n        return this._renderer;\n    };\n\n    function isStreamStopped(stream) {\n        return _.reduce(stream.getTracks(), function(isStopped, track) {\n            return isStopped && isTrackStopped(track);\n        }, true);\n    }\n\n    function isTrackStopped(track) {\n        assert.isObject(track, 'track');\n\n        return track.readyState === 'ended';\n    }\n\n    function stopWebRTCStream(stream) {\n        if (stream && _.isFunction(stream.stop, 'stream.stop')) {\n            stream.stop();\n        }\n\n        _.forEach(stream && stream.getTracks ? stream.getTracks() : [], function(track) {\n            track.stop();\n        });\n    }\n\n    function onIceConnectionChange() {\n        var that = this;\n\n        switch (this._peerConnection.iceConnectionState) {\n        case 'checking':\n        case 'connecting':\n            if (_.isNumber(this._connectionSuccessTimeout)) {\n                return;\n            }\n\n            this._connectionStart = _.now();\n            this._connectionSuccessTimeout = setTimeout(function() {\n                that._logger.warn('[%s] Stream has not connected withing [%s] ms.', that._streamId, iceConnectionTimeout);\n                that._namedEvents.fire(streamEnums.streamEvents.playerError.name, ['real-time', new Error('connection-timeout')]);\n            }, iceConnectionTimeout);\n\n            break;\n        case 'connected':\n            if (_.isNumber(this._connectionSuccessTimeout)) {\n                clearTimeout(this._connectionSuccessTimeout);\n\n                this._connectionSuccessTimeout = null;\n            }\n\n            this._logger.info('[%s] Ice Connection completed after [%s] ms', this._streamId, _.now() - this._connectionStart);\n\n            this._connectionStart = null;\n\n            break;\n        default:\n            break;\n        }\n    }\n\n    return PhenixRealTimeStream;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/PhenixRealTimeStream.js\n// module id = 92\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-http',\n    'phenix-rtc',\n    '../DimensionsChangedMonitor',\n    './stream.json'\n], function(_, assert, event, http, rtc, DimensionsChangedMonitor, streamEnums) {\n    'use strict';\n\n    var widevineServiceCertificate = null;\n    var defaultBandwidthEstimateForPlayback = 2000000; // 2Mbps will select 720p by default\n\n    function ShakaRenderer(streamId, uri, streamTelemetry, options, shaka, logger) {\n        this._logger = logger;\n        this._streamId = streamId;\n        this._manifestUri = encodeURI(uri).replace(/[#]/g, '%23');\n        this._streamTelemetry = streamTelemetry;\n        this._options = options;\n        this._renderer = null;\n        this._element = null;\n        this._dimensionsChangedMonitor = new DimensionsChangedMonitor(logger);\n        this._lastProgress = {\n            time: 0,\n            buffered: null,\n            averageLength: 0,\n            count: 0\n        };\n        this._namedEvents = new event.NamedEvents();\n        this._shaka = shaka;\n\n        this._onStalled = _.bind(stalled, this);\n        this._onProgress = _.bind(onProgress, this);\n        this._onEnded = _.bind(ended, this);\n    }\n\n    ShakaRenderer.prototype.on = function(name, callback) {\n        return this._namedEvents.listen(name, callback);\n    };\n\n    ShakaRenderer.prototype.start = function(elementToAttachTo) {\n        var that = this;\n\n        that._player = new this._shaka.Player(elementToAttachTo);\n\n        that._streamTelemetry.recordTimeToFirstFrame(elementToAttachTo);\n        that._streamTelemetry.recordRebuffering(elementToAttachTo);\n        that._streamTelemetry.recordVideoResolutionChanges(this, elementToAttachTo);\n\n        var playerConfig = {\n            abr: {defaultBandwidthEstimate: defaultBandwidthEstimateForPlayback},\n            manifest: {retryParameters: {timeout: 10000}},\n            streaming: {\n                rebufferingGoal: 2,\n                bufferingGoal: 10,\n                bufferBehind: 30,\n                retryParameters: {\n                    timeout: 10000,\n                    maxAttempts: 10,\n                    backoffFactor: 1.1\n                }\n            }\n        };\n\n        if (this._options.isDrmProtectedContent) {\n            checkBrowserSupportForWidevineDRM.call(that);\n            unwrapLicenseResponse.call(that, that._player);\n            addDrmSpecificsToPlayerConfig.call(that, playerConfig, that._options, function(err, updatedPlayerConfig) {\n                if (!err) {\n                    loadPlayer(updatedPlayerConfig);\n                } else {\n                    that._logger.error('Failed to add DRM configuration to shaka player', err);\n\n                    throw err;\n                }\n            });\n        } else {\n            loadPlayer(playerConfig);\n        }\n\n        function loadPlayer(config) {\n            that._player.configure(config);\n\n            if (that._options.receiveAudio === false) {\n                elementToAttachTo.muted = true;\n            }\n\n            _.addEventListener(that._player, 'error', function(e) {\n                that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['player', e]);\n            });\n\n            _.addEventListener(elementToAttachTo, 'stalled', that._onStalled, false);\n            _.addEventListener(elementToAttachTo, 'pause', that._onStalled, false);\n            _.addEventListener(elementToAttachTo, 'suspend', that._onStalled, false);\n            _.addEventListener(elementToAttachTo, 'progress', that._onProgress, false);\n            _.addEventListener(elementToAttachTo, 'ended', that._onEnded, false);\n\n            that._player.load(that._manifestUri).then(function() {\n                that._logger.info('[%s] DASH live stream has been loaded', that._streamId);\n\n                if (_.isFunction(elementToAttachTo.play)) {\n                    elementToAttachTo.play();\n                }\n            }).catch(function(e) {\n                that._logger.error('[%s] Error while loading DASH live stream [%s]', that._streamId, e.code, e);\n\n                that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['shaka', e]);\n            });\n\n            that._dimensionsChangedMonitor.start(this, elementToAttachTo);\n            that._element = elementToAttachTo;\n        }\n\n        return elementToAttachTo;\n    };\n\n    ShakaRenderer.prototype.stop = function(reason, waitForLastChunk) {\n        var that = this;\n\n        if (that._waitingForFinalization) {\n            return;\n        }\n\n        if (waitForLastChunk) {\n            return that._waitForLastChunk = true;\n        }\n\n        this._dimensionsChangedMonitor.stop();\n\n        this._streamTelemetry.stop();\n\n        if (this._player) {\n            var finalizeStreamEnded = function finalizeStreamEnded() {\n                var reason = '';\n\n                if (that._element) {\n                    _.removeEventListener(that._element, 'stalled', that._onStalled, false);\n                    _.removeEventListener(that._element, 'pause', that._onStalled, false);\n                    _.removeEventListener(that._element, 'suspend', that._onStalled, false);\n                    _.removeEventListener(that._element, 'progress', that._onProgress, false);\n                    _.removeEventListener(that._element, 'ended', that._onEnded, false);\n\n                    if (rtc.browser === 'Edge') {\n                        that._element.src = '';\n                    }\n                }\n\n                that._namedEvents.fire(streamEnums.rendererEvents.ended.name, [reason]);\n\n                that._player = null;\n                that._element = null;\n            };\n\n            var destroyIgnored = that._player.destroy()\n                .then(function() {\n                    that._logger.info('[%s] Shaka live stream player has been destroyed', that._streamId);\n                }).then(function() {\n                    finalizeStreamEnded();\n                }).catch(function(e) {\n                    that._logger.error('[%s] Error while destroying shaka live stream player [%s]', that._streamId, e.code, e);\n\n                    finalizeStreamEnded();\n\n                    that._namedEvents.fire(streamEnums.rendererEvents.error.name, ['shaka', e]);\n                });\n\n            that._waitingForFinalization = true;\n        }\n    };\n\n    ShakaRenderer.prototype.getStats = function() {\n        if (!this._player) {\n            return {\n                width: 0,\n                height: 0,\n                currentTime: 0,\n                lag: 0,\n                networkState: streamEnums.networkStates.networkNoSource.id\n            };\n        }\n\n        var stat = _.assign(this._player.getStats(), {\n            currentTime: 0,\n            lag: 0\n        });\n        var currentTime = _.get(this._element, ['currentTime'], 0);\n        var trueCurrentTime = (_.now() - this._options.originStartTime) / 1000;\n        var lag = Math.max(0.0, trueCurrentTime - currentTime);\n\n        if (this._element) {\n            stat.currentTime = currentTime;\n            stat.lag = lag;\n        }\n\n        if (stat.estimatedBandwidth > 0) {\n            stat.networkState = streamEnums.networkStates.networkLoading.id;\n        } else if (stat.playTime > 0) {\n            stat.networkState = streamEnums.networkStates.networkIdle.id;\n        } else if (stat.video) {\n            stat.networkState = streamEnums.networkStates.networkEmpty.id;\n        } else {\n            stat.networkState = streamEnums.networkStates.networkNoSource.id;\n        }\n\n        return stat;\n    };\n\n    ShakaRenderer.prototype.setDataQualityChangedCallback = function(callback) {\n        assert.isFunction(callback, 'callback');\n\n        this.dataQualityChangedCallback = callback;\n    };\n\n    ShakaRenderer.prototype.getPlayer = function() {\n        return this._player;\n    };\n\n    ShakaRenderer.prototype.addVideoDisplayDimensionsChangedCallback = function(callback, options) {\n        this._dimensionsChangedMonitor.addVideoDisplayDimensionsChangedCallback(callback, options);\n    };\n\n    function onProgress() {\n        this._lastProgress.time = _.now();\n\n        if (this._element.buffered.length === 0) {\n            return this._logger.debug('[%s] Shaka live stream player progress event fired without any buffered content', this._streamId);\n        }\n\n        var bufferedEnd = this._element.buffered.end(this._element.buffered.length - 1);\n\n        if (this._lastProgress.buffered === bufferedEnd) {\n            return;\n        }\n\n        // Start and end times are unreliable for overall length of stream.\n        if (this._lastProgress.buffered !== null) {\n            var oldTimeElapsed = this._lastProgress.averageLength * this._lastProgress.count;\n            var newTimeElapsed = oldTimeElapsed + (bufferedEnd - this._lastProgress.buffered);\n\n            this._lastProgress.count += 1;\n            this._lastProgress.averageLength = newTimeElapsed / this._lastProgress.count;\n        }\n\n        this._lastProgress.buffered = bufferedEnd;\n    }\n\n    function stalled() {\n        var that = this;\n\n        that._logger.info('[%s] Loading Shaka live stream player stream stalled.', that._streamId);\n\n        if (that._lastProgress.time === 0) {\n            return;\n        }\n\n        setTimeout(function() {\n            if (_.now() - that._lastProgress.time > getTimeoutOrMinimum.call(that) && that._waitForLastChunk) {\n                that.stop('ended');\n            }\n        }, getTimeoutOrMinimum.call(that));\n    }\n\n    function getTimeoutOrMinimum() {\n        return this._lastProgress.averageLength * 1.5 < 2000 ? 2000 : this._lastProgress.averageLength * 1.5;\n    }\n\n    function ended() {\n        this._logger.info('[%s] Shaka live stream player ended.', this._streamId);\n    }\n\n    function checkBrowserSupportForWidevineDRM() {\n        var error;\n\n        if (!_.isFunction(Uint8Array)) {\n            error = 'Uint8Array support required for DRM';\n            this._logger.error(error);\n\n            throw new Error(error);\n        }\n\n        if (!_.isFunction(rtc.global.atob)) {\n            error = 'rtc.global.atob support required for DRM';\n            this._logger.error(error);\n\n            throw new Error(error);\n        }\n    }\n\n    function unwrapLicenseResponse(player) {\n        var that = this;\n\n        player.getNetworkingEngine().registerResponseFilter(function(type, response) {\n            // Only manipulate license responses:\n            if (type.toString() === that._shaka.net.NetworkingEngine.RequestType.LICENSE.toString()) {\n                var binaryResponseAsTypedArray = new Uint8Array(response.data);\n                var responseAsString = String.fromCharCode.apply(null, binaryResponseAsTypedArray);\n                var parsedResponse = JSON.parse(responseAsString);\n                var base64License = parsedResponse.license;\n                var decodedLicense = rtc.global.atob(base64License);\n\n                response.data = new Uint8Array(decodedLicense.length);\n\n                for (var i = 0; i < decodedLicense.length; ++i) {\n                    response.data[i] = decodedLicense.charCodeAt(i);\n                }\n\n                if (parsedResponse.trackRestrictions) {\n                    player.configure({restrictions: parsedResponse.trackRestrictions});\n                }\n            }\n        });\n    }\n\n    function addDrmSpecificsToPlayerConfig(playerConfig, options, callback) {\n        if (!playerConfig.drm) {\n            playerConfig.drm = {};\n        }\n\n        if (!playerConfig.drm.advanced) {\n            playerConfig.drm.advanced = {};\n        }\n\n        if (!playerConfig.manifest) {\n            playerConfig.manifest = {};\n        }\n\n        if (!playerConfig.manifest.dash) {\n            playerConfig.manifest.dash = {};\n        }\n\n        // Add browser specific DRM calls here\n        // Currently we support Widevine only\n        addWidevineConfigToPlayerConfig.call(this, playerConfig, options, callback);\n    }\n\n    // ToDo pull into singleton so widevineServiceCertificate stays per browser session\n    function addWidevineConfigToPlayerConfig(playerConfig, options, callback) {\n        playerConfig['manifest']['dash']['customScheme'] = function(element) {\n            if (element.getAttribute('schemeIdUri') === 'com.phenixrts.widevine' || element.getAttribute('schemeIdUri') === 'com.phenixp2p.widevine') {\n                return [{\n                    keySystem: 'com.widevine.alpha',\n                    licenseServerUri: decodeURIComponent(element.getAttribute('widevineLicenseServerUrl'))\n                }];\n            }\n        };\n\n        function addToPlayerconfig(error, serverCertificateResponse) {\n            if (error) {\n                callback(error);\n\n                return;\n            }\n\n            widevineServiceCertificate = serverCertificateResponse.data; // Cache so that we can reuse\n\n            playerConfig.drm.advanced['com.widevine.alpha'] = {\n                'serverCertificate': convertBinaryStringToUint8Array(serverCertificateResponse.data),\n                'persistentStateRequired': true,\n                'distinctiveIdentifierRequired': false\n            };\n\n            callback(null, playerConfig);\n        }\n\n        if (widevineServiceCertificate) {\n            addToPlayerconfig(null, widevineServiceCertificate);\n        } else {\n            http.get(options.widevineServiceCertificateUrl, {mimeType: 'text/plain; charset=x-user-defined'}, addToPlayerconfig);\n        }\n    }\n\n    function convertBinaryStringToUint8Array(bStr) {\n        var len = bStr.length;\n        var u8Array = new Uint8Array(len); // eslint-disable-line no-undef\n\n        for (var i = 0; i < len; i++) {\n            u8Array[i] = bStr.charCodeAt(i);\n        }\n\n        return u8Array;\n    }\n\n    return ShakaRenderer;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/ShakaRenderer.js\n// module id = 93\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    './stream.json'\n], function(_, assert, streamEnums) {\n    'use strict';\n\n    function StreamWrapper(type, stream, logger) {\n        assert.isStringNotEmpty(type, 'type');\n        assert.isObject(stream, 'stream');\n        assert.isObject(logger, 'logger');\n\n        this._type = type;\n        this._stream = stream;\n        this._logger = logger;\n        this._onPlayerEnd = null;\n\n        var that = this;\n\n        this._stream.on(streamEnums.streamEvents.playerEnded.name, function(reason) {\n            that._logger.info('[%s] [%s] player ended.', that._stream.getStreamId(), that._type);\n\n            that._playerEnded = true;\n\n            if (that._onPlayerEnd) {\n                return that._onPlayerEnd();\n            }\n\n            that.streamEndedCallback(getStreamEndedStatus(reason), reason);\n        });\n    }\n\n    StreamWrapper.prototype.on = function(name, callback) {\n        return this._stream.on(name, callback);\n    };\n\n    // TODO(DY) Remove once 'on' is implemented on all Phenix Stream objects\n    StreamWrapper.prototype.streamErrorCallback = function(errorSource, error) {\n        if (!_.isFunction(this._stream.streamErrorCallback)) {\n            this._logger.error('[%s] [%s] live stream error event [%s]', this._stream.getStreamId(), this._type, error);\n        } else {\n            this._logger.debug('[%s] [%s] live stream error event [%s]', this._stream.getStreamId(), this._type, error);\n            this._stream.streamErrorCallback(this._stream, errorSource, error);\n        }\n    };\n\n    StreamWrapper.prototype.streamEndedCallback = function(status, reason, waitForPlayerEnd) {\n        var renderer = this._stream.getRenderer();\n\n        if (this._isStreamEnded) {\n            return;\n        }\n\n        if (waitForPlayerEnd && !this._onPlayerEnd && this._stream.isActive() && renderer && !this._playerEnded) {\n            this._onPlayerEnd = _.bind(this.streamEndedCallback, this, status, reason);\n\n            this._logger.info('[%s] [%s] stream ended. Waiting for end of player.', this._stream.getStreamId(), this._type);\n\n            if (renderer) {\n                renderer.stop(reason, waitForPlayerEnd);\n            }\n\n            return;\n        }\n\n        this._isStreamEnded = true;\n\n        if (_.isFunction(this._stream.streamEndedCallback)) {\n            this._stream.streamEndedCallback(this._stream, status, reason);\n        }\n\n        this._stream.stop();\n\n        if (renderer) {\n            renderer.stop(reason, waitForPlayerEnd);\n        }\n    };\n\n    StreamWrapper.prototype.dataQualityChangedCallback = function(status, reason) {\n        var renderer = this._stream.getRenderer();\n\n        if (!renderer) {\n            return;\n        }\n\n        if (typeof renderer.dataQualityChangedCallback === 'function') {\n            renderer.dataQualityChangedCallback(renderer, status, reason);\n        }\n    };\n\n    StreamWrapper.prototype.getPhenixMediaStream = function() {\n        return this._stream;\n    };\n\n    function getStreamEndedStatus(value) {\n        switch (value) {\n        case '':\n        case 'none':\n        case 'ended':\n            return 'ended';\n        case 'server-error':\n        case 'session-error':\n        case 'not-ready':\n        case 'error':\n        case 'died':\n            return 'failed';\n        case 'censored':\n            return 'censored';\n        case 'maintenance':\n            return 'maintenance';\n        case 'capacity':\n            return 'capacity';\n        case 'app-background':\n            return 'app-background';\n        default:\n            return 'custom';\n        }\n    }\n\n    return StreamWrapper;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/StreamWrapper.js\n// module id = 94\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n], function() {\n    'use strict';\n\n    var shakaEnums = {\n        errorSeverity: {\n            recoverable: {\n                id: 1,\n                name: 'RECOVERABLE'\n            },\n            critical: {\n                id: 2,\n                name: 'CRITICAL'\n            }\n        }\n    };\n\n    return shakaEnums;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/streaming/shaka.json.js\n// module id = 95\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-proto',\n    'phenix-rtc',\n    '../protocol/telemetryProto.json'\n], function(_, assert, proto, rtc, telemetryProto) {\n    function MetricsTransmitter(uri) {\n        assert.isString(uri, 'uri');\n\n        this._loggingUrl = '/telemetry/metrics';\n        this._domain = typeof location === 'object' ? location.hostname : rtc.browser + '-' + rtc.browserVersion + '-unknown';\n        this._isEnabled = true;\n        this._browser = (rtc.browser || 'Browser') + '/' + (rtc.browserVersion || '?');\n        this._batchHttpProtocol = new proto.BatchHttpProto(uri + this._loggingUrl, [telemetryProto], 'telemetry.SubmitMetricRecords', {\n            maxAttempts: 3,\n            maxBufferedRecords: 1000,\n            maxBatchSize: 512\n        });\n\n        this._batchHttpProtocol.on('capacity', _.bind(onCapacity, this));\n    }\n\n    MetricsTransmitter.prototype.isEnabled = function isEnabled() {\n        return this._isEnabled;\n    };\n\n    MetricsTransmitter.prototype.setEnabled = function setEnabled(enabled) {\n        assert.isBoolean(enabled, 'enabled');\n\n        this._isEnabled = enabled;\n    };\n\n    MetricsTransmitter.prototype.submitMetric = function submit(metric, since, sessionId, streamId, environment, version, value) {\n        if (!this._isEnabled) {\n            return;\n        }\n\n        assert.isStringNotEmpty(metric, 'metric');\n        assert.isObject(value, 'value');\n\n        this._mostRecentRuntime = since;\n        this._mostRecentSessionId = sessionId;\n        this._mostRecentStreamId = streamId;\n        this._mostRecentEnvironment = environment;\n        this._mostRecentVersion = version;\n\n        addMetricToRecords.call(this, metric, value);\n    };\n\n    function addMetricToRecords(metric, value) {\n        var record = _.assign({}, value, {\n            metric: metric,\n            timestamp: _.isoString(),\n            sessionId: this._mostRecentSessionId,\n            streamId: this._mostRecentStreamId,\n            source: this._browser,\n            fullQualifiedName: this._domain,\n            environment: this._mostRecentEnvironment,\n            version: this._mostRecentVersion,\n            runtime: this._mostRecentRuntime\n        });\n\n        this._batchHttpProtocol.addRecord(record);\n    }\n\n    function onCapacity(deleteRecords) {\n        this._batchHttpProtocol.addRecordToBeginning({\n            metric: 'MetricDropped',\n            value: {uint64: deleteRecords},\n            timestamp: _.isoString(),\n            sessionId: this._mostRecentSessionId,\n            streamId: this._mostRecentStreamId,\n            source: this._browser,\n            fullQualifiedName: this._domain,\n            environment: this._mostRecentEnvironment,\n            version: this._mostRecentVersion,\n            runtime: this._mostRecentRuntime\n        });\n    }\n\n    return MetricsTransmitter;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/telemetry/MetricsTransmitter.js\n// module id = 96\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-event',\n    'phenix-web-disposable',\n    'phenix-rtc'\n], function(_, assert, event, disposable, rtc) {\n    function NetworkMonitor(logger) {\n        assert.isObject(logger, 'logger');\n\n        this._logger = logger;\n        this._namedEvents = new event.NamedEvents();\n        this._disposables = new disposable.DisposableList();\n\n        this._disposables.add(this._namedEvents);\n\n        if (!this.isSupported()) {\n            return this._logger.info('Network monitor is not supported.');\n        }\n\n        this._lastNetworkStats = getStats.call(this);\n\n        detectNetworkTypeChange.call(this);\n    }\n\n    NetworkMonitor.prototype.isSupported = function() {\n        return rtc.global.navigator && rtc.global.navigator.connection;\n    };\n\n    NetworkMonitor.prototype.getDownlinkThroughputCapacity = function() {\n        if (!this.isSupported()) {\n            return -1;\n        }\n\n        return rtc.global.navigator.connection.downlink || rtc.global.navigator.connection.downlinkMax;\n    };\n\n    NetworkMonitor.prototype.getEffectiveType = function() {\n        if (!this.isSupported()) {\n            return 'Unknown';\n        }\n\n        return rtc.global.navigator.connection.effectiveType || rtc.global.navigator.connection.type;\n    };\n\n    NetworkMonitor.prototype.getRoundTripTime = function() {\n        if (!this.isSupported()) {\n            return -1;\n        }\n\n        return rtc.global.navigator.connection.rtt || rtc.global.navigator.connection.type;\n    };\n\n    NetworkMonitor.prototype.onNetworkChange = function(callback) {\n        if (!this.isSupported()) {\n            return;\n        }\n\n        assert.isFunction(callback, 'callback');\n\n        return this._namedEvents.listen('NetworkChange', callback);\n    };\n\n    NetworkMonitor.prototype.dispose = function() {\n        this._disposables.dispose();\n    };\n\n    function getStats() {\n        return {\n            downlinkThroughputCapacity: this.getDownlinkThroughputCapacity(),\n            effectiveType: this.getEffectiveType(),\n            rtt: this.getRoundTripTime()\n        };\n    }\n\n    function detectNetworkTypeChange() {\n        var that = this;\n\n        navigator.connection.addEventListener('change', function() {\n            that._namedEvents.fireAsync('NetworkChange', [getStats.call(that), that._lastNetworkStats]);\n\n            that._lastNetworkStats = getStats.call(that);\n        });\n    }\n\n    return NetworkMonitor;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/telemetry/NetworkMonitor.js\n// module id = 97\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable',\n    'phenix-web-application-activity-detector',\n    './NetworkMonitor',\n    'phenix-rtc'\n], function(_, assert, disposable, applicationActivityDetector, NetworkMonitor, phenixRTC) {\n    'use strict';\n\n    var start = phenixRTC.global['__phenixPageLoadTime'] || phenixRTC.global['__pageLoadTime'] || _.now();\n    var defaultEnvironment = 'production' || '?';\n    var sdkVersion = '2018-04-11T21:42:19Z' || '?';\n\n    function SessionTelemetry(logger, metricsTransmitter) {\n        this._environment = defaultEnvironment;\n        this._version = sdkVersion;\n        this._sessionId = null;\n        this._properties = {\n            resource: 'Session',\n            kind: 'Event'\n        };\n        this._logger = logger;\n        this._metricsTransmitter = metricsTransmitter;\n        this._networkMonitor = new NetworkMonitor(this._logger);\n        this._start = _.now();\n        this._disposables = new disposable.DisposableList();\n        this._records = [];\n\n        this._disposables.add(applicationActivityDetector.onBackground(_.bind(recordForegroundChange, this, false)));\n        this._disposables.add(applicationActivityDetector.onForeground(_.bind(recordForegroundChange, this, true)));\n\n        if (!this._networkMonitor.isSupported()) {\n            return;\n        }\n\n        this._disposables.add(this._networkMonitor.onNetworkChange(_.bind(logNetworkStatsChange, this)));\n        this._disposables.add(this._networkMonitor);\n\n        recordNetworkTypeState.call(this);\n        recordNetworkDownlinkThroughputCapacity.call(this);\n        recordNetworkRTT.call(this);\n    }\n\n    SessionTelemetry.prototype.setSessionId = function(sessionId) {\n        if (!sessionId && this._sessionId) {\n            recordMetricRecord.call(this, {\n                metric: 'Stopped',\n                elapsed: this.elapsed()\n            }, since());\n        }\n\n        this._sessionId = sessionId;\n\n        if (sessionId) {\n            recordMetricRecord.call(this, {\n                metric: 'Initialized',\n                elapsed: this.elapsed()\n            }, since());\n            recordAllMetrics.call(this);\n            recordForegroundState.call(this);\n\n            if (this._networkMonitor.isSupported()) {\n                recordNetworkTypeState.call(this);\n                recordNetworkDownlinkThroughputCapacity.call(this);\n                recordNetworkRTT.call(this);\n            }\n        }\n    };\n\n    SessionTelemetry.prototype.setProperty = function(name, value) {\n        assert.isStringNotEmpty(name, 'name');\n        assert.isStringNotEmpty(value, 'value');\n\n        this._properties[name] = value;\n    };\n\n    SessionTelemetry.prototype.recordMetric = function(metric, value, previousValue, additionalProperties) {\n        assert.isStringNotEmpty(metric, 'metric');\n\n        var record = _.assign({}, {\n            metric: metric,\n            elapsed: this.elapsed(),\n            value: value,\n            previousValue: previousValue\n        }, additionalProperties || {});\n\n        recordMetricRecord.call(this, record, since());\n    };\n\n    SessionTelemetry.prototype.elapsed = function() {\n        var now = _.now();\n\n        return now - this._start;\n    };\n\n    SessionTelemetry.prototype.dispose = function() {\n        this._disposables.dispose();\n\n        this.recordMetric('Stopped');\n\n        logMetric.call(this, 'Session telemetry stopped');\n    };\n\n    function recordForegroundState() {\n        var isForeground = applicationActivityDetector.isForeground();\n        var timeSinceLastChange = applicationActivityDetector.getTimeSinceLastChange();\n        var metric = isForeground ? 'ApplicationForeground' : 'ApplicationBackground';\n\n        this.recordMetric(metric, {uint64: timeSinceLastChange});\n\n        logMetric.call(this, 'Session has started in the [%s] after [%s] ms', isForeground ? 'foreground' : 'background', timeSinceLastChange);\n    }\n\n    function recordForegroundChange(isForeground, timeSinceLastChange) {\n        var metric = isForeground ? 'ApplicationForeground' : 'ApplicationBackground';\n\n        this.recordMetric(metric, {uint64: timeSinceLastChange});\n\n        logMetric.call(this, 'Application has gone into the [%s] after [%s] ms', isForeground ? 'foreground' : 'background', timeSinceLastChange);\n    }\n\n    function recordNetworkTypeState() {\n        var type = this._networkMonitor.getEffectiveType();\n\n        this.recordMetric('NetworkType', {string: type}, null, {resource: phenixRTC.browser});\n\n        logMetric.call(this, '[%s] has started with Network effective type of [%s]', this._sessionId ? 'Session' : 'Application', type);\n    }\n\n    function recordNetworkTypeChange(newType, previousType) {\n        var newNetworkType = newType || this._networkMonitor.getEffectiveType();\n        var previousNetworkType = previousType;\n\n        this.recordMetric('NetworkType', {string: newNetworkType}, {string: previousNetworkType}, {resource: phenixRTC.browser});\n\n        logMetric.call(this, 'Network effective type has changed to [%s] from [%s]', newNetworkType, previousNetworkType || 'New');\n    }\n\n    function recordNetworkRTT(newValue, oldValue) {\n        var newRTT = newValue || this._networkMonitor.getRoundTripTime();\n        var oldRTT = oldValue || -1;\n\n        this.recordMetric('RoundTripTime', {uint32: newRTT}, {uint32: oldRTT}, {resource: phenixRTC.browser});\n\n        if (_.isNullOrUndefined(oldValue)) {\n            return logMetric.call(this, 'Network RTT [%s]', newRTT);\n        }\n\n        logMetric.call(this, 'Network RTT changed to [%s] from [%s]', newRTT, oldRTT);\n    }\n\n    function recordNetworkDownlinkThroughputCapacity(newValue, oldValue) {\n        var newCapacity = newValue || this._networkMonitor.getDownlinkThroughputCapacity();\n        var oldCapacity = oldValue || -1;\n\n        this.recordMetric('DownlinkThroughputCapacity', {uint64: newCapacity}, {uint64: oldCapacity}, {resource: phenixRTC.browser});\n\n        if (_.isNullOrUndefined(oldValue)) {\n            return logMetric.call(this, 'Network downlink throughput capacity [%s]', newCapacity);\n        }\n\n        logMetric.call(this, 'Network downlink throughput capacity changed to [%s] from [%s]', newCapacity, oldCapacity);\n    }\n\n    function logNetworkStatsChange(newStats, oldStats) {\n        if (oldStats.downlinkThroughputCapacity !== newStats.downlinkThroughputCapacity) {\n            recordNetworkDownlinkThroughputCapacity.call(this, newStats.downlinkThroughputCapacity, oldStats.downlinkThroughputCapacity);\n        }\n\n        if (oldStats.rtt !== newStats.rtt) {\n            recordNetworkRTT.call(this, newStats.rtt, oldStats.rtt);\n        }\n\n        if (oldStats.effectiveType !== newStats.effectiveType) {\n            recordNetworkTypeChange.call(this, newStats.effectiveType, oldStats.effectiveType);\n        }\n    }\n\n    function logMetric() {\n        var args = Array.prototype.slice.call(arguments);\n\n        if (args.length === 0) {\n            throw new Error('Invalid logging arguments.');\n        }\n\n        var sessionTelemetryPrepend = '[%s] [SessionTelemetry] [%s] ';\n        var message = sessionTelemetryPrepend + args[0];\n        var loggingArguments = args.slice(1);\n        var telemetryArguments = [message, this._sessionId, _.now() - this._start].concat(loggingArguments);\n\n        this._logger.debug.apply(this._logger, telemetryArguments);\n    }\n\n    function since() {\n        var now = _.now();\n\n        return (now - start) / 1000;\n    }\n\n    function recordMetricRecord(record, since) {\n        assert.isStringNotEmpty(record.metric, 'record.metric');\n\n        if (!this._sessionId) {\n            return this._records.push({\n                record: record,\n                since: since\n            });\n        }\n\n        var annotatedRecord = _.assign({}, this._properties, record);\n\n        this._metricsTransmitter.submitMetric(record.metric, since, this._sessionId, null, this._environment, this._version, annotatedRecord);\n    }\n\n    function recordAllMetrics() {\n        if (!this._sessionId) {\n            return;\n        }\n\n        var that = this;\n        var numberOfRecordsToPush = this._records.length;\n\n        while (numberOfRecordsToPush > 0) {\n            var records = this._records.splice(numberOfRecordsToPush - 1, 1);\n\n            if (records.length === 1) {\n                recordMetricRecord.call(that, records[0].record, records[0].since);\n            }\n\n            numberOfRecordsToPush--;\n        }\n    }\n\n    return SessionTelemetry;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/telemetry/SessionTelemetry.js\n// module id = 98\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-disposable',\n    'phenix-rtc'\n], function(_, assert, disposable, phenixRTC) {\n    'use strict';\n\n    var start = phenixRTC.global['__phenixPageLoadTime'] || phenixRTC.global['__pageLoadTime'] || _.now();\n    var defaultEnvironment = 'production' || '?';\n    var sdkVersion = '2018-04-11T21:42:19Z' || '?';\n\n    function StreamTelemetry(sessionId, logger, metricsTransmitter) {\n        assert.isStringNotEmpty(sessionId, 'sessionId');\n\n        this._environment = defaultEnvironment;\n        this._version = sdkVersion;\n        this._sessionId = sessionId;\n        this._properties = {};\n        this._logger = logger;\n        this._metricsTransmitter = metricsTransmitter;\n        this._start = _.now();\n        this._disposables = new disposable.DisposableList();\n\n        logMetric.call(this, 'Stream initializing');\n    }\n\n    StreamTelemetry.prototype.setProperty = function(name, value) {\n        assert.isStringNotEmpty(name, 'name');\n        assert.isStringNotEmpty(value, 'value');\n\n        this._properties[name] = value;\n    };\n\n    StreamTelemetry.prototype.recordMetric = function(metric, value, previousValue, additionalProperties) {\n        assert.isStringNotEmpty(metric, 'metric');\n\n        var record = _.assign({}, {\n            metric: metric,\n            elapsed: this.elapsed(),\n            value: value,\n            previousValue: previousValue\n        }, additionalProperties || {});\n\n        recordMetricRecord.call(this, record, since());\n    };\n\n    StreamTelemetry.prototype.setStreamId = function(streamId) {\n        assert.isStringNotEmpty(streamId, 'streamId');\n\n        if (this._streamId) {\n            throw new Error('Stream ID can only be set once.');\n        }\n\n        this._streamId = streamId;\n\n        var now = _.now();\n\n        recordMetricRecord.call(this, {\n            metric: 'Initialized',\n            elapsed: this.elapsed() - now + this._start // Adjust for delay to get the stream ID\n        }, since() - (now - this._start) / 1000); // Adjust for delay to get the stream ID);\n    };\n\n    StreamTelemetry.prototype.setStartOffset = function(startOffset) {\n        assert.isNumber(startOffset, 'startOffset');\n\n        if (this._startOffset) {\n            throw new Error('Start offset can only be set once.');\n        }\n\n        this._startOffset = startOffset;\n\n        this.recordMetric('Offset', {uint64: startOffset});\n    };\n\n    StreamTelemetry.prototype.getStartOffset = function() {\n        return this._startOffset;\n    };\n\n    StreamTelemetry.prototype.elapsed = function() {\n        var now = _.now();\n\n        return now - this._start;\n    };\n\n    StreamTelemetry.prototype.stop = function() {\n        this._disposables.dispose();\n\n        this.recordMetric('Stopped');\n\n        logMetric.call(this, 'Stream stopped');\n    };\n\n    StreamTelemetry.prototype.recordTimeToFirstFrame = function(video) {\n        var that = this;\n        var startRecordingFirstFrame = _.now();\n        var timeOfFirstFrame;\n\n        var listenForFirstFrame = function() {\n            if (timeOfFirstFrame) {\n                return;\n            }\n\n            timeOfFirstFrame = _.now() - startRecordingFirstFrame;\n\n            that.recordMetric('TimeToFirstFrame', {uint64: timeOfFirstFrame});\n            logMetric.call(that, 'First frame [%s]', timeOfFirstFrame);\n\n            timeToFirstFrameListenerDisposable.dispose();\n        };\n\n        _.addEventListener(video, 'loadeddata', listenForFirstFrame);\n\n        var timeToFirstFrameListenerDisposable = new disposable.Disposable(function() {\n            _.removeEventListener(video, 'loadeddata', listenForFirstFrame);\n        });\n\n        // Ensure TTFF is not recorded if stop is called before first frame\n        this._disposables.add(timeToFirstFrameListenerDisposable);\n    };\n\n    // TODO(dy) Add logging for bit rate changes using PC.getStats\n\n    StreamTelemetry.prototype.recordVideoResolutionChanges = function(renderer, video) {\n        var that = this;\n        var lastResolution = {\n            width: video.videoWidth,\n            height: video.videoHeight\n        };\n\n        renderer.addVideoDisplayDimensionsChangedCallback(function(renderer, dimensions) {\n            if (lastResolution.width === dimensions.width && lastResolution.height === dimensions.height) {\n                return;\n            }\n\n            that.recordMetric('ResolutionChanged', {string: dimensions.width + 'x' + dimensions.height}, {string: lastResolution.width + 'x' + lastResolution.height});\n\n            lastResolution = {\n                width: dimensions.width,\n                height: dimensions.height\n            };\n\n            logMetric.call(that, 'Resolution changed: width [%s] height [%s]', dimensions.width, dimensions.height);\n        });\n    };\n\n    StreamTelemetry.prototype.recordRebuffering = function(video) {\n        var that = this;\n        var videoStalled;\n        var lastProgress;\n\n        var listenForStall = function() {\n            if (videoStalled) {\n                return;\n            }\n\n            that.recordMetric('Stalled');\n\n            videoStalled = _.now();\n\n            logMetric.call(that, '[buffering] Stream has stalled');\n        };\n\n        var listenForContinuation = function(event) {\n            var bufferLength = video.buffered.length;\n            var hasNotProgressedSinceLastProgressEvent = event.type === 'playing'\n                                                        || bufferLength > 0 ? (event.type === 'progress'\n                                                        || event.type === 'timeupdate')\n                                                        && video.buffered.end(bufferLength - 1) === lastProgress : true;\n\n            if (!videoStalled || (!bufferLength && phenixRTC.browser !== 'Edge') || hasNotProgressedSinceLastProgressEvent) {\n                return;\n            }\n\n            if (event.type === 'progress') {\n                lastProgress = video.buffered.end(bufferLength - 1);\n            }\n\n            var timeSinceStop = _.now() - videoStalled;\n\n            that.recordMetric('Buffering', {uint64: timeSinceStop});\n\n            logMetric.call(that, '[buffering] Stream has recovered from stall after [%s] milliseconds', timeSinceStop);\n\n            videoStalled = null;\n        };\n\n        _.addEventListener(video, 'stalled', listenForStall);\n        _.addEventListener(video, 'pause', listenForStall);\n        _.addEventListener(video, 'suspend', listenForStall);\n        _.addEventListener(video, 'play', listenForContinuation);\n        _.addEventListener(video, 'playing', listenForContinuation);\n        _.addEventListener(video, 'progress', listenForContinuation);\n        _.addEventListener(video, 'timeupdate', listenForContinuation);\n\n        this._disposables.add(new disposable.Disposable(function() {\n            _.removeEventListener(video, 'stalled', listenForStall);\n            _.removeEventListener(video, 'pause', listenForStall);\n            _.removeEventListener(video, 'suspend', listenForStall);\n            _.removeEventListener(video, 'play', listenForContinuation);\n            _.removeEventListener(video, 'playing', listenForContinuation);\n            _.removeEventListener(video, 'progress', listenForContinuation);\n            _.removeEventListener(video, 'timeupdate', listenForContinuation);\n        }));\n    };\n\n    StreamTelemetry.prototype.recordVideoPlayingAndPausing = function(video) {\n        var that = this;\n\n        var listenForPlayChange = function() {\n            if (video.paused) {\n                that.recordMetric('Playing', {boolean: false});\n            } else {\n                that.recordMetric('Playing', {boolean: true});\n            }\n        };\n\n        _.addEventListener(video, 'pause', listenForPlayChange);\n        _.addEventListener(video, 'playing', listenForPlayChange);\n\n        this._disposables.add(new disposable.Disposable(function() {\n            _.removeEventListener(video, 'pause', listenForPlayChange);\n            _.removeEventListener(video, 'playing', listenForPlayChange);\n        }));\n    };\n\n    function logMetric() {\n        var args = Array.prototype.slice.call(arguments);\n\n        if (args.length === 0) {\n            throw new Error('Invalid logging arguments.');\n        }\n\n        var streamTelemetryPrepend = '[%s] [StreamTelemetry] [%s] ';\n        var message = streamTelemetryPrepend + args[0];\n        var loggingArguments = args.slice(1);\n        var telemetryArguments = [message, this._streamId, _.now() - this._start].concat(loggingArguments);\n\n        this._logger.debug.apply(this._logger, telemetryArguments);\n    }\n\n    function since() {\n        var now = _.now();\n\n        return (now - start) / 1000;\n    }\n\n    function recordMetricRecord(record, since) {\n        assert.isStringNotEmpty(record.metric, 'record.metric');\n\n        var annotatedRecord = _.assign({}, this._properties, record);\n\n        this._metricsTransmitter.submitMetric(record.metric, since, this._sessionId, this._streamId, this._environment, this._version, annotatedRecord);\n    }\n\n    return StreamTelemetry;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/telemetry/StreamTelemetry.js\n// module id = 99\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    '../environment',\n    './MetricsTransmitter'\n], function(_, assert, environment, MetricsTransmitter) {\n    var config = {\n        urls: {\n            local: '',\n            staging: 'https://telemetry-stg.phenixp2p.com',\n            production: 'https://telemetry.phenixp2p.com'\n        }\n    };\n\n    function MetricsTransmitterFactory() {\n        this._metricsTransmitters = {};\n    }\n\n    MetricsTransmitterFactory.prototype.createMetricsTransmitter = function createMetricsTransmitter(pcastBaseUri) {\n        var env = environment.parseEnvFromPcastBaseUri(pcastBaseUri || '');\n\n        var telemetryServerUrl = config.urls[env];\n\n        if (!this._metricsTransmitters[env]) {\n            this._metricsTransmitters[env] = createNewTransmitter.call(this, telemetryServerUrl);\n        }\n\n        return this._metricsTransmitters[env];\n    };\n\n    function createNewTransmitter(uri) {\n        var transmitter = new MetricsTransmitter(uri);\n\n        if (!uri) {\n            transmitter.setEnabled(false);\n        }\n\n        return transmitter;\n    }\n\n    return new MetricsTransmitterFactory();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/telemetry/metricsTransmitterFactory.js\n// module id = 100\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert'\n], function(_, assert) {\n    'use strict';\n\n    // ToDo: Add supported frame rates [30, 15]\n    var aspectRatios = [\n        {\n            '16x9': [\n                {2160: 3840}, // 4k (UHD)\n                {1080: 1920}, // 1080p (FHD)\n                {768: 1366}, //\n                {720: 1280}, // 720p(HD)\n                {576: 1024},\n                {480: 853}, // 480p\n                {360: 640}, // 360p (nHD)\n                {180: 320}\n            ]\n        },\n        {\n            '4x3': [\n                {1200: 1600}, // UXGA\n                {1080: 1440},\n                {720: 960},\n                {600: 800}, // SVGA\n                {576: 768},\n                {480: 640}, // VGA\n                {360: 480},\n                {288: 352}, // CIF\n                {240: 320}, // QVGA\n                {144: 176}, // QCIF\n                {120: 160} // QQVGA\n            ]\n        }\n    ];\n    var resolutionSelectionStrategies = {\n        fallbackToLower: {\n            id: 0,\n            name: 'fallbackToLower'\n        },\n        fallbackToHigher: {\n            id: 1,\n            name: 'fallbackToHigher'\n        },\n        fallbackToLowerThenHigher: {\n            id: 2,\n            name: 'fallbackToLowerThenHigher'\n        },\n        exact: {\n            id: 3,\n            name: 'exact'\n        }\n    };\n\n    function ResolutionProvider(options) {\n        assert.isObject(options, 'options');\n\n        if (options.resolutionSelectionStrategy) {\n            assert.isValidType(options.resolutionSelectionStrategy, resolutionSelectionStrategies, 'options.resolutionSelectionStrategy');\n        }\n\n        if (options.aspectRatio) {\n            assert.isStringNotEmpty(options.aspectRatio, 'options.aspectRatio');\n        }\n\n        if (options.resolutionHeight) {\n            assert.isNumber(options.resolutionHeight, 'options.resolutionHeight');\n        }\n\n        if (options.frameRate) {\n            assert.isNumber(options.frameRate, 'options.frameRate');\n        }\n\n        this._resolutionSelectionStrategy = options.resolutionSelectionStrategy || resolutionSelectionStrategies.fallbackToLowerThenHigher.name;\n        this._defaultAspectRatio = options.aspectRatio || '16x9';\n        this._defaultResolutionHeight = options.resolutionHeight || 720;\n        this._defaultFrameRate = options.frameRate || 15;\n    }\n\n    ResolutionProvider.prototype.getDefaultResolution = function getDefaultResolution() {\n        var aspectRatioHeights = getObjectValueInArray(this._defaultAspectRatio, aspectRatios);\n        var width = getObjectValueInArray(this._defaultResolutionHeight, aspectRatioHeights) || this.calculateWidthByAspectRatio(this._defaultResolutionHeight, this._defaultAspectRatio);\n\n        return {\n            height: this._defaultResolutionHeight,\n            width: width,\n            aspectRatio: this._defaultAspectRatio\n        };\n    };\n\n    ResolutionProvider.prototype.getDefaultFrameRate = function getDefaultFrameRate() {\n        return this._defaultFrameRate;\n    };\n\n    ResolutionProvider.prototype.getNextResolution = function getNextResolution(height, aspectRatio) {\n        assert.isNumber(height, 'height');\n        assert.isStringNotEmpty(aspectRatio, 'aspectRatio');\n\n        switch (this._resolutionSelectionStrategy) {\n        case resolutionSelectionStrategies.fallbackToLower.name:\n            return getNextLowestResolution.call(this, height, aspectRatio);\n        case resolutionSelectionStrategies.fallbackToHigher.name:\n            return getNextHighestResolution.call(this, height, aspectRatio);\n        case resolutionSelectionStrategies.fallbackToLowerThenHigher.name:\n            var nextResolution = null;\n\n            if (height > this._defaultResolutionHeight) {\n                nextResolution = getNextHighestResolution.call(this, height, aspectRatio);\n            } else {\n                nextResolution = getNextLowestResolution.call(this, height, aspectRatio);\n\n                if (!nextResolution || !nextResolution.height) {\n                    nextResolution = getNextHighestResolution.call(this, this._defaultResolutionHeight, this._defaultAspectRatio);\n                }\n            }\n\n            return nextResolution;\n        case resolutionSelectionStrategies.exact.name:\n        default:\n            return;\n        }\n    };\n\n    ResolutionProvider.prototype.canResolveNextResolution = function() {\n        return this._resolutionSelectionStrategy !== resolutionSelectionStrategies.exact.name;\n    };\n\n    ResolutionProvider.prototype.calculateWidthByAspectRatio = function calculateWidthByAspectRatio(height, aspectRatio) {\n        switch (aspectRatio) {\n        case '16x9':\n            return roundUpToNearestEvenNumber((16 / 9) * height);\n        case '4x3':\n            return roundUpToNearestEvenNumber((4 / 3) * height);\n        default:\n            throw new Error('Aspect Ratio not supported');\n        }\n    };\n\n    function roundUpToNearestEvenNumber(value) {\n        assert.isNumber(value, 'value');\n\n        return 2 * Math.floor((value + 1) / 2);\n    }\n\n    function getNextHighestResolution(height, aspectRatio) {\n        var aspectRatioHeights = getObjectValueInArray(aspectRatio, aspectRatios);\n        var aspectRatioIndex = getIndexInArray(aspectRatio, aspectRatios);\n        var heightIndex = getIndexInArray(height.toString(), aspectRatioHeights);\n        var isLargestHeight = heightIndex === 0;\n        var isSmallestAspectRatio = aspectRatios.length - 1 === aspectRatioIndex;\n\n        var newAspectRatio;\n        var newAspectRatioHeights;\n        var newHeight;\n        var newWidth;\n\n        if (!_.isNumber(heightIndex)) {\n            heightIndex = getNextHighestKeyIndex(height, aspectRatioHeights);\n\n            if (!heightIndex) {\n                return;\n            }\n        } else {\n            if (isLargestHeight) {\n                if (isSmallestAspectRatio) {\n                    return null;\n                }\n\n                aspectRatioIndex++;\n\n                newAspectRatio = getIndexKey(aspectRatioIndex, aspectRatios);\n                newAspectRatioHeights = getObjectValueInArray(newAspectRatio, aspectRatios);\n                heightIndex = getNextHighestKeyIndex(this._defaultResolutionHeight, newAspectRatioHeights);\n                newHeight = getIndexKey(heightIndex, aspectRatioHeights);\n                newWidth = this.calculateWidthByAspectRatio(newHeight, newAspectRatio);\n\n                return {\n                    aspectRatio: newAspectRatio,\n                    height: parseInt(newHeight),\n                    width: parseInt(newWidth)\n                };\n            }\n\n            heightIndex--;\n        }\n\n        newAspectRatio = getIndexKey(aspectRatioIndex, aspectRatios);\n        newAspectRatioHeights = getIndexValue(aspectRatioIndex, aspectRatios);\n        newHeight = getIndexKey(heightIndex, newAspectRatioHeights);\n        newWidth = newAspectRatioHeights[heightIndex][newHeight];\n\n        return {\n            aspectRatio: newAspectRatio,\n            height: parseInt(newHeight),\n            width: parseInt(newWidth)\n        };\n    }\n\n    function getNextLowestResolution(height, aspectRatio) {\n        var aspectRatioHeights = getObjectValueInArray(aspectRatio, aspectRatios);\n        var aspectRatioIndex = getIndexInArray(aspectRatio, aspectRatios);\n        var heightIndex = getIndexInArray(height.toString(), aspectRatioHeights);\n        var isSmallestHeight = heightIndex === aspectRatioHeights.length - 1;\n        var isSmallestAspectRatio = aspectRatios.length - 1 === aspectRatioIndex;\n\n        var newAspectRatio;\n        var newAspectRatioHeights;\n        var newHeight;\n        var newWidth;\n\n        if (!_.isNumber(heightIndex)) {\n            heightIndex = getNextLowestKeyIndex(height, aspectRatioHeights);\n\n            if (!heightIndex) {\n                return;\n            }\n        } else {\n            if (isSmallestHeight) {\n                if (isSmallestAspectRatio) {\n                    return null;\n                }\n\n                aspectRatioIndex++;\n\n                newAspectRatio = getIndexKey(aspectRatioIndex, aspectRatios);\n                newHeight = this._defaultResolutionHeight;\n                newWidth = this.calculateWidthByAspectRatio(newHeight, newAspectRatio);\n\n                return {\n                    aspectRatio: newAspectRatio,\n                    height: parseInt(newHeight),\n                    width: parseInt(newWidth)\n                };\n            }\n\n            heightIndex++;\n        }\n\n        newAspectRatio = getIndexKey(aspectRatioIndex, aspectRatios);\n        newAspectRatioHeights = getIndexValue(aspectRatioIndex, aspectRatios);\n        newHeight = getIndexKey(heightIndex, newAspectRatioHeights);\n        newWidth = newAspectRatioHeights[heightIndex][newHeight];\n\n        return {\n            aspectRatio: newAspectRatio,\n            height: parseInt(newHeight),\n            width: parseInt(newWidth)\n        };\n    }\n\n    function getObjectValueInArray(value, collection) {\n        var valueObject = _.find(collection, function(item) {\n            return item.hasOwnProperty(value);\n        });\n\n        return valueObject ? valueObject[value] : null;\n    }\n\n    function getIndexInArray(value, collection) {\n        return _.findIndex(collection, function(item) {\n            return item.hasOwnProperty(value);\n        });\n    }\n\n    function getIndexKey(index, collection) {\n        var keys = _.keys(collection[index]);\n\n        return keys[0];\n    }\n\n    function getIndexValue(index, collection) {\n        var keys = _.keys(collection[index]);\n\n        return collection[index][keys[0]];\n    }\n\n    function getNextHighestKeyIndex(value, collection) {\n        if ( _.keys(collection[0])[0] < value) {\n            return null;\n        }\n\n        return _.reduce(collection, function(closestIndex, nextItem, index) {\n            if (!closestIndex) {\n                return index;\n            }\n\n            var currentClosestKey = _.keys(collection[closestIndex])[0];\n            var nextKey = _.keys(nextItem)[0];\n\n            if (nextKey < value) {\n                return closestIndex;\n            }\n\n            return Math.abs(value - nextKey) < Math.abs(value - currentClosestKey) ? index : closestIndex;\n        });\n    }\n\n    function getNextLowestKeyIndex(value, collection) {\n        if ( _.keys(collection[collection.length - 1])[0] > value) {\n            return null;\n        }\n\n        return _.reduce(collection, function(closestIndex, nextItem, index) {\n            if (!closestIndex) {\n                return index;\n            }\n\n            var currentClosestKey = _.keys(collection[closestIndex])[0];\n            var nextKey = _.keys(nextItem)[0];\n\n            if (nextKey > value) {\n                return closestIndex;\n            }\n\n            return Math.abs(value - nextKey) < Math.abs(value - currentClosestKey) ? index : closestIndex;\n        });\n    }\n\n    return ResolutionProvider;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/userMedia/ResolutionProvider.js\n// module id = 101\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* global chrome */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-web-observable',\n    'phenix-rtc'\n], function(_, assert, observable, phenixRTC) {\n    'use strict';\n\n    var defaultChromePCastScreenSharingExtensionId = 'icngjadgidcmifnehjcielbmiapkhjpn';\n    var defaultFirefoxPCastScreenSharingAddOn = _.freeze({\n        url: 'https://addons.mozilla.org/firefox/downloads/file/474686/pcast_screen_sharing-1.0.3-an+fx.xpi',\n        iconUrl: 'https://phenixp2p.com/public/images/phenix-logo-unicolor-64x64.png',\n        hash: 'sha256:4972e9718ea7f7c896abc12d1a9e664d5f3efe498539b082ab7694f9d7af4f3b'\n    });\n    var firefoxInstallationCheckInterval = 100;\n    var firefoxMaxInstallationChecks = 450;\n    var minimumSupportFirefoxVersionForUnWhiteListedScreenShare = 52;\n\n    function ScreenShareExtensionManager(options, logger) {\n        options = options || {};\n\n        assert.isObject(options, 'options');\n        assert.isObject(logger, 'logger');\n\n        this._logger = logger;\n        this._screenSharingExtensionId = options.screenSharingExtensionId || getDefaultExtensionId();\n        this._screenSharingAddOn = options.screenSharingAddOn || defaultFirefoxPCastScreenSharingAddOn;\n        this._screenSharingEnabled = false;\n        this._isInitializedObservable = new observable.Observable(false);\n\n        if (phenixRTC.browser === 'Chrome' && this._screenSharingExtensionId) {\n            addLinkHeaderElement.call(this);\n        }\n\n        checkForScreenSharingCapability.call(this, _.bind(handleCheckForScreenSharing, this));\n    }\n\n    ScreenShareExtensionManager.prototype.isScreenSharingEnabled = function(callback) {\n        var that = this;\n\n        return waitForInitialized.call(this, function() {\n            return callback(that._screenSharingEnabled);\n        });\n    };\n\n    ScreenShareExtensionManager.prototype.installExtension = function(callback) {\n        return waitForInitialized.call(this, _.bind(installScreenShareExtension, this, callback));\n    };\n\n    ScreenShareExtensionManager.prototype.getScreenSharingConstraints = function(options, callback) {\n        return waitForInitialized.call(this, _.bind(getScreenSharingConstraints, this, options, callback));\n    };\n\n    ScreenShareExtensionManager.prototype.toString = function() {\n        return 'ScreenShareExtensionManager[' + phenixRTC.browser + ']';\n    };\n\n    function handleCheckForScreenSharing(isEnabled) {\n        this._isInitializedObservable.setValue(true);\n\n        this._screenSharingEnabled = isEnabled;\n    }\n\n    function checkForScreenSharingCapability(callback) {\n        var that = this;\n\n        if (phenixRTC.browser === 'Chrome' && that._screenSharingExtensionId) {\n            var runtimeEnvironment = getRuntime.call(this);\n\n            if (!runtimeEnvironment) {\n                return callback(false);\n            }\n\n            try {\n                runtimeEnvironment.sendMessage(that._screenSharingExtensionId, {type: 'version'}, function(response) {\n                    if (response && response.status === 'ok') {\n                        that._logger.info('Screen sharing enabled using version [%s]', response.version);\n                        callback(true);\n                    } else {\n                        that._logger.info('Screen sharing NOT available');\n                        callback(false);\n                    }\n                });\n            } catch (e) {\n                if (e.message) {\n                    that._logger.warn(e.message, e);\n                }\n\n                callback(false);\n            }\n        } else if (phenixRTC.browser === 'Firefox' && phenixRTC.browserVersion >= minimumSupportFirefoxVersionForUnWhiteListedScreenShare) {\n            callback(true);\n        } else if (phenixRTC.browser === 'Firefox' && typeof phenixRTC.global.PCastScreenSharing === 'object') {\n            callback(true);\n        } else {\n            callback(false);\n        }\n    }\n\n    function waitForInitialized(callback) {\n        if (this._isInitializedObservable.getValue()) {\n            return callback();\n        }\n\n        var initializedSubscription = this._isInitializedObservable.subscribe(function() {\n            initializedSubscription.dispose();\n\n            return callback();\n        });\n    }\n\n    function getChromeWebStoreLink() {\n        return 'https://chrome.google.com/webstore/detail/' + this._screenSharingExtensionId;\n    }\n\n    function addLinkHeaderElement() {\n        var chromeWebStoreUrl = getChromeWebStoreLink.call(this);\n\n        if (typeof document !== \"object\") {\n            return;\n        }\n\n        var links = document.getElementsByTagName('link');\n\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].href === chromeWebStoreUrl) {\n                // Link already present\n                return;\n            }\n        }\n\n        this._logger.debug('Adding Chrome Web Store link [%s]', chromeWebStoreUrl);\n\n        var link = document.createElement('link');\n\n        link.rel = 'chrome-webstore-item';\n        link.href = chromeWebStoreUrl;\n\n        document.getElementsByTagName('head')[0].appendChild(link);\n    }\n\n    function getScreenSharingConstraints(options, callback) {\n        switch (phenixRTC.browser) {\n        case 'Chrome':\n            return requestMediaSourceIdWithRuntime.call(this, function(error, response) {\n                if (error || (response && response.status !== 'ok')) {\n                    return callback(error, response);\n                }\n\n                // Default to allow the user to request audio if using an older extension or not providing the options\n                // If it fails to request the audio the user will receive an error\n                if (!response.data && !response.options) {\n                    response.options = {canRequestAudioTrack: true};\n                }\n\n                // TODO(DY) Remove once customers have updated their extensions\n                if (response.data && _.hasIndexOrKey(response.data, 'hasAudio') && !response.options) {\n                    response.options = {canRequestAudioTrack: response.data.hasAudio};\n                }\n\n                callback(null, {\n                    status: 'ok',\n                    constraints: mapChromeConstraints(options, response.streamId, response.options)\n                });\n            });\n        case 'Firefox':\n            callback(null, {\n                status: 'ok',\n                constraints: mapNewerConstraints(options)\n            });\n\n            break;\n        default:\n            callback(new Error('not-supported'), {status: 'not-supported'});\n\n            break;\n        }\n    }\n\n    function requestMediaSourceIdWithRuntime(callback) {\n        var that = this;\n        var runtimeEnvironment = getRuntime.call(this);\n\n        if (!runtimeEnvironment) {\n            return callback(new Error('not-available'));\n        }\n\n        try {\n            runtimeEnvironment.sendMessage(that._screenSharingExtensionId, {\n                type: 'get-desktop-media',\n                sources: ['screen', 'window', 'tab', 'audio']\n            }, function(response) {\n                var shouldCheckIfScreenShareStillInstalled = !response;\n\n                if (shouldCheckIfScreenShareStillInstalled) {\n                    return checkForScreenSharingCapability.call(that, function(isEnabled) {\n                        handleCheckForScreenSharing.call(that, isEnabled);\n\n                        return callback(new Error('extension-failure'));\n                    });\n                }\n\n                if (response.status !== 'ok') {\n                    return callback(new Error(response.status), response);\n                }\n\n                callback(null, response);\n            });\n        } catch (e) {\n            if (e.message) {\n                that._logger.warn(e.message);\n            }\n\n            callback(e, {status: 'failed'});\n        }\n    }\n\n    function mapChromeConstraints(options, id, captureOptions) {\n        var constraints = {};\n\n        if (_.isObject(options) && _.isObject(options.screen)) {\n            constraints.video = options.screen;\n        }\n\n        if (_.isObject(options) && _.isObject(options.screenAudio) && captureOptions.canRequestAudioTrack) {\n            constraints.audio = options.screenAudio;\n        }\n\n        if (options.screen) {\n            _.set(constraints, ['video', 'mandatory'], {\n                chromeMediaSource: 'desktop',\n                chromeMediaSourceId: id\n            });\n        }\n\n        if (options.screenAudio && captureOptions.canRequestAudioTrack) {\n            _.set(constraints, ['audio', 'mandatory'], {\n                chromeMediaSource: 'system',\n                chromeMediaSourceId: id\n            });\n        }\n\n        return constraints;\n    }\n\n    function mapNewerConstraints(options, id) {\n        var constraints = {video: {}};\n\n        if (typeof options === 'object' && typeof options.screen === 'object') {\n            constraints.video = options.screen;\n        }\n\n        if (id) {\n            constraints.video.mediaSourceId = id;\n        }\n\n        constraints.video.mediaSource = constraints.video.mediaSource || 'window';\n\n        return constraints;\n    }\n\n    function installScreenShareExtension(callback) {\n        var that = this;\n\n        if (that._screenSharingEnabled) {\n            return;\n        }\n\n        var installCallback = function installCallback(error, status) {\n            if (status === 'cancelled') {\n                return callback(null, {status: 'cancelled'});\n            }\n\n            if (status !== 'ok') {\n                return callback(new Error('screen-sharing-installation-failed'), {status: status});\n            }\n\n            checkForScreenSharingCapability.call(that, function(screenSharingEnabled) {\n                that._screenSharingEnabled = screenSharingEnabled;\n\n                if (!that._screenSharingEnabled) {\n                    return callback(new Error('screen-sharing-installation-failed'), {status: status});\n                }\n\n                callback(null, {status: 'ok'});\n            });\n        };\n\n        switch (phenixRTC.browser) {\n        case 'Chrome':\n            tryInstallChromeScreenSharingExtension.call(that, installCallback);\n\n            break;\n        case 'Firefox':\n            tryInstallFirefoxScreenSharingExtension.call(that, installCallback);\n\n            break;\n        default:\n            callback(new Error('not-supported'), {status: 'not-supported'});\n\n            break;\n        }\n    }\n\n    function tryInstallChromeScreenSharingExtension(callback) {\n        var that = this;\n        var chromeWebStoreUrl = getChromeWebStoreLink.call(this);\n\n        try {\n            chrome.webstore.install(chromeWebStoreUrl, function successCallback() {\n                return callback(null, 'ok');\n            }, function failureCallback(reason) {\n                if (reason) {\n                    if (reason.match(/cancelled/ig)) {\n                        that._logger.info('User cancelled screen sharing');\n\n                        return callback(new Error(reason), 'cancelled');\n                    }\n\n                    that._logger.warn(reason);\n                }\n\n                return callback(new Error(reason || 'failed'), 'failed');\n            });\n        } catch (e) {\n            if (e.message) {\n                that._logger.warn(e.message);\n            }\n\n            callback(e, 'failed');\n        }\n    }\n\n    function tryInstallFirefoxScreenSharingExtension(callback) {\n        try {\n            var params = {\n                \"PCast Screen Sharing\": {\n                    URL: this._screenSharingAddOn.url,\n                    IconURL: this._screenSharingAddOn.iconUrl,\n                    Hash: this._screenSharingAddOn.hash,\n                    toString: function() {\n                        return this.URL;\n                    }\n                }\n            };\n            var attemptsLeft = firefoxMaxInstallationChecks;\n            var intervalId;\n            var success = function success() {\n                if (intervalId) {\n                    clearInterval(intervalId);\n                }\n\n                callback(null, 'ok');\n            };\n\n            var failure = function failure() {\n                if (intervalId) {\n                    clearInterval(intervalId);\n                }\n\n                callback(new Error('failed'), 'failed');\n            };\n\n            intervalId = setInterval(function() {\n                if (typeof phenixRTC.global.PCastScreenSharing === 'object') {\n                    return success();\n                }\n\n                if (attemptsLeft-- < 0) {\n                    return failure();\n                }\n            }, firefoxInstallationCheckInterval);\n\n            InstallTrigger.install(params, function xpiInstallCallback(url, status) { // eslint-disable-line no-undef\n                // Callback only works for verified sites\n                if (status === 0) {\n                    success();\n                } else {\n                    failure();\n                }\n            });\n        } catch (e) {\n            if (e.message) {\n                this._logger.warn(e.message);\n            }\n\n            callback('failed', e);\n        }\n    }\n\n    function getRuntime() {\n        var that = this;\n\n        switch (phenixRTC.browser) {\n        case 'Chrome':\n            if (typeof chrome === 'undefined' || !chrome.runtime || !chrome.runtime.sendMessage) {\n                that._logger.info('Screen sharing NOT available. Runtime not supported');\n\n                return null;\n            }\n\n            return chrome.runtime;\n        case 'Firefox':\n        default:\n            return null;\n        }\n    }\n\n    function getDefaultExtensionId() {\n        switch (phenixRTC.browser) {\n        case 'Chrome':\n            return defaultChromePCastScreenSharingExtensionId;\n        case 'Firefox':\n        default:\n            return '';\n        }\n    }\n\n    return ScreenShareExtensionManager;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/userMedia/ScreenShareExtensionManager.js\n// module id = 102\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ndefine([\n    'phenix-web-lodash-light',\n    'phenix-web-assert',\n    'phenix-rtc'\n], function(_, assert, rtc) {\n    'use strict';\n\n    var listenForMediaStreamTrackChangesTimeout = 2000;\n\n    function UserMediaProvider(logger, screenShareExtensionManager, onScreenShare) {\n        assert.isObject(logger, 'logger');\n        assert.isObject(screenShareExtensionManager, 'screenShareExtensionManager');\n\n        if (onScreenShare) {\n            assert.isFunction(onScreenShare, 'onScreenShare');\n        }\n\n        this._logger = logger;\n        this._screenShareExtensionManager = screenShareExtensionManager;\n        this._onScreenShare = onScreenShare;\n    }\n\n    UserMediaProvider.prototype.getUserMedia = function(options, callback) {\n        assert.isObject(options, 'options');\n        assert.isFunction(callback, 'callback');\n\n        getUserMedia.call(this, options, callback);\n    };\n\n    function getUserMedia(options, callback) {\n        var that = this;\n\n        var onUserMediaSuccess = function onUserMediaSuccess(status, stream) {\n            if (that._gumStreams) {\n                that._gumStreams.push(stream);\n            }\n\n            callback(that, status, stream);\n        };\n\n        var onUserMediaFailure = function onUserMediaFailure(status, stream, error) {\n            if (options.screenAudio) {\n                that._logger.warn('Screen capture with audio is only supported on Windows or Chrome OS.');\n            }\n\n            callback(that, status, stream, error);\n        };\n\n        var hasScreen = options.screen || options.screenAudio;\n        var hasVideoOrAudio = options.video || options.audio;\n\n        if (!(hasScreen && hasVideoOrAudio)) {\n            return getUserMediaStream.call(that, options, onUserMediaSuccess, onUserMediaFailure);\n        }\n\n        return getUserMediaStream.call(that, {screen: options.screen}, function success(status, screenStream) {\n            return getUserMediaStream.call(that, {\n                audio: options.audio,\n                video: options.video\n            }, function screenSuccess(status, stream) {\n                addTracksToWebRTCStream(stream, screenStream.getTracks());\n\n                onUserMediaSuccess(status, stream);\n            }, function failure(status, stream, error) {\n                stopWebRTCStream(screenStream);\n\n                onUserMediaFailure(status, stream, error);\n            });\n        }, onUserMediaFailure);\n    }\n\n    function getUserMediaStream(options, successCallback, failureCallback) {\n        var that = this;\n\n        var onUserMediaCancelled = function onUserMediaCancelled() {\n            failureCallback('cancelled', null);\n        };\n\n        var onUserMediaFailure = function onUserMediaFailure(e) {\n            failureCallback(getUserMediaErrorStatus(e), undefined, e);\n        };\n\n        var onUserMediaSuccess = function onUserMediaSuccess(stream) {\n            wrapNativeMediaStream.call(that, stream);\n\n            successCallback('ok', stream);\n        };\n\n        return getUserMediaConstraints.call(this, options, function(error, response) {\n            if (_.get(response, ['status']) !== 'ok') {\n                return onUserMediaFailure(error);\n            }\n\n            if (response.status === 'cancelled') {\n                return onUserMediaCancelled();\n            }\n\n            var constraints = response.constraints;\n\n            if (that._onScreenShare && (options.screen || options.screenAudio) && rtc.browser === 'Chrome') {\n                constraints = that._onScreenShare(constraints);\n\n                if (!constraints) {\n                    throw new Error('onScreenShare must return an object of user media constraints');\n                }\n            }\n\n            try {\n                rtc.getUserMedia(constraints, onUserMediaSuccess, onUserMediaFailure);\n            } catch (e) {\n                onUserMediaFailure(e);\n            }\n        });\n    }\n\n    function getUserMediaConstraints(options, callback) {\n        var that = this;\n\n        if (options.screen) {\n            return that._screenShareExtensionManager.isScreenSharingEnabled(function(isEnabled) {\n                if (isEnabled) {\n                    return that._screenShareExtensionManager.getScreenSharingConstraints(options, callback);\n                }\n\n                return that._screenShareExtensionManager.installExtension(function(error, response) {\n                    if (error || (response && response.status !== 'ok')) {\n                        return callback(error, response);\n                    }\n\n                    return that._screenShareExtensionManager.getScreenSharingConstraints(options, callback);\n                });\n            });\n        }\n\n        var constraints = {\n            audio: options.audio || false,\n            video: options.video || false\n        };\n\n        callback(null, {\n            status: 'ok',\n            constraints: constraints\n        });\n    }\n\n    var getUserMediaErrorStatus = function getUserMediaErrorStatus(e) {\n        var status;\n\n        if (e.code === 'unavailable') {\n            status = 'conflict';\n        } else if (e.message === 'permission-denied') {\n            status = 'permission-denied';\n        } else if (e.name === 'PermissionDeniedError') { // Chrome\n            status = 'permission-denied';\n        } else if (e.name === 'InternalError' && e.message === 'Starting video failed') { // FF (old getUserMedia API)\n            status = 'conflict';\n        } else if (e.name === 'SourceUnavailableError') { // FF\n            status = 'conflict';\n        } else if (e.name === 'SecurityError' && e.message === 'The operation is insecure.') { // FF\n            status = 'permission-denied';\n        } else {\n            status = 'failed';\n        }\n\n        return status;\n    };\n\n    function wrapNativeMediaStream(stream) {\n        var lastTrackEnabledStates = {};\n        var lastTrackReadyStates = {};\n        var that = this;\n\n        setTimeout(function listenForTrackChanges() {\n            if (isStreamStopped(stream)) {\n                return;\n            }\n\n            _.forEach(stream.getTracks(), function(track) {\n                if (rtc.global.Event && _.hasIndexOrKey(lastTrackEnabledStates, track.id) && lastTrackEnabledStates[track.id] !== track.enabled) {\n                    var trackEnabledChangeEvent = new rtc.global.Event('trackenabledchange');\n\n                    trackEnabledChangeEvent.data = track;\n\n                    track.dispatchEvent(trackEnabledChangeEvent);\n\n                    that._logger.info('[%s] Detected track [%s] enabled change to [%s]', stream.id, track.id, track.enabled);\n                }\n\n                if (rtc.global.Event && _.hasIndexOrKey(lastTrackReadyStates, track.id) && lastTrackReadyStates[track.id] !== track.readyState) {\n                    var readyStateChangeEvent = new rtc.global.Event('readystatechange');\n\n                    readyStateChangeEvent.data = track;\n\n                    track.dispatchEvent(readyStateChangeEvent);\n\n                    that._logger.info('[%s] Detected track [%s] Ready State change to [%s]', stream.id, track.id, track.readyState);\n                }\n\n                lastTrackEnabledStates[track.id] = track.enabled;\n                lastTrackReadyStates[track.id] = track.readyState;\n            });\n\n            setTimeout(listenForTrackChanges, listenForMediaStreamTrackChangesTimeout);\n        }, listenForMediaStreamTrackChangesTimeout);\n    }\n\n    function addTracksToWebRTCStream(stream, tracks) {\n        if (!stream || !_.isFunction(stream.addTrack)) {\n            return;\n        }\n\n        _.forEach(tracks, function(track) {\n            stream.addTrack(track);\n        });\n    }\n\n    function isStreamStopped(stream) {\n        return _.reduce(stream.getTracks(), function(isStopped, track) {\n            return isStopped && isTrackStopped(track);\n        }, true);\n    }\n\n    function isTrackStopped(track) {\n        assert.isNotUndefined(track, 'track');\n\n        return track.readyState === 'ended';\n    }\n\n    function stopWebRTCStream(stream) {\n        if (stream && _.isFunction(stream.stop)) {\n            stream.stop();\n        }\n\n        if (stream && _.isFunction(stream.getTracks)) {\n            var tracks = stream.getTracks();\n\n            for (var i = 0; i < tracks.length; i++) {\n                var track = tracks[i];\n\n                track.stop();\n            }\n        }\n    }\n\n    return UserMediaProvider;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sdk/userMedia/UserMediaProvider.js\n// module id = 103\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// fs (ignored)\n// module id = 104\n// module chunks = 0","/**\n * Copyright 2018 PhenixP2P Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\ndefine('phenix-web-sdk', [\n    'phenix-rtc',\n    'phenix-web-logging',\n    './sdk/PCast',\n    './sdk/room/RoomService',\n    './sdk/audio/AudioSpeakerDetector',\n    './sdk/bandwidth/BandwidthMonitor',\n    './sdk/userMedia/UserMediaResolver',\n    './sdk/express/PCastExpress',\n    './sdk/express/RoomExpress',\n    './sdk/express/ChannelExpress'\n], function(rtc, logging, PCast, RoomService, AudioSpeakerDetector, BandwidthMonitor, UserMediaResolver, PCastExpress, RoomExpress, ChannelExpress) {\n    rtc.global.PhenixPCast = PCast;\n\n    return {\n        PCast: PCast,\n        RoomService: RoomService,\n        AudioSpeakerDetector: AudioSpeakerDetector,\n        BandwidthMonitor: BandwidthMonitor,\n        UserMediaResolver: UserMediaResolver,\n        logging: logging,\n        RTC: rtc,\n        express: {\n            PCastExpress: PCastExpress,\n            RoomExpress: RoomExpress,\n            ChannelExpress: ChannelExpress\n        }\n    };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/web-sdk.js\n// module id = 105\n// module chunks = 0"],"sourceRoot":""}